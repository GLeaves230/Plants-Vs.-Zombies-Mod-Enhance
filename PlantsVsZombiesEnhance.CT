<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"指针组"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"游戏基址"</Description>
          <LastState Value="00667BA0" RealAddress="03589F88"/>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>6a9ec0</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>2</ID>
              <Description>"关卡基址"</Description>
              <LastState Value="00000000" RealAddress="0358A6F0"/>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>6a9ec0</Address>
              <Offsets>
                <Offset>768</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>3</ID>
                  <Description>"当前关卡阳光值"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>6a9ec0</Address>
                  <Offsets>
                    <Offset>5560</Offset>
                    <Offset>768</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>85</ID>
                  <Description>"当前关卡僵尸类"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>6a9ec0</Address>
                  <Offsets>
                    <Offset>24</Offset>
                    <Offset>90</Offset>
                    <Offset>768</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"当前关卡ID"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>6a9ec0</Address>
                  <Offsets>
                    <Offset>5550</Offset>
                    <Offset>768</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>217</ID>
                  <Description>"当前关卡僵尸出怪列表[1字节]57B0 +1下一只"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>6a9ec0</Address>
                  <Offsets>
                    <Offset>57B0</Offset>
                    <Offset>768</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>293</ID>
                  <Description>"当前关卡卡槽属性"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>6a9ec0</Address>
                  <Offsets>
                    <Offset>28+34</Offset>
                    <Offset>144</Offset>
                    <Offset>768</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>186</ID>
              <Description>"Debug模式启动布尔值"</Description>
              <LastState Value="00" RealAddress="0358A858"/>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>6a9ec0</Address>
              <Offsets>
                <Offset>8D0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>207</ID>
                  <Description>"Debug模式 无限阳光启动布尔值"</Description>
                  <LastState Value="01" RealAddress="0358A85B"/>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>6a9ec0</Address>
                  <Offsets>
                    <Offset>8D3</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>208</ID>
                  <Description>"Debug模式 无限金钱启动布尔值"</Description>
                  <LastState Value="01" RealAddress="0358A85C"/>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>6a9ec0</Address>
                  <Offsets>
                    <Offset>8D4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>209</ID>
                  <Description>"Debug模式 僵尸不进家启动布尔值"</Description>
                  <LastState Value="00" RealAddress="0358A85D"/>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>6a9ec0</Address>
                  <Offsets>
                    <Offset>8D5</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>187</ID>
              <Description>"Expert模式启动布尔值"</Description>
              <LastState Value="00" RealAddress="0358A859"/>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>6a9ec0</Address>
              <Offsets>
                <Offset>8D1</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>188</ID>
              <Description>"Enhance模式启动布尔值"</Description>
              <LastState Value="01" RealAddress="0358A85A"/>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>6a9ec0</Address>
              <Offsets>
                <Offset>8D2</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"存档基址"</Description>
              <LastState Value="03633E60" RealAddress="0358A7B4"/>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>6a9ec0</Address>
              <Offsets>
                <Offset>82C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>33</ID>
                  <Description>"存档关卡ID"</Description>
                  <LastState Value="28" RealAddress="03633E84"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>6a9ec0</Address>
                  <Offsets>
                    <Offset>24</Offset>
                    <Offset>82C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"脚本组"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>104</ID>
          <Description>"僵王关修改"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>105</ID>
              <Description>"Zombie类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>106</ID>
                  <Description>"Zombie::DrawBungeeCord 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>107</ID>
                      <Description>"冒险模式僵王的蹦极绳子绘制 930000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
930000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [ecx+24],#60
jne 0052D911

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
52D844:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52D844:
db 83 79 24 32 0F 85 C3 00 00 00
//cmp dword ptr [ecx+24],32
//jne 0052D911
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>112</ID>
              <Description>"Music类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>115</ID>
                  <Description>"Music::StartGameMusic 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>117</ID>
                      <Description>"冒险模式僵王关音乐播放修改 930400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
930400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [eax+24],#60
jne 0045B7D1

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
45B7A9:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
45B7A9:
db 83 78 24 32 75 22
//cmp dword ptr [eax+24],32
//jne 0045B7D1
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>124</ID>
              <Description>"Challenge类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>125</ID>
                  <Description>"Challenge::PlayBossEnter 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>126</ID>
                      <Description>"冒险模式僵王关判断修改 930800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
930800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [ecx+24],#60
jne 0043C004

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
43BFEA:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43BFEA:
db 83 79 24 32 75 14
//cmp dword ptr [ecx+24],32
//jne 0043C004
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>127</ID>
                  <Description>"CutScene::AnimateBoard 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>128</ID>
                      <Description>"冒险模式僵王关背景音乐修改1 930C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
930C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [ecx+24],#60
je 0043C0D1

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
43C0B4:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43C0B4:
db 83 79 24 32 74 17
//cmp dword ptr [ecx+24],32
//je 0043C0D1
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>129</ID>
                      <Description>"冒险模式僵王关背景音乐修改2 931000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
931000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [edx+24],#60
je 0043C120

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
43C103:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43C103:
db 83 7A 24 32 74 17
//cmp dword ptr [edx+24],32
//je 0043C120
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>130</ID>
                  <Description>"Challenge::InitLevel 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>131</ID>
                      <Description>"冒险模式初始化僵王关卡传送带卡槽 931400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
931400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [edx+24],#60
jne 0041F4DF

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
41F496:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
41F496:
db 83 7A 24 32 75 43
//cmp dword ptr [edx+24],32
//jne 0041F4DF
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>132</ID>
                  <Description>"Challenge::UpdateConveyorBelt 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>133</ID>
                      <Description>"冒险模式僵王传送带更新 931800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
931800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [ecx+24],#60
jne 00422D5D

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
422D4F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
422D4F:
db 83 79 24 32 75 08
//cmp dword ptr [ecx+24],32
//jne 00422D5D
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>134</ID>
                  <Description>"Challenge::UpdateZombieSpawning 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>135</ID>
                      <Description>"冒险模式僵王关出怪更新修改 931C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
931C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [edx+24],#60
je 004265AC

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
4265CD:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4265CD:
db 83 7A 24 32 74 D9
//cmp dword ptr [edx+24],32
//je 004265AC
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>136</ID>
              <Description>"CutScene类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>140</ID>
                  <Description>"CutScene::StartLevelIntro 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>142</ID>
                      <Description>"冒险模式僵王关判断修改1 932000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
932000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [ecx+24],#60
jne 0043AF64

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
43AF4C:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43AF4C:
db 83 79 24 32 75 12
//cmp dword ptr [ecx+24],32
//jne 0043AF64
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>143</ID>
                      <Description>"冒险模式僵王关判断修改2 932400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
932400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [ecx+24],#60
jne 0043AFF5

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
43AFE6:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43AFE6:
db 83 79 24 32 75 09
//cmp dword ptr [ecx+24],32
//jne 0043AFF5
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>144</ID>
                      <Description>"冒险模式僵王关判断修改3 932800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
932800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [edx+24],#60
je 0043B097

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
43B068:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43B068:
db 83 7A 24 32 74 29
//cmp dword ptr [edx+24],32
//je 0043B097
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>145</ID>
                  <Description>"CutScene::PlaceStreetZombies 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>146</ID>
                      <Description>"冒险模式僵王关出怪预览显示修改 932C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
932C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [eax+24],#60
je 0043A67E

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
43A180:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43A180:
db 83 78 24 32 0F 84 F4 04 00 00
//cmp dword ptr [eax+24],32
//je 0043A67E
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>150</ID>
              <Description>"LawnApp类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>151</ID>
                  <Description>"LawnApp::IsContinousChallenge 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>152</ID>
                      <Description>"冒险模式僵王关判断 933000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
933000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [eax+24],#60
je 004537A0

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
45377D:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
45377D:
db 83 78 24 32 74 1D
//cmp dword ptr [eax+24],32
//je 004537A0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>153</ID>
                  <Description>"LawnApp::IsZombossLevel 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>154</ID>
                      <Description>"冒险模式僵王相关关卡判断 933400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
933400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [eax+24],#60
je 004539E4

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
4539F1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4539F1:
db 83 78 24 32 74 ED
//cmp dword ptr [eax+24],32
//je 004539E4
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>155</ID>
                  <Description>"LawnApp::UpdatePlayerProfileForFinishingLevel 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>156</ID>
                      <Description>"冒险模式最后一关设置 933800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
933800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp ecx,#60 //cmp ecx,X X为关卡id，作为周目结尾使用
mov edx,[esi+0000082C]

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
452337:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
452337:
db 83 F9 32 8B 96 2C 08 00 00
//cmp ecx,32
//mov edx,[esi+0000082C]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>159</ID>
              <Description>"Board类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>160</ID>
                  <Description>"Board::IsConveyorBeltLevel 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>161</ID>
                      <Description>"冒险模式僵王关传送带判断 933C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
933C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [edx+24],#60
je 0041BECF

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
41BE74:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
41BE74:
db 83 7A 24 32 74 55
//cmp dword ptr [edx+24],32
//je 0041BECF
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>162</ID>
                  <Description>"Board::UpdateProgressMeter 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>163</ID>
                      <Description>"冒险模式僵王关进度条更新修改 934000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
934000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [ecx+24],#60
jne 004142FC

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
41429B:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
41429B:
db 83 79 24 32 75 5B
//cmp dword ptr [ecx+24],32
//jne 004142FC
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>164</ID>
                  <Description>"Board::ProgressMeterHasFlags 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>165</ID>
                      <Description>"冒险模式僵王关旗帜显示修改 934400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
934400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [edx+24],#60
je 004174FD

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
4174BE:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4174BE:
db 83 7A 24 32 74 39
//cmp dword ptr [edx+24],32
//je 004174FD
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>166</ID>
                  <Description>"Board::HasProgressMeter 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>167</ID>
                      <Description>"冒险模式僵王关进度条是否显示修改 934800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
934800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [eax+24],#60
je 00417447

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
4173F1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4173F1:
db 83 78 24 32 74 50
//cmp dword ptr [eax+24],32
//je 00417447
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>168</ID>
                  <Description>"Board::FadeOutLevel 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>169</ID>
                      <Description>"冒险模式6-10完全胜利音效播放 934C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
934C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp dword ptr [edi+00005550],#60

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
40C4CA:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40C4CA:
db 83 BF 50 55 00 00 32
//cmp dword ptr [edi+00005550],32
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>170</ID>
          <Description>"其他修改"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>52</ID>
              <Description>"Zombie类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>90</ID>
                  <Description>"Zombie::Zombie 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>88</ID>
                      <Description>"新伽刚特尔初始化跳转 935000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
935000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#33
je 00523D10
originalcode:
cmp eax,#23
je 00523D10

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
522DB8:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
522DB8:
db 83 F8 17 0F 84 4F 0F 00 00
//cmp eax,17
//je 00523D10
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89</ID>
                      <Description>"新伽刚特尔图层初始化 935400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
935400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push -1
push 794500
mov eax,edi
call 5331C0
originalcode:
mov eax,[edi+6C]
cmp eax,-02

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
523E4E:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
523E4E:
db 8B 47 6C 83 F8 FE
//mov eax,[edi+6C]
//cmp eax,-02
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>43</ID>
              <Description>"Challenge类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>46</ID>
              <Description>"CutScene类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>86</ID>
                  <Description>"CutScene::LoadIntroBoard 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>96</ID>
                      <Description>"引入关卡僵尸修改 936800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
936800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode: //ID, edi = CuScene
push 0 // Y
push #0 // Id
push (float)515 // X
call AddZombie
push 1 // Y
push #0 // Id
push (float)520 // X
call AddZombie
push 2 // Y
push #2 // Id
push (float)520 // X
call AddZombie
push 2 // Y
push #23 // Id
push (float)720 // X
call AddZombie
push 4 // Y
push #32 // Id
push (float)720 // X
call AddZombie
push 3 // Y
push #1 // Id
push (float)680 // X
call AddZombie
push 4 // Y
push #4 // Id
push (float)680 // X
call AddZombie
push 2 // Y
push #4 // Id
push (float)700 // X
call AddZombie
push 3// Y
push #21 // Id
push (float)680 // X
call AddZombie
push 0// Y
push #22 // Id
push (float)720 // X
call AddZombie
jmp 43E861
exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
AddZombie:
push ebp
lea ebp,[esp+4]
pushad
mov esi,[edi+04]
mov ecx,[esi+00000098]
sub ecx,ebx
cmp [esi+000000A0],ecx
jb AddZombie_1
xor esi,esi
jmp AddZombeiSetPosX
AddZombie_1:
mov eax,00000005
mov byte ptr [ebp+0C+10],00
call 005AF400
test eax,eax
jne AddZombie_2
mov [ebp+0C+10],bl
AddZombie_2:
add esi,00000090
call 0041DDA0
mov edx,[ebp+0C+10]
push 00 //theFromWave
push 00 // Zombie* theParentZombie
push edx // theVariant
mov esi,eax
push [ebp+8] // ID
push esi //Zombie *this
mov eax,[ebp+C]
call 00522580
AddZombeiSetPosX:
fld [ebp+4]
push [ebp+C]
mov eax,esi
fstp dword ptr [esi+2C]
call 00531880
fstp dword ptr [ebp+0C+10]
fld dword ptr [ebp+0C+10] //纵坐标
push [ebp+C]
pop [esi+1C]
fst dword ptr [esi+30]
//mov [esi+20],00049F9C
fld dword ptr [esi+2C]
call 006397D0
mov [esi+08],eax
call 006397D0
mov [esi+0C],eax
popad
pop ebp
ret 3*4
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
43DF95:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43DF95:
db 8B 77 04 8B 8E 98 00 00 00
//mov esi,[edi+04]
//mov ecx,[esi+00000098]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>87</ID>
                      <Description>"引入关卡植物修改 936C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
936C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push ecx
mov ecx,2
for_start_X:
push eax
mov eax,4
for_start_Y:
push #33 //植物类型
push eax //Y
push ecx //X
call AddPlants
sub eax,1
cmp eax,0
jge for_start_Y
sub ecx,1
cmp ecx,0
jge for_start_X
pop ecx
push #37 //植物类型
push 3 //Y
push 1 //X
call AddPlants
push #37 //植物类型
push 1 //Y
push 1 //X
call AddPlants
push #10 //植物类型
push 2 //Y
push 2 //X
call AddPlants
push #10 //植物类型
push 2 //Y
push 1 //X
call AddPlants
jmp 43DF95
exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
AddPlants:
push eax
push esi
push ecx
mov eax,[edi+04] //edi = *CusScene
lea esi,[eax+000000AC] //eax = *Plants
call 0041DE80
push -01
push [esp+4*4+4*3] //植物类型
mov [eax+00000144],bl
push eax //Plant *this
mov eax,[esp+6*4+4*2] //Y
mov ecx,[esp+6*4+4] //X
call 0045DB60
pop ecx
pop esi
pop eax
ret 3*4
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
43DBBF:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43DBBF:
db 8B 47 04 8D B0 AC 00 00 00
//mov eax,[edi+04]
//lea esi,[eax+000000AC]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>47</ID>
                  <Description>"CutScene::StartLevelIntro 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>100</ID>
                      <Description>"引入关卡背景音乐修改 937000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
937000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov esi,[ecx+0000083C]
cmp dword ptr [esi+08],#14
je 0043B36C
call 0045ABB0
or eax,-01
or edx,eax
mov ecx,#14
call 0045ADB0
jmp 0043B36C

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
43B319:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43B319:
db 8B B1 3C 08 00 00
//mov esi,[ecx+0000083C]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>41</ID>
              <Description>"Board类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>305</ID>
                  <Description>"Board::CanPlantAt 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>304</ID>
                      <Description>"新植物种植条件修改 93F400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93F400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp esi,#80
jne Grave_Buster
push eax
mov eax,[6a9ec0]
mov eax,[eax+768]
call 41C0D0
test al,al
pop eax
je Aquatic_plants_cannot_be_planted
cmp edi,2
je Aquatic_plants_can_be_planted
cmp edi,3
jne Aquatic_plants_cannot_be_planted
Aquatic_plants_can_be_planted:
pop edi
pop esi
pop ebp
pop ebx
add esp,18
mov eax,0
ret 000C
Aquatic_plants_cannot_be_planted:
pop edi
pop esi
pop ebp
pop ebx
add esp,18
mov eax,3
ret 000C
Grave_Buster:
originalcode:
cmp esi,0B
jne 0040E118

exit:
jmp returnhere

40E0F4:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40E0F4:
db 83 FE 0B 75 1F
//cmp esi,0B
//jne 0040E118
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>93</ID>
              <Description>"ReanimatorCache类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>94</ID>
                  <Description>"ReanimatorCache::MakeCachedZombieFrame 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>311</ID>
              <Description>"SeedBank类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>310</ID>
                  <Description>"SeedBank::AddSeed 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>309</ID>
                      <Description>"新小游戏传送带卡槽设置 93F800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93F800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ecx+000007F8]
mov [esp+14],eax
cmp eax,#33
jne original
mov edi,00000003
mov eax,0000000F
mov [esp+C],4 //传送带总数
mov [esp+18],edi //3 ID
mov [esp+1C],#75 //概率
mov [esp+20],#49
mov [esp+24],#35 //15
mov [esp+28],#50
mov [esp+2C],#25 //15
mov [esp+30],#80
mov [esp+34],#15 //15
jmp 4232AF
originalcode:
mov eax,[ecx+000007F8]

exit:
jmp returnhere
original:
jmp 423082
423044:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
423044:
db 8B 81 F8 07 00 00
//mov eax,[ecx+000007F8]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>183</ID>
          <Description>"程序初始化修改"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>42</ID>
              <Description>"Sexy类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"Sexy::SexyAppBase::IsScreenSaver 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>16</ID>
                      <Description>"修改partner.xml签名加载 937400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
937400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ecx,0
push ecx

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3

5D508D:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5D508D:
db 8B 4C 24 30 51
//mov ecx,[esp+30]
//push ecx
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>180</ID>
                  <Description>"std::string::assign 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>178</ID>
                      <Description>"从partner.xml读取新的变量 938000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
938000:
LoadFunction:
push ebp
mov ebp,esp
sub esp,80
push [ebp+4+C]  //变量字符数
push [ebp+4+8] //变量名
lea ecx,[esp+1C]
mov [esp+34],edi
mov [esp+30],00000000
mov byte ptr [esp+20],00
call 00404330
mov [esp+00000108],00000006
movzx edx,byte ptr [ebx+00000343]
push edx
lea ecx,[esp+18]
mov eax,ebx
call 00552840
mov [esp+00000108],FFFFFFFF
push edi
mov edi,[ebp+4+4]
mov byte ptr [edi],al
pop edi
cmp [esp+2C],esi
jb LoadEnd
mov eax,[esp+18]
push eax
call 0061C19A
add esp,04
LoadEnd:
mov esp,ebp
pop ebp
ret 3*4
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebp
push eax
mov ebp,[6a9ec0]
lea eax,[ebp+8D0]
push #9
push 794A00
push eax
call LoadFunction
lea eax,[ebp+8D1]
push #10
push 794B00
push eax
call LoadFunction
lea eax,[ebp+8D2]
push #11
push 794C00
push eax
call LoadFunction
lea eax,[ebp+8D3]
push #16
push 794D00
push eax
call LoadFunction
lea eax,[ebp+8D4]
push #13
push 794E00
push eax
call LoadFunction
lea eax,[ebp+8D5]
push #20
push 794F00
push eax
call LoadFunction
pop eax
pop ebp
originalcode:
push edi
push 00676530

exit:
jmp returnhere

5D5246:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5D5246:
db 57 68 30 65 67 00
//push edi
//push 00676530
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"LawnApp类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>5</ID>
                  <Description>"LawnApp::LawnApp 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>4</ID>
                      <Description>"修改初始化 937800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
937800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push #30
fld qword ptr [006798D8]
push 794000 // 006674B8 -&gt; "PopCap\PlantsVsZombies" 22个字母
lea ecx,[esi+7C]
fstp qword ptr [esi+000000D8]
mov [esi+000004F8],bl
mov [esi+000005AC],bl
call 00404330
push #23
push 794100  // 006674D0 -&gt; "PlantsVsZombies" 15个字母
lea ecx,[esi+44]
call 00404330
push #27
push 794200 // 006674E0 -&gt; "Plants Vs. Zombies"
jmp 44EC98

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
44EC5C:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
44EC5C:
db 6A 16 DD 05 D8 98 67 00
//push 16
//fld qword ptr [006798D8]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>185</ID>
              <Description>"WinMain函数修改 扩LawnApp指针占用上限 938400"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
938400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push 1000 //8c8

exit:
jmp returnhere

44E8FE:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
44E8FE:
db 68 C8 08 00 00
//push 000008C8
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>202</ID>
          <Description>"无限阳光"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>206</ID>
              <Description>"Board类"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>205</ID>
                  <Description>"Board::CanTakeSunMoney 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>203</ID>
                      <Description>"阳光支出限制修改 2 939000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
939000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[edx+8c]
cmp byte ptr [eax+8D0],1
je IfInfinity
NotInfinity:
pop eax
originalcode:
call 0041B980

exit:
jmp returnhere
IfInfinity:
cmp byte ptr [eax+8D3],1
jne NotInfinity
pop eax
mov al,1
ret 4

41BAB0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
41BAB0:
db E8 CB FE FF FF
//call 0041B980
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>204</ID>
                  <Description>"Board::TakeSunMoney 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>201</ID>
                      <Description>"阳光支出限制修改 938C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
938C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[edi+8c]
cmp byte ptr [eax+8D0],1
je IfInfinity
NotInfinity:
pop eax
originalcode:
push esi
mov esi,[edi+00005560]

exit:
jmp returnhere
IfInfinity:
cmp byte ptr [eax+8D3],1
jne NotInfinity
pop eax
ret
41BA60:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
41BA60:
db 56 8B B7 60 55 00 00
//push esi
//mov esi,[edi+00005560]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>200</ID>
              <Description>"SeedBank类"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>199</ID>
                  <Description>"SeedBank::Draw 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>193</ID>
                      <Description>"无限阳光绘制 938800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
938800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+8C]
cmp byte ptr [eax+8D0],1
jne originalcode
cmp byte ptr [eax+8D3],1
jne originalcode
mov eax,795000
lea esi,[esp+4C]
push eax
push 795100
call 005B0CA0
jmp 489846
originalcode:
mov eax,[esi+00005560]

exit:
jmp returnhere

489825:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
489825:
db 8B 86 60 55 00 00
//mov eax,[esi+00005560]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>211</ID>
          <Description>"Board类扩指针"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>216</ID>
              <Description>"SyncBoard修改 保存新Borad类成员 939800"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
939800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov esi,564C
add esi,[D7C000]
add esi,400
exit:
jmp returnhere

4819E0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4819E0:
db BE 4C 56 00 00
//mov esi,0000564C
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>212</ID>
              <Description>"LwanApp类"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>213</ID>
                  <Description>"LwanApp::MakeNewBoard 修改 939400"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
939400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push 57B0//000057B0
push eax
mov eax,[D7C000]
add eax,400
add [esp+4],eax
pop eax

exit:
jmp returnhere

44F60E:
jmp newmem
returnhere:


 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
44F60E:
db 68 B0 57 00 00
//push 000057B0
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>218</ID>
          <Description>"新出怪类型数组"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>222</ID>
              <Description>"Board类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>221</ID>
                  <Description>"Board::InitZombieWavesForLevel 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>232</ID>
                      <Description>"修改第一波生存模式出怪类型数组 93AC00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93AC00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,[esi+04]
mov [eax+57B0],1
mov [eax+57B0+2],1
cmp ecx,04
jbe Survival
mov [eax+57B0+4],1
Survival:
jmp 00425D1D
exit:
jmp returnhere

425867:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
425867:
db 83 F9 04 0F 86 94 03 00 00
//cmp ecx,04
//jbe 00425C04
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>220</ID>
                      <Description>"新迷你游戏出怪类型数组初始化 939C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
939C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
originalcode:
mov edi,[esi+4]
mov [edi+57B0+0],1
push eax
push ecx
push ebp
push ebx
mov ebp,[D7C000]
mov ecx,0
start:
mov eax,edx //小游戏ID
lea ebx,[ebp+24]
imul eax,ebx
mov al,byte ptr [11B4000+eax+20+ecx]
mov byte ptr [edi+57B0+ecx],al
add ecx,1
cmp ecx,ebp
jle start
pop ebx
pop ebp
pop ecx
pop eax
jmp 00425D1D

exit:
jmp returnhere

425885:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
425885:
db 83 FA 1D 75 29
//cmp edx,1D
//jne 004258B3
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>229</ID>
                      <Description>"冒险模式新出怪类型数组判断 93A800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93A800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [edi+esi+57B0],al

exit:
jmp returnhere

40AB97:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40AB97:
db 88 84 37 D4 54 00 00
//mov [edi+esi+000054D4],al
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>227</ID>
                  <Description>"Board::PickZombieType 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>390</ID>
                      <Description>"将随机一只僵尸放入出怪列表 945400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
945400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,ebp
imul edi,1C
lea edi,[edi+163B000]
cmp byte ptr [ebp+esi+000057B0],00
mov [esp+14],edi
je 0040DA90
jmp 40D8D9
originalcode:
lea edi,[edi*4+0069DA80]

exit:
jmp returnhere

40D8C8:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40D8C8:
db 8D 3C BD 80 DA 69 00
//lea edi,[edi*4+0069DA80]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>508</ID>
                      <Description>"根据关卡定义获得出怪波数 - 迷你游戏 93A000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93A000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test edx,edx
je originalcode
pushad
mov eax,edx
mov esi,[D7C000]
lea ebp,[esi+24]
imul eax,ebp
lea ecx,[11B4000]
mov eax,[ecx+eax+14]
mov [edi+5564],eax
popad
jmp 004094BB
originalcode:
mov eax,edx
cmp eax,01

exit:
jmp returnhere

4093AD:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4093AD:
db 8B C2 83 F8 01
//mov eax,edx
//cmp eax,01
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>224</ID>
                  <Description>"Board::InitZombieWaves 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>223</ID>
                      <Description>"初始化填充新出怪类型数组 93A400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93A400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push [D7C000]
add [esp],4
xor ebx,ebx
lea eax,[edi+000057B0]//eax,[edi+000054D4]

exit:
jmp returnhere

40ABB5:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40ABB5:
db 6A 64 33 DB 8D 87 D4 54 00 00
//push 64
//xor ebx,ebx
//lea eax,[edi+000054D4]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>382</ID>
                  <Description>"Board::PutZombieInWave 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>381</ID>
                      <Description>"将指定僵尸加入出怪列表并减去出怪点数 944C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
944C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,esi
imul eax,1C
mov edx,[eax+163B000+8]
jmp 409278
originalcode:
lea eax,[esi*8+00000000]

exit:
jmp returnhere

409268:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
409268:
db 8D 04 F5 00 00 00 00
//lea eax,[esi*8+00000000]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>388</ID>
                  <Description>"Board::PickZombieWaves 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>387</ID>
                      <Description>"获得僵尸点数来减去当前波点数 945000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
945000:
/*
Board类
Board::PickZombieWaves
*/
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,edx
imul eax,1C
sub ecx,[eax+163B000+8]
jmp 409A08
originalcode:
lea eax,[edx*8+00000000]

exit:
jmp returnhere

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,eax
imul edx,1C
mov ecx,[edx*4+163B000+8]
jmp 40A0D3
originalcode_2:
lea edx,[eax*8+00000000]

exit_2:
jmp returnhere_2

40A0C3:
jmp newmem_2
nop 2
returnhere_2:

4099F8:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4099F8:
db 8D 04 D5 00 00 00 00
//lea eax,[edx*8+00000000]
40A0C3:
db 8D 14 C5 00 00 00 00
//lea edx,[eax*8+00000000]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>513</ID>
                      <Description>"修复冒险模式出怪崩溃"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
40D8A0:
sub esp,800
40D8B0:
mov esi,[esp+800+14]
40D8F2:
mov eax,[esp+800+1C]
40D95C:
mov ecx,[esp+800+1C]
40D96E:
mov edx,[esp+800+18]
40D9C5:
mov esi,[esp+800+2C]
40D9DB:
mov esi,[esp+800+20]
40D9E7:
mov ecx,[esp+800+1C]
40D9EE:
mov edx,[esp+800+18]
40DAE9:
add esp,800
40DAFC:
add esp,800
40DB0F:
add esp,800
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40D8A0:
sub esp,114
40D8B0:
mov esi,[esp+114+14]
40D8F2:
mov eax,[esp+114+1C]
40D95C:
mov ecx,[esp+114+1C]
40D96E:
mov edx,[esp+114+18]
40D9C5:
mov esi,[esp+114+2C]
40D9DB:
mov esi,[esp+114+20]
40D9E7:
mov ecx,[esp+114+1C]
40D9EE:
mov edx,[esp+114+18]
40DAE9:
add esp,114
40DAFC:
add esp,114
40DB0F:
add esp,114



</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>510</ID>
                  <Description>"Board::SpawnZombiesFromGraves 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>509</ID>
                      <Description>"指定关卡不出场景僵尸 94EC00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94EC00:
//指定关卡不出场景僵尸
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#34
je 00412E2A
cmp eax,#73
je 00412E2A
cmp eax,#74
je 00412E2A
cmp eax,#75
je 00412E2A
cmp eax,#76
je 00412E2A
cmp eax,#77
je 00412E2A
originalcode:
cmp eax,20
je 00412E2A

exit:
jmp returnhere

412D00:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
412D00:
db 83 F8 20 0F 84 21 01 00 00
//cmp eax,20
//je 00412E2A
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>512</ID>
                  <Description>"Board::GetIntroducedZombieType 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>511</ID>
                      <Description>"取得在当前关卡首次出现的一种僵尸类型"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
40D72C:
lea esi,[esi*4+163B000]


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40D72C:
db 8D 34 B5 80 DA 69 00
//lea esi,[esi*4+0069DA80]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>383</ID>
              <Description>"Challenge类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>231</ID>
                  <Description>"Challenge::InitZombieWavesSurvival 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>230</ID>
                      <Description>"修改随机出怪类型数组 93B000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93B000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov byte ptr [eax+57B0],01

exit:
jmp returnhere

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_2:
mov byte ptr [ecx+57B0+5],01

exit_2:
jmp returnhere_2

newmem_3: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_3:
mov byte ptr [edx+57B0+2],01

exit_3:
jmp returnhere_3

newmem_4: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_4:
cmp byte ptr [esi+edi+57B0],00

exit_4:
jmp returnhere_4

newmem_5: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_5:
mov byte ptr [esi+edi+57B0],01

exit_5:
jmp returnhere_5

425816:
jmp newmem_5
nop 3
returnhere_5:

425713:
jmp newmem_4
nop 3
returnhere_4:

4256DD:
jmp newmem_3
nop 2
returnhere_3:

4256D1:
jmp newmem_2
nop 2
returnhere_2:

4256A2:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4256A2:
db C6 80 D4 54 00 00 01
//mov byte ptr [eax+000054D4],01
4256D1:
db C6 81 D9 54 00 00 01
//mov byte ptr [ecx+000054D9],01
4256DD:
db C6 82 D6 54 00 00 01
//mov byte ptr [edx+000054D6],01
425713:
db 80 BC 3E D4 54 00 00 00
//cmp byte ptr [esi+edi+000054D4],00
425816:
db C6 84 3E D4 54 00 00 01
//mov byte ptr [esi+edi+000054D4],01
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>415</ID>
              <Description>"扩展僵尸后出怪列表崩溃修复 946000"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
946000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
sub esp,4000

exit:
jmp returnhere

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_2:
pop esi
pop ebx
mov esp,ebp
pop ebp

exit_2:
jmp returnhere_2

40A10A:
jmp newmem_2
returnhere_2:

4092F2:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4092F2:
db 81 EC 28 01 00 00
//sub esp,00000128
40A10A:
db 5E 5B 8B E5 5D
//pop esi
//pop ebx
//mov esp,ebp
//pop ebp
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>416</ID>
              <Description>"出怪预览重写 C20000"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
C20000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[esp+04]
pushad
mov edi,0
cmp byte ptr [ecx+35],0
jne end
mov byte ptr [ecx+35],01
push ecx
mov ecx,[ecx]
call 4539D0
pop ecx
test al,al
jne end
mov ebp,0
lea ebx,[1657000]
mov eax,[ecx+4]
start5:
mov [1657000+edi*4],0
add edi,1
cmp edi,20
jle start5
mov esi,[eax+5564]
sub esi,2
cmp esi,1
jge end_end
mov esi,1
end_end:
mov edi,0
start2:
cmp byte ptr [eax+57B0+edi],1
jne end_2_1
pushad
mov esi,edi
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
end_2_1:
add edi,1
cmp edi,[D7C000]
jle start2
push eax
mov eax,[ecx+4]
call 41C0D0
test al,al
pop eax
je is_notPool
pushad
mov esi,#10
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
is_notPool:
mov edi,[ecx]
cmp [edi+7F8],#27
jne Bungee_Blitz
pushad
mov esi,#23
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
pushad
mov esi,#21
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
pushad
mov esi,#15
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
jmp mn_end
Bungee_Blitz:
pushad
mov ecx,edi
call 453950
test al,al
popad
je Pogo_Party
pushad
mov esi,#20
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
jmp mn_end
Pogo_Party:
cmp [edi+7F8],#34
jne Bobsled_Bonanza
pushad
mov esi,#18
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
pushad
mov esi,#18
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
pushad
mov esi,#18
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
pushad
mov esi,#18
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
pushad
mov esi,#8
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
pushad
mov esi,#8
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
pushad
mov esi,#8
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
jmp mn_end
Bobsled_Bonanza:
cmp [edi+7F8],#28
jne mn_end
pushad
mov esi,#12
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
pushad
mov esi,#12
push ebx
mov ebx,ecx
call 439590
popad
add ebp,1
mn_end:
mov edi,0
start:
cmp ebp,#13
jge end
mov eax,[ecx+4]
mov edx,esi
imul edx,C8
lea edx,[edx+edi*4]
push ebp
mov ebp,[eax+edx+6B8]
cmp ebp,1
je end2
cmp ebp,#10
je end2
cmp ebp,#12
je end2
cmp ebp,#13
je end2
cmp ebp,#23
je end2
cmp ebp,#24
je end2
cmp ebp,#25
je end2
cmp ebp,#32
je end2
cmp ebp,#20
je end2
cmp ebp,#42
je end2
cmp ebp,#44
je end2
cmp ebp,#45
je end2
cmp ebp,#46
je end2
cmp ebp,#-1
jle end3
cmp ebp,[D7C000]
jg end2
pushad
mov esi,ebp
push ebx
mov ebx,ecx
call 439590
popad
add [esp],1
end2:
pop ebp
add edi,1
cmp edi,#50
jle start
end:
popad
ret 4
end3:
pop ebp
popad
ret 4
end4:
originalcode:

exit:
jmp returnhere
num:

43A140:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43A140:
db 8B 4C 24 04 81 EC B0 00 00 00
//mov ecx,[esp+04]
//sub esp,000000B0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>468</ID>
              <Description>"新出怪预览特殊预览 94B000"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94B000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [eax+000007F8],#75
jne ZomBotany2
ZomSporology:
mov [esp+1C],#41
jmp 43916D
ZomBotany2:

originalcode:
cmp dword ptr [eax+000007F8],20

exit:
jmp returnhere

43915C:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43915C:
db 83 B8 F8 07 00 00 20
//cmp dword ptr [eax+000007F8],20
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>245</ID>
          <Description>"小游戏修改"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>363</ID>
              <Description>"CutScene类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>362</ID>
                  <Description>"CutScene::StartLevelIntro 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>357</ID>
                      <Description>"新生存模式获取关卡名 - 过场 942800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
942800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebp
mov ebp,[D7C000]
lea ebp,[ebp+24]
imul eax,ebp
pop ebp
mov ecx,[eax+11B4000+8]
lea eax,[eax+11B4000]
jmp 43B0F1
originalcode:
lea eax,[eax+eax*2]
mov ecx,[eax*8+006A2B9C]

exit:
jmp returnhere

43B0E0:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43B0E0:
db 8D 04 40 8B 0C C5 9C 2B 6A 00
//lea eax,[eax+eax*2]
//mov ecx,[eax*8+006A2B9C]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>358</ID>
                      <Description>"新小游戏获取关卡名 - 过场 942C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
942C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebp
mov ebp,[D7C000]
lea ebp,[ebp+24]
imul eax,ebp
pop ebp
lea eax,[eax+11B4000]
mov eax,[eax+8]
jmp 43B187
originalcode:
lea eax,[eax+eax*2]
lea eax,[eax*8+006A2B88]

exit:
jmp returnhere

43B17A:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43B17A:
db 8D 04 40 8D 04 C5 88 2B 6A 00
//lea eax,[eax+eax*2]
//lea eax,[eax*8+006A2B88]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>248</ID>
              <Description>"ChallengeScreen类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>246</ID>
                  <Description>"ChallengeScreen::DrawButton 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>244</ID>
                      <Description>"新迷你游戏关卡头指针读取 - 小游戏界面 93B800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93B800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[esi+1]
push ebp
mov ebp,[D7C000]
lea ebp,[ebp+24]
imul eax,ebp
pop ebp
lea ecx,[eax+011B4000]
mov [esp+1C],ecx
mov [esp+18],ebx
cmp byte ptr [ebx+54],00
je 0042F142
jmp 42E977
originalcode:
lea eax,[esi+esi*2]
lea ecx,[eax*8+006A2BA0]

exit:
jmp returnhere

42E95F:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
42E95F:
db 8D 04 76 8D 0C C5 A0 2B 6A 00
//lea eax,[esi+esi*2]
//lea ecx,[eax*8+006A2BA0]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>247</ID>
                      <Description>"新迷你游戏小游戏名称读取 - 小游戏界面 93BC00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93BC00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ecx,[esp+1C]
mov ecx,[ecx+8]

exit:
jmp returnhere

42EB26:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
42EB26:
db 8B 4C 24 1C 8B 49 14
//mov ecx,[esp+1C]
//mov ecx,[ecx+14]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>361</ID>
              <Description>"Board类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>360</ID>
                  <Description>"Board::DrawLevel 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>355</ID>
                      <Description>"新小游戏获取关卡名 - 关卡内右下角 942000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
942000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebp
mov ebp,[D7C000]
lea ebp,[ebp+24]
imul eax,ebp
pop ebp
mov ecx,[eax+11B4000+8]
mov eax,[eax+11B4000]
jmp 417F14
originalcode:
lea eax,[eax+eax*2]
mov ecx,[eax*8+006A2B9C]

exit:
jmp returnhere

417F03:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
417F03:
db 8D 04 40 8B 0C C5 9C 2B 6A 00
//lea eax,[eax+eax*2]
//mov ecx,[eax*8+006A2B9C]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>356</ID>
                      <Description>"新生存模式获取关卡名 - 关卡内右下角 942400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
942400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ebp,eax
push ecx
mov ecx,[D7C000]
lea ecx,[ecx+24]
imul ebp,ecx
pop ecx
lea ebp,[ebp+11B4000]
jmp 418031
originalcode:
lea ebp,[eax+eax*2]
lea ebp,[ebp*8+006A2B88]

exit:
jmp returnhere

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_2:
mov ebp,[ebp+8]
mov eax,ebp

exit_2:
jmp returnhere_2

newmem_3: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_3:
mov ecx,[ebp+8]
lea esi,[esp+0000009C]

exit_3:
jmp returnhere_3

4180B2:
jmp newmem_3
nop 5
returnhere_3:

41819E:
jmp newmem_2
returnhere_2:

418027:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
418027:
db 8D 2C 40 8D 2C ED 88 2B 6A 00
//lea ebp,[eax+eax*2]
//lea ebp,[ebp*8+006A2B88]
41819E:
db 8B 6D 14 8B C5
//mov ebp,[ebp+14]
//mov eax,ebp
4180B2:
db 8B 4D 14 8D B4 24 9C 00 00 00
//mov ecx,[ebp+14]
//lea esi,[esp+0000009C]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>254</ID>
          <Description>"保龄球修改"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>257</ID>
              <Description>"Plant类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>255</ID>
                  <Description>"Plant::UpdateBowling 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>253</ID>
                      <Description>"泳池坚果保龄球修复 - 撞击边缘 93C000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93C000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esp+14],ebx
push eax
mov eax,[edi+4]
call 41C0D0
test al,al
pop eax
jne Pool
cmp ebx,1C
mov [esp+14],ebx
jne 00462DA6
jmp 462D98
Pool:
cmp [edi+24],#80
je Aquatic_Wall_nut
cmp [edi+C],#170
jge drown
back:
state_28:
cmp ebx,#28
mov [esp+14],ebx
jne state_29
cmp ebp,#0
je modify_state_29
jmp 462DB8
modify_state_29:
mov [esp+14],#29
jmp 462DB8
state_29:
cmp ebx,#29
mov [esp+14],ebx
jne 462DB8
cmp ebp,5
je modify_state_28
jmp 462DB8
modify_state_28:
mov [esp+14],#28
jmp 462DB8
drown:
cmp [edi+C],#420
jge back
cmp [edi+8],#720
jge 462DB8
//坚果溺水
pushad
mov ecx,[edi+20]
add ecx,01
push ecx
push [edi+0C]
fild [esp]
fstp [esp]
push [edi+8]
fild [esp]
fstp [esp]
mov ebx,20
mov eax,[edi]
call 00453C30
Plays_Sound_Drown:
mov eax,[edi]
cmp byte ptr [eax+000008C5],00
jne Plays_Sound_Drown_1
fldz
mov ecx,[006A9F00]
mov esi,[eax+00000784]
fst dword ptr [esp+10]
fcomp dword ptr [ecx+00000AC8]
fnstsw ax
test ah,44
jnp Plays_Sound_Drown_2
fld dword ptr [ecx+00000AC8]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+14]
add esp,04
Plays_Sound_Drown_2:
fld dword ptr [esp+10]
push ecx
fstp dword ptr [esp]
mov eax,35
mov ecx,esi
call 00515020
Plays_Sound_Drown_1:
popad
push edi
call 004679B0
jmp 462DB8
Aquatic_Wall_nut:

Aquatic_Wall_nut_state_28:
mov [esp+14],ebx
cmp ebx,#28
jne Aquatic_Wall_nut_state_29
cmp ebp,3
jge 462DB8
mov [esp+14],#29
jmp 462DB8

Aquatic_Wall_nut_state_29:
cmp ebx,#29
mov [esp+14],ebx
jne 462DB8
cmp ebp,2
jle 462DB8
mov [esp+14],#28
jmp 462DB8

originalcode:
mov [esp+14],ebx
jne 00462DA6

exit:
jmp returnhere

462D92:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
462D92:
db 89 5C 24 14 75 0E
//mov [esp+14],ebx
//jne 00462DA6
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>256</ID>
                      <Description>"泳池坚果保龄球修复 - 撞击僵尸 93C400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93C400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ecx,[edi+1C]
mov [esp+14],ebx
push eax
mov eax,[edi+4]
call 41C0D0
test al,al
pop eax
jne Pool
cmp ecx,04
je 00463108
jmp 4630DE
Pool:
cmp [edi+24],#80
je Aquatic_Wall_nut
cmp ecx,05
je 00463108
jmp 4630DE
Aquatic_Wall_nut:
cmp ecx,04
je 00463108
jmp 4630DE
exit:
jmp returnhere

4630D6:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4630D6:
db 8B 4F 1C 83 F9 04
//mov ecx,[edi+1C]
//cmp ecx,04
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>265</ID>
          <Description>"泳池线修改 93C800"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93C800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[6a9ec0]
mov eax,[eax+768]
call 41C0D0
test al,al
pop eax
je originalcode
mov ebx,[8CC000]
push #50
push #268
mov eax,edi
call 00587150
jmp 42539D
originalcode:
mov ebx,[006A7410]

exit:
jmp returnhere

425389:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
425389:
db 8B 1D 10 74 6A 00
//mov ebx,[006A7410]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>262</ID>
          <Description>"加载新贴图"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>261</ID>
              <Description>"Sexy类"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>260</ID>
                  <Description>"Sexy::ExtractLoadingImagesResources 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>259</ID>
                      <Description>"启动时加载新贴图 - 简化"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
D18000:
Load_Image:
mov [Load_Esp],esp
mov [Load_Ebx],ebx
mov ebx,[Load_Esp]
push [ebx+4+2*4]
push [ebx+4+1*4]
mov ebx,[Load_Ebx]
lea ecx,[ebp-44]
mov [ebp-2C],ebx
mov [ebp-30],00000000
mov byte ptr [ebp-40],00
call 00404330
lea eax,[ebp-44]
mov byte ptr [ebp-04],02
mov edx,[edi]
mov edx,[edx+40]
push eax
lea ecx,[ebp-1C]
push ecx
mov ecx,edi
call edx
mov ecx,eax
call 0059A980
lea esi,[ebp-1C]
push esi
mov esi,[Load_Esp]
mov esi,[esi+4+0*4]
mov [esi],eax
pop esi
call 0059A8C0
mov byte ptr [ebp-04],00
cmp dword ptr [ebp-2C],10
jb Load_End
mov eax,[ebp-40]
push eax
call 0061C19A
add esp,04
Load_End:
ret 3*4
Load_Esp:
dd 00
dd 00
Load_Ebx:
dd 00
dd 00
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
Load_Pool_Wallnut_bowlingstripe:
push #32
push 795A00
push 8CC000
call Load_Image
push #33
push 795C00
push 8CC004
call Load_Image
push #37
push 798900
push 8CC018
call Load_Image
push #37
push 798A00
push 8CC01C
call Load_Image
push #31
push 798B00
push 8CC020
call Load_Image
push #35
push 798C00
push 8CC024
call Load_Image
push #35
push 798D00
push 8CC028
call Load_Image
push #41
push 798E00
push 8CC02C
call Load_Image
push #42
push 798F00
push 8CC030
call Load_Image
push #42
push 799000
push 8CC034
call Load_Image
push #47
push 799100
push 8CC038
call Load_Image
push #21
push 799200
push 8CC03C
call Load_Image
push #33
push 799300
push 8CC040
call Load_Image
push #28
push 799400
push 8CC044
call Load_Image
push #45
push 799500
push 8CC048
call Load_Image
push #46
push 799700
push 8CC04C
call Load_Image
push #29
push 799900
push 8CC050
call Load_Image
originalcode:
Load_Almanac_Imitater:
push 16
push 00669FC4

exit:
jmp returnhere

477FDB:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
477FDB:
db 6A 16 68 C4 9F 66 00
//push 16
//push 00669FC4
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>279</ID>
          <Description>"植物读取数据修改"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>292</ID>
              <Description>"SeedBank类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>291</ID>
                  <Description>"SeedBank::ContainsPoint 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>289</ID>
                      <Description>"模仿者卡冷却读取 93CC00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93CC00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea ecx,[edx+edx*8]
mov eax,[ecx*4+15AC000+14]

exit:
jmp returnhere

488F62:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
488F62:
db 8D 0C D2 8B 04 8D C4 F2 69 00
//lea ecx,[edx+edx*8]
//mov eax,[ecx*4+0069F2C4]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>290</ID>
                      <Description>"植物卡冷却读取 93D000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93D000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea edx,[ecx+ecx*8]
mov eax,[edx*4+15AC000+14]

exit:
jmp returnhere

488F73:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
488F73:
db 8D 14 C9 8B 04 95 C4 F2 69 00
//lea edx,[ecx+ecx*8]
//mov eax,[edx*4+0069F2C4]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>281</ID>
              <Description>"Plant类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>285</ID>
                  <Description>"Plant::GetCost 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>284</ID>
                      <Description>"植物卡阳光读取 93D400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93D400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea eax,[eax+eax*8]
mov eax,[eax*4+15AC000+10]

exit:
jmp returnhere

467B9E:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
467B9E:
db 8D 04 C0 8B 04 85 C0 F2 69 00
//lea eax,[eax+eax*8]
//mov eax,[eax*4+0069F2C0]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>283</ID>
                      <Description>"模仿植物卡阳光获取 93D800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93D800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea edx,[edx+edx*8]
mov eax,[edx*4+15AC000+10]

exit:
jmp returnhere

467B93:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
467B93:
db 8D 14 D2 8B 04 95 C0 F2 69 00
//lea edx,[edx+edx*8]
//mov eax,[edx*4+0069F2C0]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>288</ID>
                  <Description>"Plant::PlantInitialize 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>287</ID>
                      <Description>"植物射击相关读取 93DC00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93DC00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea eax,[esi+esi*8]
lea eax,[eax*4+15AC000]

exit:
jmp returnhere

45DCB9:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
45DCB9:
db 8D 04 F6 8D 04 85 B0 F2 69 00
//lea eax,[esi+esi*8]
//lea eax,[eax*4+0069F2B0]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>282</ID>
                  <Description>"Plant::PreloadPlantResources 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>280</ID>
                      <Description>"植物动画定义读取 93E000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93E000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea eax,[esi+esi*8]
lea eax,[eax*4+15AC000]

exit:
jmp returnhere

4681E0:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4681E0:
db 8D 04 F6 8D 04 85 B0 F2 69 00
//lea eax,[esi+esi*8]
//lea eax,[eax*4+0069F2B0]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>295</ID>
                  <Description>"Plant::GetNameString 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>294</ID>
                      <Description>"植物字符串读取 93E400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93E400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea eax,[ebp+ebp*8+00]
lea eax,[eax*4+15AC000]

exit:
jmp returnhere

467C22:
jmp newmem
nop 6
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
467C22:
db 8D 44 ED 00 8D 04 85 B0 F2 69 00
//lea eax,[ebp+ebp*8+00]
//lea eax,[eax*4+0069F2B0]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>301</ID>
                      <Description>"模仿者卡字符串读取"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93F400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea eax,[eax+eax*8]
mov ecx,[eax*4+15AC000+20]
lea eax,[eax*4+15AC000]
jmp 467C8D


exit:
jmp returnhere

467C7C:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
467C7C:
db 8D 04 C0 8B 0C 85 D0 F2 69 00
//lea eax,[eax+eax*8]
//mov ecx,[eax*4+0069F2D0]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>297</ID>
                  <Description>"Plant::DrawSeedType 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>296</ID>
                      <Description>"植物卡取消绘制读取 93E800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93E800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea eax,[ecx+ecx*8]
add eax,eax
add eax,eax
cmp dword ptr [eax+15AC000+8],-01
je 004662E4
jmp 466297
exit:
jmp returnhere

466287:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
466287:
db 8D 04 C9 03 C0
//lea eax,[ecx+ecx*8]
//add eax,eax
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>303</ID>
                  <Description>"Plant::GetToolTip 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>302</ID>
                      <Description>"取得植物提示字符串修改 93F000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93F000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea eax,[eax+eax*8]
push esi
lea eax,[eax*4+15AC000]

exit:
jmp returnhere

467DCC:
jmp newmem
nop 6
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
467DCC:
db 8D 04 C0 56 8D 04 85 B0 F2 69 00
//lea eax,[eax+eax*8]
//push esi
//lea eax,[eax*4+0069F2B0]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>300</ID>
              <Description>"ReanimatorCache类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>299</ID>
                  <Description>"ReanimatorCache::MakeCachedPlantFrame 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>298</ID>
                      <Description>"植物动画制图读取 93EC00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93EC00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
lea ebx,[esi+esi*8]
lea ebx,[ebx*4+15AC000]

exit:
jmp returnhere

46F5EC:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46F5EC:
db 8D 1C F6 8D 1C 9D B0 F2 69 00
//lea ebx,[esi+esi*8]
//lea ebx,[ebx*4+0069F2B0]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>327</ID>
          <Description>"新僵尸状态"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>342</ID>
              <Description>"Zombie类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>340</ID>
                  <Description>"Zombie::Animate 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>332</ID>
                      <Description>"僵尸特殊状态更新 940400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
940400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,[edi+28]
cmp eax,#97
je anim_delth3
cmp eax,10

exit:
jmp returnhere
anim_delth3:
cmp [edi+AC],0
jle az
mov [edi+AC],7fffffff
az:
pushad
mov ecx,[edi]
mov eax,[edi+00000118]
test eax,eax
mov edx,[ecx+00000820]
mov edx,[edx+08]
je end_run
movzx ecx,ax
cmp ecx,[edx+08]
jae end_run
lea esi,[ecx+ecx*4]
shl esi,05
add esi,[edx]
cmp [esi+0000009C],eax
jne end_run
mov ecx,esi
push 0
mov [esp],(float)1
call 473B70
test al,al
je end_run
mov [edi+74],#100
end_run:
popad
jmp 52BE6C
52BCAE:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52BCAE:
db 8B 47 28 83 F8 10
//mov eax,[edi+28]
//cmp eax,10
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>341</ID>
                  <Description>"Zombie::CheckIfPreyCaught 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>328</ID>
                      <Description>"僵尸特殊状态取消啃咬 940800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
940800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edi+28],#97
je 52F693
originalcode:
cmp byte ptr [edi+000000B8],00

exit:
jmp returnhere

52F671:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52F671:
db 80 BF B8 00 00 00 00
//cmp byte ptr [edi+000000B8],00
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>343</ID>
                  <Description>"Zombie::StartWalkAnim 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>331</ID>
                      <Description>"僵尸特殊状态修改动画 940C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
940C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#97
jne originalcode
push 0
cmp [edi+AC],0
jg az2
mov [esp],(float)16
jmp az
az2:
mov [esp],(float)10
az:
push esi
push -1
push 795B00
call 00528B00
pop edi
pop ebx
pop ecx
ret

originalcode:
cmp eax,4C
jne 0052F344

exit:
jmp returnhere

52F328:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52F328:
db 83 F8 4C 75 17
//cmp eax,4C
//jne 0052F344
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>344</ID>
                  <Description>"Zombie::EatPlant 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>321</ID>
                      <Description>"特殊啃食动画播放 941000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
941000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
pushad
cmp [ebp+24],0
jne end
cmp [esi+24],#3
jne end
mov edi,ebp
mov ecx,[edi]
mov eax,[edi+00000118]
test eax,eax
mov edx,[ecx+00000820]
mov edx,[edx+08]
push esi
je end_run
movzx ecx,ax
cmp ecx,[edx+08]
jae end_run
lea esi,[ecx+ecx*4]
shl esi,05
add esi,[edx]
cmp [esi+0000009C],eax
jne end_run
mov edx,795B00
call 4745B0
test al,al
jne end_run
mov eax,esi
sub esp,80
lea edi,[esp+14]
call 472D90
mov edi,[edi+4]
add esp,80
cmp edi,#154
jne end_run
mov eax,#1000
call 5AF400
test eax,eax
jne end_run
mov [ebp+28],#97
mov [ebp+C8],7fffffff
end_run:
pop esi
end:
popad
cmp [ebp+28],#97
je 52FDF2
add dword ptr [esi+40],-04
mov ecx,[esi+40]

exit:
jmp returnhere

52FCF0:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52FCF0:
db 83 46 40 FC 8B 4E 40
//add dword ptr [esi+40],-04
//mov ecx,[esi+40]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>346</ID>
              <Description>"Projectile类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>345</ID>
                  <Description>"Projectile::CheckForCollision 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>339</ID>
                      <Description>"子弹不击中特殊状态僵尸 941400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
941400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edx+28],#97
je 46D080
originalcode:
cmp byte ptr [edx+000000BE],00

exit:
jmp returnhere

46D063:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46D063:
db 80 BA BE 00 00 00 00
//cmp byte ptr [edx+000000BE],00
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>348</ID>
              <Description>"Plant类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>347</ID>
                  <Description>"Plant::FindTargetZombie 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>333</ID>
                      <Description>"植物不攻击特殊状态僵尸 941C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
941C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+28],#97
je 467881
originalcode:
cmp byte ptr [esi+000000BA],00

exit:
jmp returnhere

467622:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
467622:
db 80 BE BA 00 00 00 00
//cmp byte ptr [esi+000000BA],00
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>366</ID>
          <Description>"新僵尸"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>386</ID>
              <Description>"扩僵尸种数 945C00"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)

/*
Board类
Board::PutInMissingZombies
*/
945C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp esi,[D7C000]//[D7C000]
jl 004092A0

exit:
jmp returnhere
/*
Board类
Board::InitZombieWavesForLevel
*/
newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_2:
cmp esi,[D7C000]//[D7C000]
jl 0040AB90

exit_2:
jmp returnhere_2
/*
CutScene类
CutScene::PlaceStreetZombies
*/
newmem_3: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_3:
cmp esi,[D7C000]//[D7C000]
jl 0043A5F4

exit_3:
jmp returnhere_3
/*
Board类
Board::PickZombieType
*/
newmem_4: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_4:
cmp ebp,[D7C000]//[D7C000]
jl 0040D8B0

exit_4:
jmp returnhere_4
/*
CutScene类
CutScene::PlaceStreetZombies
*/
newmem_5: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_5:
cmp esi,[D7C000]//[D7C000]
jl 0043A625

exit_5:
jmp returnhere_5

newmem_6: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_6:
cmp eax,[D7C000]
jl 0040D720

exit_6:
jmp returnhere_6

40D758:
jmp newmem_6
returnhere_6:

43A679:
jmp newmem_5
returnhere_5:

40DA93:
jmp newmem_4
nop 4
returnhere_4:

43A61E:
jmp newmem_3
returnhere_3:

40ABA1:
jmp newmem_2
returnhere_2:

//
4092CC:
jmp newmem
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4092CC:
db 83 FE 21 7C CF
//cmp esi,21
//jl 004092A0
40ABA1:
db 83 FE 21 7C EA
//cmp esi,21
//jl 0040AB90
43A61E:
db 83 FE 21 7C D1
//cmp esi,21
//jl 0043A5F4
40DA93:
db 83 FD 21 0F 8C 14 FE FF FF
//cmp ebp,21
//jl 0040D8B0
43A679:
db 83 FE 21 7C A7
//cmp esi,21
//jl 0043A625
40D758:
db 83 F8 21 7C C3
//cmp eax,21
//jl 0040D720
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>368</ID>
              <Description>"Zombie类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>403</ID>
                  <Description>"新僵尸特性更新 C50000"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
C50000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+24],#39
je exit
CabbagepultHead:
cmp [esi+24],#33
jne CornpultHead
mov eax,esi
call UpdateCabbagepultHead
CornpultHead:
cmp [esi+24],#34
jne WinterMelonHead
mov eax,esi
call UpdateCornpultHead
WinterMelonHead:
cmp [esi+24],#35
jne MelonpultHead
mov eax,esi
call UpdateMelonpultHead
MelonpultHead:
cmp [esi+24],#36
jne SnowPeaHead
mov eax,esi
call UpdateWinterMelonHead
SnowPeaHead:
cmp [esi+24],#38
jne MJ_Hypeno_ShroomHead
mov eax,esi
call UpdateSnowPeaHead
MJ_Hypeno_ShroomHead:
cmp [esi+24],#44
jne MJ_BackupDancer_Ice_ShroomHead
mov eax,esi
call UpdateMJ_Hypno_ShroomHead
MJ_BackupDancer_Ice_ShroomHead:
cmp [esi+24],#45
jne MJ_BackupDancer_Doom_ShroonBackupDancer
mov eax,esi
call UpdateIce_ShroonBackupDancer
MJ_BackupDancer_Doom_ShroonBackupDancer:
cmp [esi+24],#46
jne Disco
mov eax,esi
call UpdateDoom_ShroonBackupDancer
Disco:
cmp [esi+24],#47
jne Backup
mov eax,esi
call UpdateDisco
Backup:
cmp [esi+24],#48
jne PeaHead
mov eax,esi
call UpdateDiscoBackupDancer
PeaHead:
originalcode:
cmp dword ptr [esi+24],#26
jne 0052B252

exit:
jmp returnhere
UpdateCabbagepultHead:
sub esp,38
push ebx
push esi
push edi
mov edi,eax
cmp byte ptr [edi+000000BA],00
je UpdateCabbagepultHead_retrun
mov eax,[edi+68]
cmp eax,#110
jne UpdateCabbagepultHead_FireBullet
push edi
call 525890
test eax,eax
je UpdateCabbagepultHead_retrun2
mov ecx,[eax+148]
mov [edi+130],ecx
mov eax,[edi]
mov edi,[edi+00000144]
mov ecx,[eax+00000820]
mov edx,[ecx+08]
and edi,0000FFFF
lea esi,[edi+edi*4]
shl esi,05
add esi,[edx]
push 14
push esi
call 00473310
fld dword ptr [00679690]
fstp dword ptr [esi+08]
lea eax,[esi+1C]
fldz
push eax
fstp dword ptr [esi+04]
lea ecx,[esi+18]
fld dword ptr [00679378]
push ecx
mov edx,796400
fstp dword ptr [esi+00000094]
mov eax,esi
mov [esi+10],00000003
mov [esi+5C],00000000
call 004731D0
jmp UpdateCabbagepultHead_retrun
UpdateCabbagepultHead_FireBullet:
cmp eax,#75
jne UpdateCabbagepultHead_resetting
mov ecx,[edi+130]
push edx
mov edx,[edi+4]
lea edx,[edx+AC]
call 41DF00
pop edx
mov ecx,edi
call 525730
jmp UpdateCabbagepultHead_retrun
UpdateCabbagepultHead_resetting:
test eax,eax
jne UpdateCabbagepultHead_retrun
mov edx,[edi]
fld dword ptr [0067967C]
mov eax,[edx+00000820]
push ecx
mov ecx,[eax+08]
fstp dword ptr [esp]
mov eax,[edi+00000144]
and eax,0000FFFF
lea esi,[eax+eax*4]
push 03
shl esi,05
add esi,[ecx]
push 796300
mov eax,00000014
call 00473BF0
mov [edi+68],#250
UpdateCabbagepultHead_retrun:
pop edi
pop esi
pop ebx
add esp,38
ret
int 3
int 3
int 3
int 3
UpdateCabbagepultHead_retrun2:
mov [edi+68],0
pop edi
pop esi
pop ebx
add esp,38
ret
int 3
int 3
int 3
int 3
UpdateCornpultHead:
sub esp,38
pushad
mov edi,eax
cmp byte ptr [edi+000000BA],00
je UpdateCornpultHead_retrun
mov eax,[edi+68]
cmp eax,#110
jne UpdateCornpultHead_FireBullet
push edi
call 525890
test eax,eax
je UpdateCornpultHead_retrun2
mov ecx,[eax+148]
mov [edi+130],ecx
mov eax,[edi]
mov edi,[edi+00000144]
mov ecx,[eax+00000820]
mov edx,[ecx+08]
and edi,0000FFFF
lea esi,[edi+edi*4]
shl esi,05
add esi,[edx]
push edx
mov edx,796300
call 4745B0
movzx ebp,al
pop edx
push 14
push esi
call 00473310
fld dword ptr [00679690]
fstp dword ptr [esi+08]
lea eax,[esi+1C]
fldz
push eax
fstp dword ptr [esi+04]
lea ecx,[esi+18]
fld dword ptr [00679378]
push ecx
mov edx,796400
test ebp,ebp
jne Cornpult_butter_2
mov edx,796C00
Cornpult_butter_2:
fstp dword ptr [esi+00000094]
mov eax,esi
mov [esi+10],00000003
mov [esi+5C],00000000
call 004731D0
jmp UpdateCornpultHead_retrun
UpdateCornpultHead_FireBullet:
cmp eax,#75
jne UpdateCornpultHead_resetting
mov ecx,[edi+130]
push edx
mov edx,[edi+4]
lea edx,[edx+AC]
call 41DF00
pop edx
mov ecx,edi
call 525730
jmp UpdateCornpultHead_retrun
UpdateCornpultHead_resetting:
test eax,eax
jne UpdateCornpultHead_retrun
mov edx,[edi]
fld dword ptr [0067967C]
mov eax,[edx+00000820]
push ecx
mov ecx,[eax+08]
fstp dword ptr [esp]
mov eax,[edi+00000144]
and eax,0000FFFF
lea esi,[eax+eax*4]
shl esi,05
add esi,[ecx]
mov eax,4
call 5AF400
test eax,eax
push 03
push 796300
je Cornpult_kernal
mov [esp],796900
Cornpult_kernal:
mov eax,00000014
call 00473BF0
mov [edi+68],#250
UpdateCornpultHead_retrun:
popad
add esp,38
ret
int 3
int 3
int 3
int 3
UpdateCornpultHead_retrun2:
mov [edi+68],0
popad
add esp,38
ret
int 3
int 3
int 3
int 3
UpdateMelonpultHead:
sub esp,38
push ebx
push esi
push edi
mov edi,eax
cmp byte ptr [edi+000000BA],00
je UpdateMelonpultHead_retrun
mov eax,[edi+68]
cmp eax,#110
jne UpdateMelonpultHead_FireBullet
mov eax,[edi]
mov edi,[edi+00000144]
mov ecx,[eax+00000820]
mov edx,[ecx+08]
and edi,0000FFFF
lea esi,[edi+edi*4]
shl esi,05
add esi,[edx]
push 14
push esi
call 00473310
fld dword ptr [00679690]
fstp dword ptr [esi+08]
lea eax,[esi+1C]
fldz
push eax
fstp dword ptr [esi+04]
lea ecx,[esi+18]
fld dword ptr [00679378]
push ecx
mov edx,796400
fstp dword ptr [esi+00000094]
mov eax,esi
mov [esi+10],00000003
mov [esi+5C],00000000
call 004731D0
jmp UpdateMelonpultHead_retrun
UpdateMelonpultHead_FireBullet:
cmp eax,#75
jne UpdateMelonpultHead_resetting
mov eax,[edi]
cmp byte ptr [eax+000008C5],00
jne UpdateMelonpultHead_resetting_1
fldz
mov ecx,[006A9F00]
mov esi,[eax+00000784]
fst dword ptr [esp+10]
fcomp dword ptr [ecx+000000A0]
fnstsw ax
test ah,44
jnp UpdateMelonpultHead_resetting_2
fld dword ptr [ecx+000000A0]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+14]
add esp,04
UpdateMelonpultHead_resetting_2:
fld dword ptr [esp+10]
push ecx
mov eax,00000003
fstp dword ptr [esp]
mov ecx,esi
call 00515020
UpdateMelonpultHead_resetting_1:
mov edx,[edi]
mov eax,[edx+00000820]
mov ecx,[eax+08]
mov eax,[edi+00000144]
and eax,0000FFFF
lea esi,[eax+eax*4]
shl esi,05
add esi,[ecx]
push 796B00
mov ebx,esi
call 00472F30
fld dword ptr [00665420]
fst dword ptr [esp+18]
mov ebx,eax
fst dword ptr [esp+1C]
xor eax,eax
fst dword ptr [esp+20]
mov [esp+3C],eax
fst dword ptr [esp+24]
mov [esp+38],eax
fst dword ptr [esp+28]
push esi
fst dword ptr [esp+30]
lea eax,[esp+1C]
fst dword ptr [esp+34]
mov [esp+44],0065540C
fstp dword ptr [esp+38]
call 00471F90
fld dword ptr [edi+2C]
mov edx,[edi+1C]
fadd dword ptr [esp+18]
mov eax,[edi+20]
push 3 //子弹ID
push edx
fsub qword ptr [006792D0]
push eax
fstp dword ptr [esp+20]
fld dword ptr [edi+30]
fadd dword ptr [esp+28]
fadd qword ptr [006793B8]
fsub dword ptr [edi+00000084]
fstp dword ptr [esp+1C]
fld dword ptr [esp+1C]
call 006397D0
fld dword ptr [esp+20]
push eax
call 006397D0
push eax
mov eax,[edi+04]
call 0040D620
mov [eax+58],#10
jmp UpdateMelonpultHead_retrun
UpdateMelonpultHead_resetting:
cmp eax,#1
jne UpdateMelonpultHead_resetting_3
mov edx,[edi]
fld dword ptr [0067967C]
mov eax,[edx+00000820]
push ecx
mov ecx,[eax+08]
fstp dword ptr [esp]
mov eax,[edi+00000144]
and eax,0000FFFF
lea esi,[eax+eax*4]
push 03
shl esi,05
add esi,[ecx]
push 796300
mov eax,00000014
call 00473BF0
jmp UpdateMelonpultHead_retrun
UpdateMelonpultHead_resetting_3:
test eax,eax
jne UpdateMelonpultHead_retrun
mov [edi+68],#300
UpdateMelonpultHead_retrun:
pop edi
pop esi
pop ebx
add esp,38
ret
int 3
int 3
int 3
int 3
UpdateWinterMelonHead:
sub esp,38
push ebx
push esi
push edi
mov edi,eax
cmp byte ptr [edi+000000BA],00
je UpdateWinterMelonHead_retrun
mov eax,[edi+68]
cmp eax,#110
jne UpdateWinterMelonHead_FireBullet
mov eax,[edi]
mov edi,[edi+00000144]
mov ecx,[eax+00000820]
mov edx,[ecx+08]
and edi,0000FFFF
lea esi,[edi+edi*4]
shl esi,05
add esi,[edx]
push 14
push esi
call 00473310
fld dword ptr [00679690]
fstp dword ptr [esi+08]
lea eax,[esi+1C]
fldz
push eax
fstp dword ptr [esi+04]
lea ecx,[esi+18]
fld dword ptr [00679378]
push ecx
mov edx,796400
fstp dword ptr [esi+00000094]
mov eax,esi
mov [esi+10],00000003
mov [esi+5C],00000000
call 004731D0
jmp UpdateWinterMelonHead_retrun
UpdateWinterMelonHead_FireBullet:
cmp eax,#75
jne UpdateWinterMelonHead_resetting
mov eax,[edi]
cmp byte ptr [eax+000008C5],00
jne UpdateWinterMelonHead_resetting_1
fldz
mov ecx,[006A9F00]
mov esi,[eax+00000784]
fst dword ptr [esp+10]
fcomp dword ptr [ecx+000000A0]
fnstsw ax
test ah,44
jnp UpdateWinterMelonHead_resetting_2
fld dword ptr [ecx+000000A0]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+14]
add esp,04
UpdateWinterMelonHead_resetting_2:
fld dword ptr [esp+10]
push ecx
mov eax,00000003
fstp dword ptr [esp]
mov ecx,esi
call 00515020
UpdateWinterMelonHead_resetting_1:
mov edx,[edi]
mov eax,[edx+00000820]
mov ecx,[eax+08]
mov eax,[edi+00000144]
and eax,0000FFFF
lea esi,[eax+eax*4]
shl esi,05
add esi,[ecx]
push 796B00
mov ebx,esi
call 00472F30
fld dword ptr [00665420]
fst dword ptr [esp+18]
mov ebx,eax
fst dword ptr [esp+1C]
xor eax,eax
fst dword ptr [esp+20]
mov [esp+3C],eax
fst dword ptr [esp+24]
mov [esp+38],eax
fst dword ptr [esp+28]
push esi
fst dword ptr [esp+30]
lea eax,[esp+1C]
fst dword ptr [esp+34]
mov [esp+44],0065540C
fstp dword ptr [esp+38]
call 00471F90
fld dword ptr [edi+2C]
mov edx,[edi+1C]
fadd dword ptr [esp+18]
mov eax,[edi+20]
push 5 //子弹ID
push edx
fsub qword ptr [006792D0]
push eax
fstp dword ptr [esp+20]
fld dword ptr [edi+30]
fadd dword ptr [esp+28]
fadd qword ptr [006793B8]
fsub dword ptr [edi+00000084]
fstp dword ptr [esp+1C]
fld dword ptr [esp+1C]
call 006397D0
fld dword ptr [esp+20]
push eax
call 006397D0
push eax
mov eax,[edi+04]
call 0040D620
mov [eax+58],#10
jmp UpdateWinterMelonHead_retrun
UpdateWinterMelonHead_resetting:
cmp eax,#1
jne UpdateWinterMelonHead_resetting_3
mov edx,[edi]
fld dword ptr [0067967C]
mov eax,[edx+00000820]
push ecx
mov ecx,[eax+08]
fstp dword ptr [esp]
mov eax,[edi+00000144]
and eax,0000FFFF
lea esi,[eax+eax*4]
push 03
shl esi,05
add esi,[ecx]
push 796300
mov eax,00000014
call 00473BF0
jmp UpdateWinterMelonHead_retrun
UpdateWinterMelonHead_resetting_3:
test eax,eax
jne UpdateWinterMelonHead_retrun
mov [edi+68],#300
UpdateWinterMelonHead_retrun:
pop edi
pop esi
pop ebx
add esp,38
ret
int 3
int 3
int 3
int 3
UpdateDisco:
push ebx
push esi
push edi
mov edi,eax
cmp byte ptr [edi+51],00
jne UpdateDisco_retrun
mov eax,[edi+130]
test eax,eax
jle UpdateDisco_Run_anim_point
add eax,-01
mov [edi+130],eax
jne UpdateDisco_Run_anim_point
mov eax,edi
call 0052DF90
cmp eax,0C
jne UpdateDisco_Run_anim_point2
cmp byte ptr [edi+000000BA],00
je UpdateDisco_Run_anim_point2
fld dword ptr [00679B54]
fcomp dword ptr [edi+2C]
fnstsw ax
test ah,41
jne UpdateDisco_Run_anim_point2
fld dword ptr [00679638]
push ecx
fstp dword ptr [esp]
push 14
push 03
push 0066EE64
mov [edi+28],0000002A
call 00528B00
jmp UpdateDisco_Run_anim_point
UpdateDisco_Run_anim_point2:
mov [edi+00000114],00000001
UpdateDisco_Run_anim_point:
mov ecx,[edi+28]
cmp ecx,28
jne UpdateDisco_Run_anim_walk
cmp byte ptr [edi+000000BA],00
je 00528EBB
cmp dword ptr [edi+68],00
jne 00528EBB
fld dword ptr [00679638]
push ecx
fstp dword ptr [esp]
push 14
push 03
push 0066EE64
mov [edi+28],00000029
call 00528B00
mov eax,edi
pop edi
pop esi
pop ebx
jmp 00524A70
UpdateDisco_Run_anim_walk:
cmp ecx,29
je UpdateDisco_summon_Backup_Start
cmp ecx,2A
je UpdateDisco_summon_Backup_Start
cmp ecx,2B
mov esi,0000002C
jne UpdateDisco_Run_anim_walk_end
cmp dword ptr [edi+68],00
jne 00528EBB
fldz
push ecx
fstp dword ptr [esp]
mov [edi+28],esi
push 14
push 00
push 0066918C
call 00528B00
UpdateDisco_Run_anim_walk_end:
mov eax,edi
call 0052DFE0
cmp eax,[edi+28]
je UpdateDisco_summon_Backup
cmp eax,esi
jne UpdateDisco_Run_anim_armraise
fldz
push ecx
fstp dword ptr [esp]
mov [edi+28],esi
push 0A
push 00
push 0066918C
jmp UpdateDisco_summon_Backup2
UpdateDisco_Run_anim_armraise:
cmp eax,2D
jne UpdateDisco_Run_anim_armraise2
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
push 0066EB78
mov [edi+28],eax
call 00528B00
fld dword ptr [00679610]
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
mov ecx,[edx]
and eax,0000FFFF
lea eax,[eax+eax*4]
shl eax,05
fstp dword ptr [ecx+eax+04]
jmp UpdateDisco_summon_Backup
UpdateDisco_Run_anim_armraise2:
cmp eax,2E
je UpdateDisco_Run_anim_armraise2_end
cmp eax,2F
je UpdateDisco_Run_anim_armraise2_end
cmp eax,30
je UpdateDisco_Run_anim_armraise2_end
cmp eax,31
jne UpdateDisco_summon_Backup
UpdateDisco_Run_anim_armraise2_end:
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
mov [edi+28],eax
push 0066EB78
UpdateDisco_summon_Backup2:
call 00528B00
UpdateDisco_summon_Backup:
cmp byte ptr [edi+000000BA],00
je UpdateDisco_retrun
cmp dword ptr [edi+00000114],00
jne UpdateDisco_retrun
call 00528A50
test al,al
je UpdateDisco_retrun
mov [edi+00000114],00000064
jmp UpdateDisco_retrun
UpdateDisco_summon_Backup_Start:
mov edx,[edi]
mov eax,[edx+00000820]
mov edx,[eax+08]
mov eax,[edi+00000118]
mov edx,[edx]
and eax,0000FFFF
lea eax,[eax+eax*4]
shl eax,05
cmp dword ptr [edx+eax+5C],00
jle UpdateDisco_retrun
cmp ecx,29
jne UpdateDisco_retrun2
mov ebx,[edi+04]
call 00408B60
cmp eax,0F
jg UpdateDisco_retrun2
mov eax,[edi]
mov esi,00000064
call 00453630
UpdateDisco_retrun2:
mov esi,edi
call SummonDiscoBackupDancers
mov [edi+28],0000002B
mov [edi+68],000000C8
UpdateDisco_retrun:
pop edi
pop esi
pop ebx
ret
int 3
int 3
int 3
SummonDiscoBackupDancers:
sub esp,08
cmp byte ptr [esi+000000BA],00
push ebx
push ebp
push edi
je SummonDiscoBackup_retrun
fld qword ptr [006792A0]
mov edi,[esp+10]
mov ebx,[esp+10]
xor ebp,ebp
SummonDiscoBackup__Re:
mov ecx,[esi+04]
mov edx,[esi+ebp*4+000000F4]
add ecx,00000090
test edx,edx
je SummonDiscoBackup__1
movzx eax,dx
cmp eax,[ecx+08]
jae SummonDiscoBackup__1
imul eax,eax,15C
add eax,[ecx]
cmp [eax+00000158],edx
je SummonDiscoBackup__end
SummonDiscoBackup__1:
cmp ebp,03
ja SummonDiscoBackup__2
cmp ebp,1
je SummonDiscoBackup__2_1
cmp ebp,2
je SummonDiscoBackup__2_2
cmp ebp,3
je SummonDiscoBackup__2_3
mov edi,[esi+1C]
fstp st(0)
fld dword ptr [esi+2C]
sub edi,01
call 006397D0
mov ebx,eax
jmp SummonDiscoBackup__4
SummonDiscoBackup__2_1:
mov edi,[esi+1C]
SummonDiscoBackup__2:
fstp st(0)
SummonDiscoBackup__3:
fld dword ptr [esi+2C]
add edi,01
call 006397D0
mov ebx,eax
jmp SummonDiscoBackup__4
SummonDiscoBackup__2_3:
fsubr dword ptr [esi+2C]
mov edi,[esi+1C]
call 006397D0
mov ebx,eax
jmp SummonDiscoBackup__4
SummonDiscoBackup__2_2:
fadd dword ptr [esi+2C]
mov edi,[esi+1C]
call 006397D0
mov ebx,eax
jmp SummonDiscoBackup__4
fstp st(0)
SummonDiscoBackup__4:
push ebx
push edi
mov eax,esi
call SummonDiscoBackupDancer
fld qword ptr [006792A0]
mov [esi+ebp*4+000000F4],eax
SummonDiscoBackup__end:
add ebp,01
cmp ebp,04
jl SummonDiscoBackup__Re
fstp st(0)
SummonDiscoBackup_retrun:
pop edi
pop ebp
pop ebx
add esp,08
ret
mov edi,edi
ret
mov [edx+00],edx
fisttp word ptr [ecx-760CFFAE]
push edx
add [edx],al
mov dl,[edx+00]
mov ecx,[edi+04]
push ebx
push ebp
push esi
xor esi,esi
lea ebx,[esi+05]
lea ebp,[esi+02]
mov edi,edi
SummonDiscoBackup_Re1:
mov edx,[edi+esi*4+000000F4]
test edx,edx
je SummonDiscoBackup_1
movzx eax,dx
cmp eax,[ecx+00000098]
jae SummonDiscoBackup_1
imul eax,eax,15C
add eax,[ecx+00000090]
cmp [eax+00000158],edx
je SummonDiscoBackup_2
SummonDiscoBackup_1:
test esi,esi
jne SummonDiscoBackup_3
mov eax,[edi+1C]
sub eax,01
jmp SummonDiscoBackup_4
SummonDiscoBackup_3:
cmp esi,01
jne SummonDiscoBackup_retrun_al_1
mov eax,[edi+1C]
add eax,esi
cmp eax,ebx
SummonDiscoBackup_4:
ja SummonDiscoBackup_2
mov edx,[ecx+0000008C]
mov edx,[edx+000007F8]
cmp edx,26
jne SummonDiscoBackup_5
cmp eax,04
jle SummonDiscoBackup_6
SummonDiscoBackup_5:
cmp dword ptr [ecx+eax*4+000005D8],00
je SummonDiscoBackup_2
SummonDiscoBackup_6:
cmp edx,26
jne SummonDiscoBackup_7
cmp dword ptr [ecx+eax*4+000005D8],00
jne SummonDiscoBackup_7
cmp [ecx+0000557C],ebx
jl SummonDiscoBackup_2
SummonDiscoBackup_7:
cmp [ecx+eax*4+000005D8],ebp
jne SummonDiscoBackup_retrun_al_1
SummonDiscoBackup_2:
add esi,01
cmp esi,04
jl SummonDiscoBackup_Re1
SummonDiscoBackup_retrun_al_0:
pop esi
pop ebp
xor al,al
pop ebx
ret
SummonDiscoBackup_retrun_al_1:
pop esi
pop ebp
mov al,01
pop ebx
ret
int 3
int 3
int 3
int 3
SummonDiscoBackupDancer:
push ebp
mov ebp,esp
and esp,-08
sub esp,0C
push ebx
mov ebx,eax
mov eax,[ebp+08]
cmp eax,05
push esi
mov esi,[ebx+04]
push edi
ja SummonDiscoBackupDancer_retrun
mov ecx,[esi+0000008C]
mov ecx,[ecx+000007F8]
cmp ecx,26
jne SummonDiscoBackupDancer_1
cmp eax,04
jle SummonDiscoBackupDancer_2
SummonDiscoBackupDancer_1:
cmp dword ptr [esi+eax*4+000005D8],00
je SummonDiscoBackupDancer_retrun
SummonDiscoBackupDancer_2:
cmp ecx,26
jne SummonDiscoBackupDancer_3
cmp dword ptr [esi+eax*4+000005D8],00
jne SummonDiscoBackupDancer_3
cmp dword ptr [esi+0000557C],05
jl SummonDiscoBackupDancer_retrun
SummonDiscoBackupDancer_3:
cmp dword ptr [esi+eax*4+000005D8],02
jne SummonDiscoBackupDancer_4
SummonDiscoBackupDancer_retrun:
xor eax,eax
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0008
SummonDiscoBackupDancer_4:
mov edx,[ebx+6C]
push #48
mov eax,esi
mov [esp+14],edx
call 0040DC50
mov [esp+14],eax
mov eax,[esi+00000098]
sub eax,01
cmp [esi+000000A0],eax
jae SummonDiscoBackupDancer_retrun
mov eax,00000005
mov byte ptr [esp+0C],00
call 005AF400
test eax,eax
jne SummonDiscoBackupDancer_5
mov byte ptr [esp+0C],01
SummonDiscoBackupDancer_5:
add esi,00000090
call 0041DDA0
mov ecx,[esp+10]
mov edx,[esp+0C]
push ecx
push 00
push edx
mov edi,eax
mov eax,[esp+20]
push #48
push edi
call 00522580
test edi,edi
je SummonDiscoBackupDancer_retrun
fild dword ptr [ebp+0C]
mov esi,[ebp+08]
push esi
mov eax,ebx
fstp dword ptr [edi+2C]
call 00531880
mov [edi+1C],esi
imul esi,esi,00002710
fstp dword ptr [esp+14]
fld dword ptr [esp+14]
fst dword ptr [edi+30]
fld dword ptr [edi+2C]
lea eax,[esi+00049F9C]
mov [edi+20],eax
call 006397D0
mov [edi+08],eax
call 006397D0
fld dword ptr [00665410]
mov [edi+0C],eax
fstp dword ptr [edi+00000084]
mov [edi+28],00000032
fldz
mov [edi+68],00000096
mov ecx,[ebx+00000158]
fst dword ptr [edi+00000124]
push ecx
fstp dword ptr [esp]
mov eax,edi
mov [edi+000000F0],ecx
call 0052EFF0
fld dword ptr [edi+2C]
mov dl,[ebx+000000B8]
mov [edi+000000B8],dl
call 006397D0
fld dword ptr [edi+30]
add eax,3C
mov [esp+14],eax
call 006397D0
add eax,6E
push edi
mov [esp+10],eax
call 0052F9C0
test al,al
je SummonDiscoBackupDancer_6
sub dword ptr [esp+0C],1E
SummonDiscoBackupDancer_6:
fild dword ptr [esp+0C]
mov eax,[ebx]
mov ecx,[eax+00000820]
push 21
add esi,0004AF38
push esi
mov esi,[ecx]
sub esp,08
fstp dword ptr [esp+04]
fild dword ptr [esp+24]
fstp dword ptr [esp]
call 00518A70
mov ebx,[ebx]
cmp byte ptr [ebx+000008C5],00
jne SummonDiscoBackupDancer_return2
fldz
mov ecx,[006A9F00]
mov ebx,[ebx+00000784]
fst dword ptr [esp+0C]
fcomp dword ptr [ecx+00001010]
fnstsw ax
test ah,44
jnp SummonDiscoBackupDancer_return3
fld dword ptr [ecx+00001010]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+10]
add esp,04
SummonDiscoBackupDancer_return3:
fld dword ptr [esp+0C]
push ecx
mov eax,0000004F
fstp dword ptr [esp]
mov ecx,ebx
call 00515020
SummonDiscoBackupDancer_return2:
mov eax,[edi+00000158]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0008
int 3
int 3
int 3
int 3
UpdateDiscoBackupDancer:
sub esp,08
push ebx
push esi
push edi
mov edi,eax
cmp byte ptr [edi+51],00
jne UpdateDiscoBackupDancer_retrun
mov ebx,[edi+28]
cmp ebx,32
jne UpdateDiscoBackupDancer_1
mov esi,[edi+68]
push 01
push 00
push FFFFFF38
mov eax,esi
xor ecx,ecx
lea edx,[ebx+64]
call 00511C40
mov [esp+1C],eax
fild dword ptr [esp+1C]
add esp,0C
test esi,esi
fstp dword ptr [edi+00000084]
jne UpdateDiscoBackupDancer_retrun
push edi
call 0052F9C0
test al,al
je UpdateDiscoBackupDancer_1
fld dword ptr [0066541C]
fstp dword ptr [edi+00000084]
UpdateDiscoBackupDancer_1:
mov eax,edi
call 0052DFE0
cmp eax,ebx
je UpdateDiscoBackupDancer_retrun
cmp eax,2C
jne UpdateDiscoBackupDancer_2
fldz
push ecx
fstp dword ptr [esp]
mov [edi+28],eax
push 0A
push 00
push 0066918C
call 00528B00
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateDiscoBackupDancer_2:
cmp eax,2D
jne UpdateDiscoBackupDancer_3
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
push 0066EB78
mov [edi+28],eax
call 00528B00
fld dword ptr [00679610]
mov eax,[edi]
mov ecx,[eax+00000820]
mov edi,[edi+00000118]
mov edx,[ecx+08]
mov ecx,[edx]
and edi,0000FFFF
lea eax,[edi+edi*4]
shl eax,05
fstp dword ptr [ecx+eax+04]
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateDiscoBackupDancer_3:
cmp eax,2E
je UpdateDiscoBackupDancer_4
cmp eax,2F
je UpdateDiscoBackupDancer_4
cmp eax,30
je UpdateDiscoBackupDancer_4
cmp eax,31
jne UpdateDiscoBackupDancer_retrun
UpdateDiscoBackupDancer_4:
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
push 0066EB78
mov [edi+28],eax
call 00528B00
UpdateDiscoBackupDancer_retrun:
pop edi
pop esi
pop ebx
add esp,08
ret
int 3
int 3
int 3
int 3
UpdateIce_ShroonBackupDancer:
sub esp,08
push ebx
push esi
push edi
mov edi,eax
cmp byte ptr [edi+51],00
jne UpdateIce_ShroonBackupDancer_retrun
cmp [edi+68],0
jg UpdateIce_ShroonBackupDancer__
mov ecx,[edi+144]
mov eax,[edi]
call 453CB0
test eax,eax
je UpdateIce_ShroonBackupDancer__
mov ebx,[edi+13C]
sub ebx,1
cmp ebx,0
jg UpdateIce_ShroonBackupDancer_
push eax
push esi
push 0
UpdateIce_ShroonBackupDancer_IteratePlants_start:
mov esi,esp
mov edx,[edi+4]
call 41C950
test al,al
je UpdateIce_ShroonBackupDancer_IteratePlants_end
mov eax,[esi]
call D18C00
jmp UpdateIce_ShroonBackupDancer_IteratePlants_start
UpdateIce_ShroonBackupDancer_IteratePlants_end:
add esp,4
pop esi
pop eax
pushad
mov eax,#42
mov ecx,#400000
push [edi+30]
push [edi+2C]
mov edx,[edi]
call 453C80
UpdateIce_ShroonBackupDancer_moderate_playssound:
mov eax,[edi]
cmp byte ptr [eax+8C5],00
jne UpdateIce_ShroonBackupDancer_moderate_playssound_end
fldz
mov ecx,[6A9F00]
mov edi,[eax+784]
fst dword ptr [esp+0C]
fcomp dword ptr [ecx+03AC]
fnstsw ax
test ah,44
jnp UpdateIce_ShroonBackupDancer_moderate_playssound_end2
fld dword ptr [ecx+000003AC]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+10]
add esp,04
UpdateIce_ShroonBackupDancer_moderate_playssound_end2:
fld dword ptr [esp+0C]
push ecx
mov eax,00000012
fstp dword ptr [esp]
mov ecx,edi
call 00515020
UpdateIce_ShroonBackupDancer_moderate_playssound_end:
popad
push ecx
mov ecx,edi
call 5302F0
pop ecx
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateIce_ShroonBackupDancer_:
mov [edi+13C],ebx
UpdateIce_ShroonBackupDancer__:
mov ebx,[edi+28]
cmp ebx,32
jne UpdateIce_ShroonBackupDancer_1
mov esi,[edi+68]
push 01
push 00
push FFFFFF38
mov eax,esi
xor ecx,ecx
lea edx,[ebx+64]
call 00511C40
mov [esp+1C],eax
fild dword ptr [esp+1C]
add esp,0C
test esi,esi
fstp dword ptr [edi+00000084]
jne UpdateIce_ShroonBackupDancer_retrun
push edi
call 0052F9C0
test al,al
je UpdateIce_ShroonBackupDancer_1
fld dword ptr [0066541C]
fstp dword ptr [edi+00000084]
UpdateIce_ShroonBackupDancer_1:
mov eax,edi
call 0052DFE0
cmp eax,ebx
je UpdateIce_ShroonBackupDancer_retrun
cmp eax,2C
jne UpdateIce_ShroonBackupDancer_2
fldz
push ecx
fstp dword ptr [esp]
mov [edi+28],eax
push 0A
push 00
push 0066918C
call 00528B00
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateIce_ShroonBackupDancer_2:
cmp eax,2D
jne UpdateIce_ShroonBackupDancer_3
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
push 0066EB78
mov [edi+28],eax
call 00528B00
fld dword ptr [00679610]
mov eax,[edi]
mov ecx,[eax+00000820]
mov edi,[edi+00000118]
mov edx,[ecx+08]
mov ecx,[edx]
and edi,0000FFFF
lea eax,[edi+edi*4]
shl eax,05
fstp dword ptr [ecx+eax+04]
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateIce_ShroonBackupDancer_3:
cmp eax,2E
je UpdateIce_ShroonBackupDancer_4
cmp eax,2F
je UpdateIce_ShroonBackupDancer_4
cmp eax,30
je UpdateIce_ShroonBackupDancer_4
cmp eax,31
jne UpdateIce_ShroonBackupDancer_retrun
UpdateIce_ShroonBackupDancer_4:
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
push 0066EB78
mov [edi+28],eax
call 00528B00
UpdateIce_ShroonBackupDancer_retrun:
pop edi
pop esi
pop ebx
add esp,08
ret
int 3
int 3
int 3
int 3
UpdateDoom_ShroonBackupDancer:
sub esp,08
push ebx
push esi
push edi
mov edi,eax
cmp byte ptr [edi+51],00
jne UpdateDoom_ShroonBackupDancer_retrun
cmp [edi+68],0
jg UpdateDoom_ShroonBackupDancer__
mov ebx,[edi+13C]
sub ebx,1
cmp ebx,0
jg UpdateDoom_ShroonBackupDancer_
push ecx
mov ecx,edi
call 5302F0
pop ecx
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateDoom_ShroonBackupDancer_:
mov [edi+13C],ebx
UpdateDoom_ShroonBackupDancer__:
mov ebx,[edi+28]
cmp ebx,32
jne UpdateDoom_ShroonBackupDancer_1
mov esi,[edi+68]
push 01
push 00
push FFFFFF38
mov eax,esi
xor ecx,ecx
lea edx,[ebx+64]
call 00511C40
mov [esp+1C],eax
fild dword ptr [esp+1C]
add esp,0C
test esi,esi
fstp dword ptr [edi+00000084]
jne UpdateDoom_ShroonBackupDancer_retrun
push edi
call 0052F9C0
test al,al
je UpdateDoom_ShroonBackupDancer_1
fld dword ptr [0066541C]
fstp dword ptr [edi+00000084]
UpdateDoom_ShroonBackupDancer_1:
mov eax,edi
call 0052DFE0
cmp eax,ebx
je UpdateDoom_ShroonBackupDancer_retrun
cmp eax,2C
jne UpdateDoom_ShroonBackupDancer_2
fldz
push ecx
fstp dword ptr [esp]
mov [edi+28],eax
push 0A
push 00
push 0066918C
call 00528B00
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateDoom_ShroonBackupDancer_2:
cmp eax,2D
jne UpdateDoom_ShroonBackupDancer_3
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
push 0066EB78
mov [edi+28],eax
call 00528B00
fld dword ptr [00679610]
mov eax,[edi]
mov ecx,[eax+00000820]
mov edi,[edi+00000118]
mov edx,[ecx+08]
mov ecx,[edx]
and edi,0000FFFF
lea eax,[edi+edi*4]
shl eax,05
fstp dword ptr [ecx+eax+04]
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateDoom_ShroonBackupDancer_3:
cmp eax,2E
je UpdateDoom_ShroonBackupDancer_4
cmp eax,2F
je UpdateDoom_ShroonBackupDancer_4
cmp eax,30
je UpdateDoom_ShroonBackupDancer_4
cmp eax,31
jne UpdateDoom_ShroonBackupDancer_retrun
UpdateDoom_ShroonBackupDancer_4:
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
push 0066EB78
mov [edi+28],eax
call 00528B00
UpdateDoom_ShroonBackupDancer_retrun:
pop edi
pop esi
pop ebx
add esp,08
ret
int 3
int 3
int 3
int 3
UpdateMJ_Hypno_ShroomHead:
push ebx
push esi
push edi
mov edi,eax
cmp byte ptr [edi+51],00
jne UpdateMJ_Hypno_ShroomHead_retrun
mov eax,[edi+114]
test eax,eax
jle UpdateMJ_Hypno_ShroomHead_Run_anim_point
add eax,-01
mov [edi+114],eax
jne UpdateMJ_Hypno_ShroomHead_Run_anim_point
mov eax,edi
call 0052DF90
cmp eax,0C
jne UpdateMJ_Hypno_ShroomHead_Run_anim_point2
cmp byte ptr [edi+000000BA],00
je UpdateMJ_Hypno_ShroomHead_Run_anim_point2
fld dword ptr [00679B54]
fcomp dword ptr [edi+2C]
fnstsw ax
test ah,41
jne UpdateMJ_Hypno_ShroomHead_Run_anim_point2
fld dword ptr [00679638]
push ecx
fstp dword ptr [esp]
push 14
push 03
push 0066EE64
mov [edi+28],0000002A
call 00528B00
jmp UpdateMJ_Hypno_ShroomHead_Run_anim_point
UpdateMJ_Hypno_ShroomHead_Run_anim_point2:
mov [edi+00000114],00000001
UpdateMJ_Hypno_ShroomHead_Run_anim_point:
mov ecx,[edi+28]
cmp ecx,28
jne UpdateMJ_Hypno_ShroomHead_Run_anim_walk
cmp byte ptr [edi+000000BA],00
je 00528EBB
cmp dword ptr [edi+68],00
jne 00528EBB
fld dword ptr [00679638]
push ecx
fstp dword ptr [esp]
push 14
push 03
push 0066EE64
mov [edi+28],00000029
call 00528B00
mov eax,edi
pop edi
pop esi
pop ebx
jmp 00524A70
UpdateMJ_Hypno_ShroomHead_Run_anim_walk:
cmp ecx,29
je UpdateMJ_Hypno_ShroomHead_summon_Backup_Start
cmp ecx,2A
je UpdateMJ_Hypno_ShroomHead_summon_Backup_Start
cmp ecx,2B
mov esi,0000002C
jne UpdateMJ_Hypno_ShroomHead_Run_anim_walk_end
cmp dword ptr [edi+68],00
jne 00528EBB
fldz
push ecx
fstp dword ptr [esp]
mov [edi+28],esi
push 14
push 00
push 0066918C
call 00528B00
UpdateMJ_Hypno_ShroomHead_Run_anim_walk_end:
mov eax,edi
call 0052DFE0
cmp eax,[edi+28]
je UpdateMJ_Hypno_ShroomHead_summon_Backup
cmp eax,esi
jne UpdateMJ_Hypno_ShroomHead_Run_anim_armraise
fldz
push ecx
fstp dword ptr [esp]
mov [edi+28],esi
push 0A
push 00
push 0066918C
jmp UpdateMJ_Hypno_ShroomHead_summon_Backup2
UpdateMJ_Hypno_ShroomHead_Run_anim_armraise:
cmp eax,2D
jne UpdateMJ_Hypno_ShroomHead_Run_anim_armraise2
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
push 0066EB78
mov [edi+28],eax
call 00528B00
fld dword ptr [00679610]
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
mov ecx,[edx]
and eax,0000FFFF
lea eax,[eax+eax*4]
shl eax,05
fstp dword ptr [ecx+eax+04]
jmp UpdateMJ_Hypno_ShroomHead_summon_Backup
UpdateMJ_Hypno_ShroomHead_Run_anim_armraise2:
cmp eax,2E
je UpdateMJ_Hypno_ShroomHead_Run_anim_armraise2_end
cmp eax,2F
je UpdateMJ_Hypno_ShroomHead_Run_anim_armraise2_end
cmp eax,30
je UpdateMJ_Hypno_ShroomHead_Run_anim_armraise2_end
cmp eax,31
jne UpdateMJ_Hypno_ShroomHead_summon_Backup
UpdateMJ_Hypno_ShroomHead_Run_anim_armraise2_end:
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
mov [edi+28],eax
push 0066EB78
UpdateMJ_Hypno_ShroomHead_summon_Backup2:
call 00528B00
UpdateMJ_Hypno_ShroomHead_summon_Backup:
cmp byte ptr [edi+000000BA],00
je UpdateMJ_Hypno_ShroomHead_retrun
cmp dword ptr [edi+00000114],00
jne UpdateMJ_Hypno_ShroomHead_retrun
call 00528A50
test al,al
je UpdateMJ_Hypno_ShroomHead_retrun
mov [edi+00000114],00000064
jmp UpdateMJ_Hypno_ShroomHead_retrun
UpdateMJ_Hypno_ShroomHead_summon_Backup_Start:
mov edx,[edi]
mov eax,[edx+00000820]
mov edx,[eax+08]
mov eax,[edi+00000118]
mov edx,[edx]
and eax,0000FFFF
lea eax,[eax+eax*4]
shl eax,05
cmp dword ptr [edx+eax+5C],00
jle UpdateMJ_Hypno_ShroomHead_retrun
cmp ecx,29
jne UpdateMJ_Hypno_ShroomHead_retrun2
mov ebx,[edi+04]
call 00408B60
cmp eax,0F
jg UpdateMJ_Hypno_ShroomHead_retrun2
mov eax,[edi]
mov esi,00000064
call 00453630
UpdateMJ_Hypno_ShroomHead_retrun2:
pushad
mov ebp,0
UpdateMJ_Hypno_ShroomHead_search_Dancers:
mov ecx,[edi+ebp*4+F4]
mov edx,[edi+4]
call 41C7F0
test al,al
jne UpdateMJ_Hypno_ShroomHead_find_Dancers
add ebp,1
cmp ebp,3
jle UpdateMJ_Hypno_ShroomHead_search_Dancers
mov eax,2
call 5AF400
mov [edi+14C],al
UpdateMJ_Hypno_ShroomHead_find_Dancers:
popad
mov esi,edi
call SummonShroomHeadBackupDancers
mov [edi+28],0000002B
mov [edi+68],000000C8
UpdateMJ_Hypno_ShroomHead_retrun:
pop edi
pop esi
pop ebx
ret
int 3
int 3
int 3
SummonShroomHeadBackupDancers:
sub esp,08
cmp byte ptr [esi+000000BA],00
push ebx
push ebp
push edi
je SummonShroomHeadBackup_retrun
fld qword ptr [006792A0]
mov edi,[esp+10]
mov ebx,[esp+10]
xor ebp,ebp
SummonShroomHeadBackup__Re:
mov ecx,[esi+04]
mov edx,[esi+ebp*4+000000F4]
add ecx,00000090
test edx,edx
je SummonShroomHeadBackup__1
movzx eax,dx
cmp eax,[ecx+08]
jae SummonShroomHeadBackup__1
imul eax,eax,15C
add eax,[ecx]
cmp [eax+00000158],edx
je SummonShroomHeadBackup__end
SummonShroomHeadBackup__1:
cmp ebp,03
ja SummonShroomHeadBackup__2
cmp ebp,1
je SummonShroomHeadBackup__2_1
cmp ebp,2
je SummonShroomHeadBackup__2_2
cmp ebp,3
je SummonShroomHeadBackup__2_3
mov edi,[esi+1C]
fstp st(0)
fld dword ptr [esi+2C]
sub edi,01
call 006397D0
mov ebx,eax
jmp SummonShroomHeadBackup__4
SummonShroomHeadBackup__2_1:
mov edi,[esi+1C]
SummonShroomHeadBackup__2:
fstp st(0)
SummonShroomHeadBackup__3:
fld dword ptr [esi+2C]
add edi,01
call 006397D0
mov ebx,eax
jmp SummonShroomHeadBackup__4
SummonShroomHeadBackup__2_3:
fsubr dword ptr [esi+2C]
mov edi,[esi+1C]
call 006397D0
mov ebx,eax
jmp SummonShroomHeadBackup__4
SummonShroomHeadBackup__2_2:
fadd dword ptr [esi+2C]
mov edi,[esi+1C]
call 006397D0
mov ebx,eax
jmp SummonShroomHeadBackup__4
fstp st(0)
SummonShroomHeadBackup__4:
push ebp
push [esi+14C]
push ebx
push edi
mov eax,esi
call SummonShroomHeadBackupDancer
fld qword ptr [006792A0]
mov [esi+ebp*4+000000F4],eax
SummonShroomHeadBackup__end:
add ebp,01
cmp ebp,04
jl SummonShroomHeadBackup__Re
fstp st(0)
SummonShroomHeadBackup_retrun:
pop edi
pop ebp
pop ebx
add esp,08
ret
mov edi,edi
ret
mov [edx+00],edx
fisttp word ptr [ecx-760CFFAE]
push edx
add [edx],al
mov dl,[edx+00]
mov ecx,[edi+04]
push ebx
push ebp
push esi
xor esi,esi
lea ebx,[esi+05]
lea ebp,[esi+02]
mov edi,edi
SummonShroomHeadBackup_Re1:
mov edx,[edi+esi*4+000000F4]
test edx,edx
je SummonShroomHeadBackup_1
movzx eax,dx
cmp eax,[ecx+00000098]
jae SummonShroomHeadBackup_1
imul eax,eax,15C
add eax,[ecx+00000090]
cmp [eax+00000158],edx
je SummonShroomHeadBackup_2
SummonShroomHeadBackup_1:
test esi,esi
jne SummonShroomHeadBackup_3
mov eax,[edi+1C]
sub eax,01
jmp SummonShroomHeadBackup_4
SummonShroomHeadBackup_3:
cmp esi,01
jne SummonShroomHeadBackup_retrun_al_1
mov eax,[edi+1C]
add eax,esi
cmp eax,ebx
SummonShroomHeadBackup_4:
ja SummonShroomHeadBackup_2
mov edx,[ecx+0000008C]
mov edx,[edx+000007F8]
cmp edx,26
jne SummonShroomHeadBackup_5
cmp eax,04
jle SummonShroomHeadBackup_6
SummonShroomHeadBackup_5:
cmp dword ptr [ecx+eax*4+000005D8],00
je SummonShroomHeadBackup_2
SummonShroomHeadBackup_6:
cmp edx,26
jne SummonShroomHeadBackup_7
cmp dword ptr [ecx+eax*4+000005D8],00
jne SummonShroomHeadBackup_7
cmp [ecx+0000557C],ebx
jl SummonShroomHeadBackup_2
SummonShroomHeadBackup_7:
cmp [ecx+eax*4+000005D8],ebp
jne SummonShroomHeadBackup_retrun_al_1
SummonShroomHeadBackup_2:
add esi,01
cmp esi,04
jl SummonShroomHeadBackup_Re1
SummonShroomHeadBackup_retrun_al_0:
pop esi
pop ebp
xor al,al
pop ebx
ret
SummonShroomHeadBackup_retrun_al_1:
pop esi
pop ebp
mov al,01
pop ebx
ret
int 3
int 3
int 3
int 3
SummonShroomHeadBackupDancer:
push ebp
mov ebp,esp
and esp,-08
sub esp,0C
push ebx
mov ebx,eax
mov eax,[ebp+08]
cmp eax,05
push esi
mov esi,[ebx+04]
push edi
ja SummonShroomHeadBackupDancer_retrun
mov ecx,[esi+0000008C]
mov ecx,[ecx+000007F8]
cmp ecx,26
jne SummonShroomHeadBackupDancer_1
cmp eax,04
jle SummonShroomHeadBackupDancer_2
SummonShroomHeadBackupDancer_1:
cmp dword ptr [esi+eax*4+000005D8],00
je SummonShroomHeadBackupDancer_retrun
SummonShroomHeadBackupDancer_2:
cmp ecx,26
jne SummonShroomHeadBackupDancer_3
cmp dword ptr [esi+eax*4+000005D8],00
jne SummonShroomHeadBackupDancer_3
cmp dword ptr [esi+0000557C],05
jl SummonShroomHeadBackupDancer_retrun
SummonShroomHeadBackupDancer_3:
cmp dword ptr [esi+eax*4+000005D8],02
jne SummonShroomHeadBackupDancer_4
SummonShroomHeadBackupDancer_retrun:
xor eax,eax
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 10
SummonShroomHeadBackupDancer_4:
mov edx,[ebx+6C]
cmp [ebp+10],0
push #8
mov eax,esi
mov [esp+14],edx
call 0040DC50
mov [esp+14],eax
mov eax,[esi+00000098]
sub eax,01
cmp [esi+000000A0],eax
jae SummonShroomHeadBackupDancer_retrun
mov eax,00000005
mov byte ptr [esp+0C],00
call 005AF400
test eax,eax
jne SummonShroomHeadBackupDancer_5
mov byte ptr [esp+0C],01
SummonShroomHeadBackupDancer_5:
add esi,00000090
call 0041DDA0
mov ecx,[esp+10]
mov edx,[esp+0C]
push ecx
push 00
push edx
mov edi,eax
mov eax,[esp+20]
cmp [ebp+10],0
jne SummonShroomHeadBackup_Randomize2
cmp [ebp+14],0
je SummonShroomHeadBackup_Randomize1_1
cmp [ebp+14],1
je SummonShroomHeadBackup_Randomize1_2
cmp [ebp+14],2
je SummonShroomHeadBackup_Randomize1_3
cmp [ebp+14],3
je SummonShroomHeadBackup_Randomize1_4
SummonShroomHeadBackup_Randomize1_1:
push #45
jmp SummonShroomHeadBackup_Randomize_end
SummonShroomHeadBackup_Randomize1_2:
push #45
jmp SummonShroomHeadBackup_Randomize_end
SummonShroomHeadBackup_Randomize1_3:
push #46
jmp SummonShroomHeadBackup_Randomize_end
SummonShroomHeadBackup_Randomize1_4:
push #46
jmp SummonShroomHeadBackup_Randomize_end
SummonShroomHeadBackup_Randomize2:
cmp [ebp+14],0
je SummonShroomHeadBackup_Randomize2_1
cmp [ebp+14],1
je SummonShroomHeadBackup_Randomize2_2
cmp [ebp+14],2
je SummonShroomHeadBackup_Randomize2_3
cmp [ebp+14],3
je SummonShroomHeadBackup_Randomize2_4
SummonShroomHeadBackup_Randomize2_1:
push #46
jmp SummonShroomHeadBackup_Randomize_end
SummonShroomHeadBackup_Randomize2_2:
push #46
jmp SummonShroomHeadBackup_Randomize_end
SummonShroomHeadBackup_Randomize2_3:
push #45
jmp SummonShroomHeadBackup_Randomize_end
SummonShroomHeadBackup_Randomize2_4:
push #45
jmp SummonShroomHeadBackup_Randomize_end
SummonShroomHeadBackup_Randomize_end:
SummonShroomHeadBackupDancer_4_end2:
push edi
call 00522580
test edi,edi
je SummonShroomHeadBackupDancer_retrun
fild dword ptr [ebp+0C]
mov esi,[ebp+08]
push esi
mov eax,ebx
fstp dword ptr [edi+2C]
call 00531880
mov [edi+1C],esi
imul esi,esi,00002710
fstp dword ptr [esp+14]
fld dword ptr [esp+14]
fst dword ptr [edi+30]
fld dword ptr [edi+2C]
lea eax,[esi+00049F9C]
mov [edi+20],eax
call 006397D0
mov [edi+08],eax
call 006397D0
fld dword ptr [00665410]
mov [edi+0C],eax
fstp dword ptr [edi+00000084]
mov [edi+28],00000032
fldz
mov [edi+68],00000096
mov ecx,[ebx+00000158]
fst dword ptr [edi+00000124]
push ecx
fstp dword ptr [esp]
mov eax,edi
mov [edi+000000F0],ecx
call 0052EFF0
fld dword ptr [edi+2C]
mov dl,[ebx+000000B8]
mov [edi+000000B8],dl
call 006397D0
fld dword ptr [edi+30]
add eax,3C
mov [esp+14],eax
call 006397D0
add eax,6E
push edi
mov [esp+10],eax
call 0052F9C0
test al,al
je SummonShroomHeadBackupDancer_6
sub dword ptr [esp+0C],1E
SummonShroomHeadBackupDancer_6:
fild dword ptr [esp+0C]
mov eax,[ebx]
mov ecx,[eax+00000820]
push 21
add esi,0004AF38
push esi
mov esi,[ecx]
sub esp,08
fstp dword ptr [esp+04]
fild dword ptr [esp+24]
fstp dword ptr [esp]
call 00518A70
mov ebx,[ebx]
cmp byte ptr [ebx+000008C5],00
jne SummonShroomHeadBackupDancer_return2
fldz
mov ecx,[006A9F00]
mov ebx,[ebx+00000784]
fst dword ptr [esp+0C]
fcomp dword ptr [ecx+00001010]
fnstsw ax
test ah,44
jnp SummonShroomHeadBackupDancer_return3
fld dword ptr [ecx+00001010]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+10]
add esp,04
SummonShroomHeadBackupDancer_return3:
fld dword ptr [esp+0C]
push ecx
mov eax,0000004F
fstp dword ptr [esp]
mov ecx,ebx
call 00515020
SummonShroomHeadBackupDancer_return2:
mov eax,[edi+00000158]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 10
int 3
int 3
int 3
int 3
UpdateShroomHeadBackupDancer:
sub esp,08
push ebx
push esi
push edi
mov edi,eax
cmp byte ptr [edi+51],00
jne UpdateShroomHeadBackupDancer_retrun
mov ebx,[edi+28]
cmp ebx,32
jne UpdateShroomHeadBackupDancer_1
mov esi,[edi+68]
push 01
push 00
push FFFFFF38
mov eax,esi
xor ecx,ecx
lea edx,[ebx+64]
call 00511C40
mov [esp+1C],eax
fild dword ptr [esp+1C]
add esp,0C
test esi,esi
fstp dword ptr [edi+00000084]
jne UpdateShroomHeadBackupDancer_retrun
push edi
call 0052F9C0
test al,al
je UpdateShroomHeadBackupDancer_1
fld dword ptr [0066541C]
fstp dword ptr [edi+00000084]
UpdateShroomHeadBackupDancer_1:
mov eax,edi
call 0052DFE0
cmp eax,ebx
je UpdateShroomHeadBackupDancer_retrun
cmp eax,2C
jne UpdateShroomHeadBackupDancer_2
fldz
push ecx
fstp dword ptr [esp]
mov [edi+28],eax
push 0A
push 00
push 0066918C
call 00528B00
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateShroomHeadBackupDancer_2:
cmp eax,2D
jne UpdateShroomHeadBackupDancer_3
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
push 0066EB78
mov [edi+28],eax
call 00528B00
fld dword ptr [00679610]
mov eax,[edi]
mov ecx,[eax+00000820]
mov edi,[edi+00000118]
mov edx,[ecx+08]
mov ecx,[edx]
and edi,0000FFFF
lea eax,[edi+edi*4]
shl eax,05
fstp dword ptr [ecx+eax+04]
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateShroomHeadBackupDancer_3:
cmp eax,2E
je UpdateShroomHeadBackupDancer_4
cmp eax,2F
je UpdateShroomHeadBackupDancer_4
cmp eax,30
je UpdateShroomHeadBackupDancer_4
cmp eax,31
jne UpdateShroomHeadBackupDancer_retrun
UpdateShroomHeadBackupDancer_4:
fld dword ptr [006795C4]
push ecx
fstp dword ptr [esp]
push 0A
push 00
push 0066EB78
mov [edi+28],eax
call 00528B00
UpdateShroomHeadBackupDancer_retrun:
pop edi
pop esi
pop ebx
add esp,08
ret
UpdateSnowPeaHead:
sub esp,38
push ebx
push esi
push edi
mov edi,eax
cmp byte ptr [edi+000000BA],00
je UpdateSnowPeaHead_retrun
mov eax,[edi+68]
cmp eax,23
jne UpdateSnowPeaHead_run_anim_head_idle
mov eax,[edi]
mov edi,[edi+00000144]
mov ecx,[eax+00000820]
mov edx,[ecx+08]
and edi,0000FFFF
lea esi,[edi+edi*4]
shl esi,05
add esi,[edx]
push 14
push esi
call 00473310
fld dword ptr [00679690]
fstp dword ptr [esi+08]
lea eax,[esi+1C]
fldz
push eax
fstp dword ptr [esi+04]
lea ecx,[esi+18]
fld dword ptr [00679378]
push ecx
mov edx,00668D10
fstp dword ptr [esi+00000094]
mov eax,esi
mov [esi+10],00000003
mov [esi+5C],00000000
call 004731D0
jmp UpdateSnowPeaHead_retrun
UpdateSnowPeaHead_run_anim_head_idle:
test eax,eax
jne UpdateSnowPeaHead_retrun
mov edx,[edi]
fld dword ptr [0067967C]
mov eax,[edx+00000820]
push ecx
mov ecx,[eax+08]
fstp dword ptr [esp]
mov eax,[edi+00000144]
and eax,0000FFFF
lea esi,[eax+eax*4]
push 03
shl esi,05
add esi,[ecx]
push 00668C34
mov eax,00000014
call 00473BF0
mov eax,[edi]
cmp byte ptr [eax+000008C5],00
jne UpdateSnowPeaHead_Flier
fldz
mov ecx,[006A9F00]
mov esi,[eax+00000784]
fst dword ptr [esp+10]
fcomp dword ptr [ecx+000000A0]
fnstsw ax
test ah,44
jnp UpdateSnowPeaHead_PlaySound
fld dword ptr [ecx+000000A0]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+14]
add esp,04
fld dword ptr [esp+10]
push ecx
UpdateSnowPeaHead_PlaySound:
mov eax,00000003
fstp dword ptr [esp]
mov ecx,esi
call 00515020
UpdateSnowPeaHead_Flier:
mov edx,[edi]
mov eax,[edx+00000820]
mov ecx,[eax+08]
mov eax,[edi+00000118]
and eax,0000FFFF
lea esi,[eax+eax*4]
shl esi,05
add esi,[ecx]
push 00658500
mov ebx,esi
call 00472F30
fld dword ptr [00665420]
fst dword ptr [esp+18]
mov ebx,eax
fst dword ptr [esp+1C]
xor eax,eax
fst dword ptr [esp+20]
mov [esp+3C],eax
fst dword ptr [esp+24]
mov [esp+38],eax
fst dword ptr [esp+28]
push esi
fst dword ptr [esp+30]
lea eax,[esp+1C]
fst dword ptr [esp+34]
mov [esp+44],0065540C
fstp dword ptr [esp+38]
call 00471F90
fld dword ptr [edi+2C]
mov edx,[edi+1C]
fadd dword ptr [esp+18]
mov eax,[edi+20]
push #18
push edx
fsub qword ptr [006792D0]
push eax
fstp dword ptr [esp+20]
fld dword ptr [edi+30]
fadd dword ptr [esp+28]
fadd qword ptr [006793B8]
fsub dword ptr [edi+00000084]
fstp dword ptr [esp+1C]
fld dword ptr [esp+1C]
call 006397D0
fld dword ptr [esp+20]
push eax
call 006397D0
push eax
mov eax,[edi+04]
call 0040D620
mov [eax+58],00000006
mov [edi+68],00000096
UpdateSnowPeaHead_retrun:
pop edi
pop esi
pop ebx
add esp,38
ret

ret
52B245:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52B245:
db 83 7E 24 1A 75 07
//cmp dword ptr [esi+24],1A
//jne 0052B252
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>367</ID>
                  <Description>"Zombie::ZombieInitialize 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>380</ID>
                      <Description>"新僵尸数据初始化 D00000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
D00000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[ebp+0C]
Imp:
cmp ecx,#24
jne Cabbagepult
mov eax,edi
call 0052AE40
test al,al
jne Imp_IsNotOnBoard
fld dword ptr [00679388]
push ecx
fstp dword ptr [esp]
push ebx
push ebx
push 797600
call 00528B00
Imp_IsNotOnBoard:
mov eax,[edi]
call 004537D0
mov [edi+000000C8],#80
test al,al
je 00523E4E
mov [edi+000000C8],#160
jmp 00523E4E
Cabbagepult:
cmp ecx,#33
jne Cornpult
call 00524370
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 796500
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
call 0052AE40
test al,al
je Cabbagepult_IsNotOnBoard
push 66EB88
mov ecx,ebx
call 00473280
Cabbagepult_IsNotOnBoard:
push 796600
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#75 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)14
xor ebx,ebx
push ebx
mov esi,eax
push 796300
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+04],(float)-15.5
mov [esp],(float)55
call 005125D0
mov eax,[ebp+08]
add esp,14
mov [eax+C8],#270
mov [eax+68],#300
mov [eax+50],bl
mov edi,eax
jmp 523E4E
Cornpult:
cmp ecx,#34
jne Melonpult
call 00524370
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
push esi
push 796500
mov eax,edi
call 005331C0
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
call 0052AE40
test al,al
je Cornpult_IsNotOnBoard
push 66EB88
mov ecx,ebx
call 00473280
Cornpult_IsNotOnBoard:
push 796600
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#76 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
mov ebx,796900
push ecx
mov [esp],(float)14
push 0
push ebx
xor ebx,ebx
mov esi,eax
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+04],(float)-24.5
mov [esp],(float)62.5
call 005125D0
mov eax,[ebp+08]
add esp,14
mov [eax+C8],#270
mov [eax+68],#300
mov [eax+50],bl
mov edi,eax
jmp 523E4E
Melonpult:
cmp ecx,#35
jne WinterMelon
call 00524370
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
push esi
push 796500
mov eax,edi
call 005331C0
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
call 0052AE40
test al,al
je Melonpult_IsNotOnBoard
push 66EB88
mov ecx,ebx
call 00473280
Melonpult_IsNotOnBoard:
push 796600
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#77 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)14
xor ebx,ebx
push ebx
mov esi,eax
push 796300
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+04],(float)-20.5
mov [esp],(float)58.5
call 005125D0
mov eax,[ebp+08]
add esp,14
mov [eax+C8],#270
mov [eax+68],#300
mov [eax+50],bl
mov edi,eax
jmp 523E4E
WinterMelon:
cmp ecx,#36
jne Chomper
call 00524370
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
push esi
push 796500
mov eax,edi
call 005331C0
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
call 0052AE40
test al,al
je WinterMelon_IsNotOnBoard
push 66EB88
mov ecx,ebx
call 00473280
WinterMelon_IsNotOnBoard:
push 796600
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#88 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)14
xor ebx,ebx
push ebx
mov esi,eax
push 796300
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+04],(float)-20.5
mov [esp],(float)58.5
call 005125D0
mov eax,[ebp+08]
add esp,14
mov [eax+C8],#270
mov [eax+68],#300
mov [eax+50],bl
mov edi,eax
jmp 523E4E
Chomper:
cmp ecx,#37
jne SnowPea
call 00524370
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
push esi
push 796500
mov eax,edi
call 005331C0
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
call 0052AE40
test al,al
je Chomper_IsNotOnBoard
push 66EB88
mov ecx,ebx
call 00473280
Chomper_IsNotOnBoard:
push 796600
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#20 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)10.5
xor ebx,ebx
push ebx
mov esi,eax
push 796300
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+04],(float)-5.5
mov [esp],(float)62.5
call 005125D0
mov eax,[ebp+08]
add esp,14
mov [eax+C8],#270
mov [eax+68],#300
mov [eax+50],bl
mov edi,eax
jmp 523E4E
SnowPea:
cmp ecx,#38
jne PeaShooter
call 00524370
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
call 0052AE40
test al,al
je SnowPea_IsNotOnBoard
push 66EB88
mov ecx,ebx
call 00473280
SnowPea_IsNotOnBoard:
push 00658500
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#13 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)15
xor ebx,ebx
push ebx
mov esi,eax
push 668C34
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+04],(float)-5
mov [esp],(float)65
call 005125D0
mov eax,[ebp+08]
add esp,14
mov [eax+C8],#270
mov [eax+68],#150
mov [eax+50],bl
mov edi,eax
jmp 523E4E
PeaShooter:
cmp ecx,#39
jne Imp_FumeShroom
call 00524370
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
call 0052AE40
test al,al
je PeaShooter_IsNotOnBoard
push 66EB88
mov ecx,ebx
call 00473280
PeaShooter_IsNotOnBoard:
push 00658500
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#14 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)15
xor ebx,ebx
push ebx
mov esi,eax
push 668C34
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+04],(float)-5
mov [esp],(float)65
call 005125D0
mov eax,[ebp+08]
add esp,14
mov [eax+C8],#270
mov [eax+68],#150
mov [eax+50],bl
mov edi,eax
jmp 523E4E
Imp_FumeShroom:
cmp ecx,#41
jne Gargantuar_PuffShroom
push esi
push 0065851C
mov eax,edi
call 005331C0
mov eax,edi
call 0052AE40
test al,al
jne Imp_FumeShroom_IsNotOnBoard
fld dword ptr [00679388]
push ecx
fstp dword ptr [esp]
push ebx
push ebx
push 797600
call 00528B00
Imp_FumeShroom_IsNotOnBoard:
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
push 00658500
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#18 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)15
xor ebx,ebx
push ebx
mov esi,eax
push 797600
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+10],(float)1.25
fld [esp+10]
fchs
fstp [esp+C]
mov [esp+04],(float)-8//(float)10
mov [esp],(float)86//(float)80
call 005125D0
mov eax,[ebp+08]
add esp,14
mov [eax+C8],#120
mov [eax+68],#150
mov [eax+50],bl
mov edi,eax
mov eax,[edi]
call 004537D0
test al,al
je 00523E4E
mov [edi+000000C8],#180
jmp 00523E4E
Gargantuar_PuffShroom:
cmp ecx,#42
jne Screendoor_ScaredyShroom
push esi
push 794600
mov eax,edi
call 005331C0
push esi
push 797700
mov eax,edi
call 005331C0
mov eax,000000B4
mov [edi+10],eax
mov [edi+14],eax
mov eax,0000000A
mov [edi+000000C8],#3000
mov [edi+44],00000018
mov [edi+40],00000008
call 005AF400
add eax,0000034D
mov [esp+1C],eax
fild dword ptr [esp+1C]
mov eax,FFFFFFEF
mov [edi+0000008C],eax
mov ecx,FFFFFFDA
mov edx,0000007D
fstp dword ptr [edi+2C]
mov [edi+00000090],ecx
mov [edi+00000094],edx
mov eax,FFFFFFE2
mov [edi+0000009C],eax
mov esi,0000009A
mov edx,00000059
mov [edi+000000A0],ecx
mov [edi+000000A4],edx
lea eax,[esi-36]
mov [edi+00000098],esi
mov [edi+000000A8],esi
mov [edi+50],bl
mov [esp+10],00000008
mov byte ptr [edi+000000BC],01
call 005AF400
mov ecx,eax
mov eax,edi
call 0052AE40
test al,al
je Gargantuar_PuffShroom_IsNotOnBoard
mov edx,[edi+04]
cmp dword ptr [edx+00005550],30
je Gargantuar_PuffShroom_IsNotOnBoard
cmp ecx,0A
jnl Gargantuar_PuffShroom_IsNotOnBoard2
mov ecx,00000002
jmp Gargantuar_PuffShroom_IsNotOnBoard3
Gargantuar_PuffShroom_IsNotOnBoard2:
xor eax,eax
cmp ecx,23
setl al
mov ecx,eax
jmp Gargantuar_PuffShroom_IsNotOnBoard3
Gargantuar_PuffShroom_IsNotOnBoard:
xor ecx,ecx
Gargantuar_PuffShroom_IsNotOnBoard3:
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
push 00658500
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#17 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)15
xor ebx,ebx
push ebx
mov esi,eax
push 797600
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+04],(float)-40
mov [esp],(float)30
call 005125D0
mov eax,[ebp+08]
add esp,14
mov edi,eax
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
push 797800
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#18 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)15
xor ebx,ebx
push ebx
mov esi,eax
push 797600
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+138],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+10],(float)1.25
fld [esp+10]
fchs
fstp [esp+C]
mov [esp+04],(float)-114//(float)-96
mov [esp],(float)126//(float)120
call 005125D0
mov eax,[ebp+08]
add esp,14
mov edi,eax
mov edx,[edi]
mov eax,[edx+00000820]
mov edx,[eax+08]
mov eax,[edi+00000118]
and eax,0000FFFF
lea esi,[eax+eax*4]
shl esi,05
add esi,[edx]
mov eax,#10
push edx
call 5AF400
pop edx
mov ecx,eax
cmp ecx,02
jne Gargantuar_PuffShroom_2
mov eax,[006A7520]
push eax
jmp Gargantuar_PuffShroom_3
Gargantuar_PuffShroom_2:
cmp ecx,01
jne Gargantuar_PuffShroom_end
mov ecx,[006A74DC]
push ecx
Gargantuar_PuffShroom_3:
mov eax,0066EACC
mov ecx,esi
call 00473490
Gargantuar_PuffShroom_end:
push esi
push 00794500
mov eax,edi
call 005331C0
mov [edi+134],#150
mov [edi+68],#150
mov [edi+50],bl
jmp 523E4E
Screendoor_ScaredyShroom:
cmp ecx,#43
jne Jackson_HypnoSroom
mov [edi+D8],#1
mov [edi+DC],#1100
call 524370
mov eax,edi
call 533000
mov [edi+C8],#270
mov [edi+68],#150
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov eax,edi
mov [esp+1C],ebx
call 0052AE40
test al,al
je Screendoor_ScaredyShroom_IsNotOnBoard
push 66EB88
mov ecx,ebx
call 00473280
Screendoor_ScaredyShroom_IsNotOnBoard:
push 00658500
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#42 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)15
xor ebx,ebx
push ebx
mov esi,eax
push 797600
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+04],(float)-21.25
mov [esp],(float)62
call 005125D0
mov eax,[ebp+08]
add esp,14
mov edi,eax
jmp 523E4E
Jackson_HypnoSroom:
cmp ecx,#44
jne Dancer_IceShroom
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
mov eax,edi
call 0052AE40
test al,al
jne Jackson_HypnoSroom_IsNotOnBoard
fld dword ptr [00679388]
jmp Jackson_HypnoSroom_IsOnBoard
Jackson_HypnoSroom_IsNotOnBoard:
mov eax,0000000C
mov [edi+28],00000028
call 005AF400
fld dword ptr [006793C0]
add eax,0000012C
fstp dword ptr [edi+34]
fld dword ptr [00679638]
mov [edi+68],eax
Jackson_HypnoSroom_IsOnBoard:
push ecx
fstp dword ptr [esp]
push ebx
push ebx
push 0066EB68
call 00528B00
mov [edi+C8],#710
mov [edi+50],bl
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov [esp+1C],ebx
push 00658500
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#19 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)15
xor ebx,ebx
push ebx
mov esi,eax
push 797600
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
mov [esp+04],(float)-34
mov [esp],(float)50
call 005125D0
mov eax,[ebp+08]
add esp,14
mov edi,eax
jmp 00523E4E
Dancer_IceShroom:
cmp ecx,#45
jne Dancer_DoomShroom
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
push esi
push 797A00
mov eax,edi
call 005331C0
mov eax,edi
call 0052AE40
test al,al
jne Dancer_IceShroom_IsOnBorad
fld dword ptr [00679388]
push ecx
fstp dword ptr [esp]
push ebx
push ebx
push 0066EB78
call 00528B00
Dancer_IceShroom_IsOnBorad:
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov [esp+1C],ebx
push 00658500
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#28 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)15
xor ebx,ebx
push ebx
mov esi,eax
push 797600
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
push eax
mov [esp],(float)-24
fld [esp]
mov [esp],(float)180
fld [esp]
fdivp st(1),st(0)
fldpi
fmulp st(1),st(0)
fadd [esp+C]
fstp [esp+C]
pop eax
mov [esp+04],(float)-18
mov [esp],(float)116
call 005125D0
add esp,14
mov eax,[ebp+08]
mov edi,eax
mov [edi+c8],#540
mov [edi+28],0000002C
mov [edi+50],bl
pushad
mov eax,#200
call 005AF400
add eax,#500
add eax,eax
mov [edi+13C],eax
popad
jmp 00523E4E
Dancer_DoomShroom:
cmp ecx,#46
jne disco
push esi
push 00668EC8
mov eax,edi
call 005331C0
push esi
push 0065851C
mov eax,edi
call 005331C0
push esi
push 797A00
mov eax,edi
call 005331C0
mov eax,edi
call 0052AE40
test al,al
jne Dancer_DoomShroom_IsOnBorad
fld dword ptr [00679388]
push ecx
fstp dword ptr [esp]
push ebx
push ebx
push 0066EB78
call 00528B00
Dancer_DoomShroom_IsOnBorad:
mov eax,[edi]
mov ecx,[eax+00000820]
mov eax,[edi+00000118]
mov edx,[ecx+08]
and eax,0000FFFF
lea ebx,[eax+eax*4]
shl ebx,05
add ebx,[edx]
mov [esp+1C],ebx
push 00658500
call 00472F30
lea edi,[eax+eax*2]
shl edi,05
add edi,[ebx+58]
mov ebx,#12 //动画ID
mov eax,[006A77BC]
mov ecx,[ebp+08]
push 00
sub esp,08
mov [edi+44],eax
fldz
fst [esp+4]
fstp [esp]
mov eax,[ecx]
call 00453C30
push ecx
mov [esp],(float)15
xor ebx,ebx
push ebx
mov esi,eax
push 797600
xor eax,eax
call 00473BF0
mov edx,[esi+0000009C]
mov eax,[ebp+08]
sub esp,8
fldz
fst [esp+4]
fstp [esp]
add edi,40
mov [eax+00000144],edx
call 004055D0
fld1
mov ecx,[esp+24]
fstp dword ptr [esp+04]
sub esp,0C
fld dword ptr [00679378]
fstp dword ptr [esp+0C]
lea esi,[eax+08]
fld dword ptr [0067953C]
mov [ecx+20],ebx
fstp dword ptr [esp+08]
push eax
mov [esp],(float)-24
fld [esp]
mov [esp],(float)180
fld [esp]
fdivp st(1),st(0)
fldpi
fmulp st(1),st(0)
fadd [esp+C]
fstp [esp+C]
pop eax
mov [esp+04],(float)-18
mov [esp],(float)116
call 005125D0
add esp,14
mov eax,[ebp+08]
mov edi,eax
mov [edi+c8],#540
mov [edi+28],0000002C
mov [edi+50],bl
pushad
mov eax,#250
call 005AF400
add eax,#500
add eax,eax
mov [edi+13C],eax
popad
jmp 00523E4E
disco:
cmp ecx,#47
jne backup
mov eax,edi
call 0052AE40
test al,al
jne disco_IsNotOnBoard
fld dword ptr [00679388]
jmp disco_IsOnBoard
disco_IsNotOnBoard:
mov eax,0000000C
mov [edi+28],00000028
call 005AF400
fld dword ptr [006793C0]
add eax,0000012C
fstp dword ptr [edi+34]
fld dword ptr [00679638]
mov [edi+68],eax
disco_IsOnBoard:
push ecx
fstp dword ptr [esp]
push ebx
push ebx
push 0066EB68
call 00528B00
mov [edi+C8],#570
mov [edi+50],bl
jmp 523E4E
backup:
cmp ecx,#48
jne Zombiedog
mov eax,edi
call 0052AE40
test al,al
jne backup_IsOnBorad
fld dword ptr [00679388]
push ecx
fstp dword ptr [esp]
push ebx
push ebx
push 0066EB78
call 00528B00
backup_IsOnBorad:
mov [edi+C8],#340
jmp 523E4E
Zombiedog:
cmp ecx,#49
jne DarkFootballZombie
mov eax,edi
call 0052AE40
test al,al
jne Zombiedog_IsOnBorad
fld dword ptr [679388]
push ecx
fstp dword ptr [esp]
push ebx
push ebx
push 797600
call 00528B00
Zombiedog_IsOnBorad:
mov [edi+C8],#180
jmp 523E4E
DarkFootballZombie:
cmp ecx,#51
jne original
mov eax,#50
mov [edi+8C],eax
lea ecx,[eax+41]
mov [edi+90],ebx
mov eax,#57
mov [edi+94],eax
push esi
push 668EC8
mov eax,edi
mov [edi+98],ecx
call 5331C0
mov [edi+C4],3
mov [edi+D0],#2800
mov [edi+40],6
mov [edi+50],bl
jmp 00523E4E

original:
cmp ecx,[D7C000]
jge originalcode
cmp ecx,#32
jle originalcode
call 00524370
mov [edi+c8],#270
jmp 523E4E
originalcode:

cmp ecx,ebx

exit:
jmp returnhere

5227E2:
jmp newmem
returnhere:
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5227E2:
db 8B 4D 0C 3B CB
//mov ecx,[ebp+0C]
//cmp ecx,ebx
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>365</ID>
                      <Description>"新僵尸动画读取 943000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
943000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
imul eax,1C
lea eax,[163B000+eax]
jmp 5227B5
originalcode:
lea ecx,[eax*8+00000000]

exit:
jmp returnhere

5227A5:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5227A5:
db 8D 0C C5 00 00 00 00
//lea ecx,[eax*8+00000000]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>385</ID>
                  <Description>"Zombie::PreloadZombieResources 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>384</ID>
                      <Description>"预加载新僵尸动画 944800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
944480:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,esi
imul eax,1C
lea eax,[eax+163B000]
jmp 5369F3
originalcode:
lea eax,[esi*8+00000000]

exit:
jmp returnhere

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,eax
imul ecx,1C
mov edx,[ecx+163B000+4]
jmp 536A66
originalcode_2:
lea ecx,[eax*8+00000000]

exit_2:
jmp returnhere_2

536A56:
jmp newmem_2
nop 2
returnhere_2:

5369E3:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5369E3:
db 8D 04 F5 00 00 00 00
//lea eax,[esi*8+00000000]
536A56:
db 8D 0C C5 00 00 00 00
//lea ecx,[eax*8+00000000]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>396</ID>
                  <Description>"Zombie::SetupReanimLayers 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>395</ID>
                      <Description>"普通僵尸模型图层修复 945800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
945800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push -01
push 796200
push ebx
call 00473A40

originalcode:
push -01
push 00668EBC

exit:
jmp returnhere

5240C0:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5240C0:
db 6A FF 68 BC 8E 66 00
//push -01
//push 00668EBC
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>491</ID>
                  <Description>"Zombie::DrawShadow 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>490</ID>
                      <Description>"新僵尸影子绘制 94C800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94C800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov esi,[edi+24]
cmp esi,#41
je 534285
cmp esi,#42
je Gargantuar
originalcode:

cmp esi,07

exit:
jmp returnhere
Gargantuar:
fstp st(0)
jmp 534412

534159:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
534159:
db 8B 77 24 83 FE 07
//mov esi,[edi+24]
//cmp esi,07
534101:
db D9 5C 24 0C D9 87 1C 01 00 00
//fstp dword ptr [esp+0C]
//fld dword ptr [edi+0000011C]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>493</ID>
                  <Description>"Zombie::DropArm 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>492</ID>
                      <Description>"新僵尸断手贴图修复 94CC00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94CC00:
//僵尸断手贴图替换
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push edi
mov esi,[ebx+24]
cmp esi,#42
je 0052A45E
originalcode:
cmp esi,0C
je 0052A45E
jmp 529F02
exit:
jmp returnhere
//僵尸断手贴图位置
newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebx+24]
lea edi,[esp+10]
mov esi,ebx
cmp eax,#41
je 52A130
cmp eax,#44
je 52A2B6
cmp eax,#45
je 52A2D8
cmp eax,#46
je 52A2D8
cmp eax,#47
je Disco_2
cmp eax,#48
je DiscoBackup_2
cmp eax,#51
je DarkFootBall_2
originalcode_2:
cmp eax,07
jne 0052A0C2
jmp 52A0A2

exit_2:
jmp returnhere_2
Disco_2:
lea ecx,[esp+0C]
push ecx
push 799600
call 005345F0
mov edx,[8CC048]
push edx
mov eax,799800
jmp 0052A347
DiscoBackup_2:
lea ecx,[esp+0C]
push ecx
push 799600
call 005345F0
mov edx,[8CC04C]
push edx
mov eax,799800
jmp 0052A347
DarkFootBall_2:
lea eax,[esp+0C]
push eax
push 0066EF84
call 005345F0
mov ecx,[006A78D0]
push ecx
mov eax,0066EFA4
jmp 0052A347
//断手贴图覆写
newmem_3: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_3:
mov eax,[ebx+24]
cmp eax,#41
je 52A3FD
cmp eax,#43
je 52A3D6
cmp eax,#44
je 52A3E3
cmp eax,#45
je 52A3E3
cmp eax,#47
je Disco_3
cmp eax,#48
je DiscoBackup_3
cmp eax,#51
je DarkFootBall_3
cmp eax,07

exit_3:
jmp returnhere_3
Disco_3:
mov esi,[8CC048]
jmp 0052A44B
DiscoBackup_3:
mov esi,[8CC04C]
jmp 0052A44B
DarkFootBall_3:
mov esi,[8CC038]
jmp 0052A44B
//隐藏图层
newmem_4: //this is allocated memory, you have read,write,execute access
//place your code here
mov byte ptr [ebx+000000BB],00
cmp esi,#47
je Disco_4
cmp esi,#48
je DiscoBackup_4
cmp esi,#51
je DarkFootZombie_4
originalcode_4:
cmp esi,07


exit_4:
jmp returnhere_4
DarkFootZombie_4:
push -01
push 0066EEF0
mov eax,ebx
call 005331C0
push -01
push 0066EF10
jmp 0052A02C
Disco_4:
push -01
push 799600
mov eax,ebx
call 005331C0
push -01
push 799800
jmp 0052A02C
DiscoBackup_4:
push -01
push 799600
mov eax,ebx
call 005331C0
push -01
push 799800
jmp 0052A02C
529FB6:
jmp newmem_4
nop 5
returnhere_4:


52A3B1:
jmp newmem_3
nop
returnhere_3:

52A094:
jmp newmem_2
nop
returnhere_2:

529EF5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
529EF5:
db 8B 73 24 83 FE 0C
//mov esi,[ebx+24]
//cmp esi,0C
52A094:
db 8B 43 24 83 F8 07
//mov eax,[ebx+24]
//cmp eax,07
52A3B1:
db 8B 43 24 83 F8 07
//mov eax,[ebx+24]
//cmp eax,07
529FB6:
db 83 FE 07 C6 83 BB 00 00 00 00
//cmp esi,07
//mov byte ptr [ebx+000000BB],00
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>495</ID>
                  <Description>"Zombie::DropHead 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>494</ID>
                      <Description>"新僵尸断头修复 94D000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94D000:
//不断头
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push esi
push edi
mov eax,[ebx+24]
/*
cmp eax,#42
je 00529EDC
*/
originalcode:
cmp eax,0C
je 00529EDC
jmp 529A4B
exit:
jmp returnhere
//植物僵尸断头删除动画
newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebx+24]
cmp eax,#33
je 00529EB3
cmp eax,#34
je 00529EB3
cmp eax,#35
je 00529EB3
cmp eax,#36
je 00529EB3
cmp eax,#37
je 00529EB3
cmp eax,#38
je 00529EB3
cmp eax,#39
je 00529EB3
cmp eax,#40
je 00529EB3
cmp eax,#41
je 00529EB3
cmp eax,#42
je Gargantuar_2
cmp eax,#43
je 00529EB3
cmp eax,#44
je 00529EB3
cmp eax,#45
je 00529EB3
cmp eax,#46
je 00529EB3
originalcode_2:
cmp eax,1A

exit_2:
jmp returnhere_2
Gargantuar_2:
mov ecx,[ebx]
mov edx,[ecx+00000820]
mov eax,[ebx+138]
mov edx,[edx+08]
and eax,0000FFFF
lea ecx,[eax+eax*4]
shl ecx,05
add ecx,[edx]
call 004733F0
mov [ebx+138],edi
jmp 00529EB3
//断头贴图覆写
newmem_3: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebx+24]
cmp eax,#47
je Disco_3
cmp eax,#48
je DiscoBackup_3
cmp eax,#51
je DarkFootBall_3
originalcode_3:
cmp eax,08

exit_3:
jmp returnhere_3
Disco_3:
mov esi,[8CC03C]
jmp 00529D07
DiscoBackup_3:
mov esi,[8CC040]
jmp 00529D07
DarkFootBall_3:
mov esi,[8CC044]
jmp 00529D07

529C66:
jmp newmem_3
nop
returnhere_3:

529B00:
jmp newmem_2
nop
returnhere_2:

529A3D:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
529A3D:
db 8B 43 24 83 F8 0C
//mov eax,[ebx+24]
//cmp eax,0C
529B00:
db 8B 43 24 83 F8 1A
//mov eax,[ebx+24]
//cmp eax,1A
529C66:
db 8B 43 24 83 F8 08
//mov eax,[ebx+24]
//cmp eax,08
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>497</ID>
                  <Description>"Zombie::ApplyBurn 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>496</ID>
                      <Description>"新僵尸灰修复 94D400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94D400:
//直接从当前帧绘制僵尸灰
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,[esi+24]
cmp edi,#33
je 00532F34
cmp edi,#34
je 00532F34
cmp edi,#35
je 00532F34
cmp edi,#36
je 00532F34
cmp edi,#37
je 00532F34
cmp edi,#38
je 00532F34
cmp edi,#39
je 00532F34
cmp edi,#40
je 00532F34
cmp edi,#41
je 00532F34
cmp edi,#42
je 00532F34
cmp edi,#43
je 00532F34
cmp edi,#44
je 00532F34
cmp edi,#45
je 00532F34
cmp edi,#32
jg 00532F34
originalcode:
cmp edi,14

exit:
jmp returnhere

532C91:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
532C91:
db 8B 7E 24 83 FF 14
//mov edi,[esi+24]
//cmp edi,14
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>499</ID>
                  <Description>"Zombie::PlayZombieReanimation 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>498</ID>
                      <Description>"新僵尸默认走路动画修复 94D800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94D800:
//僵尸默认走路动画
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[edi+24]
cmp ecx,#33
je 52F3E1
cmp ecx,#34
je 52F3E1
cmp ecx,#38
je 52F3E1
cmp ecx,#39
je 52F3E1
originalcode:
cmp ecx,1A

exit:
jmp returnhere

52F3D9:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52F3D9:
db 8B 4F 24 83 F9 1A
//mov ecx,[edi+24]
//cmp ecx,1A
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>501</ID>
                  <Description>"Zombie::UpdateAnimSpeed 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>500</ID>
                      <Description>"新僵尸啃食速度修复 94DC00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94DC00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+24]
cmp eax,#41
je 0052F142
cmp eax,#49
je Zombiedog
originalcode:
cmp eax,03

exit:
jmp returnhere
Zombiedog:
push ecx
mov eax,esi
mov [esp],(float)12
call 0052EFF0
pop edi
pop ebx
add esp,08
ret
52F105:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52F105:
db 8B 46 24 83 F8 03
//mov eax,[esi+24]
//cmp eax,03
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>503</ID>
                  <Description>"Zombie::UpdateDeath 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>502</ID>
                      <Description>"新僵尸死亡动画速度修复 94E000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94E000:
//巨人死亡判断
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,0000000C
cmp eax,#42
je 0053371C
originalcode:
cmp eax,17


exit:
jmp returnhere
//僵尸死亡
newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[edi+24]
cmp eax,#33
je 5338E5
cmp eax,#34
je 5338E5
cmp eax,#35
je 5338E5
cmp eax,#36
je 5338E5
cmp eax,#37
je 5338E5
cmp eax,#38
je 5338E5
cmp eax,#39
je 5338E5
cmp eax,#40
je 5338E5
cmp eax,#41
je 5339FC
cmp eax,#42
je 5338D5
cmp eax,#44
je 5338DD
cmp eax,#45
je 5338DD
cmp eax,#46
je 5338DD
cmp eax,#32
jg 5338E5
originalcode_2:

cmp eax,0B

exit_2:
jmp returnhere_2
//巨人特殊死亡
newmem_3: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[edi+24]
cmp eax,#42
je 00533995
originalcode_3:
cmp eax,17

exit_3:
jmp returnhere_3

533988:
jmp newmem_3
nop
returnhere_3:

53377D:
jmp newmem_2
nop
returnhere_2:

53370D:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
53370D:
db 83 F8 17 BA 0C 00 00 00
//cmp eax,17
//mov edx,0000000C
53377D:
db 8B 47 24 83 F8 0B
//mov eax,[edi+24]
//cmp eax,0B
533988:
db 8B 47 24 83 F8 17
//mov eax,[edi+24]
//cmp eax,17
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>505</ID>
                  <Description>"Zombie::DropLoot 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>504</ID>
                      <Description>"新僵尸掉落战利品判断 94E400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94E400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov esi,[edx*4+163B000+8]

exit:
jmp returnhere

530206:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
530206:
db 8B 34 95 88 DA 69 00
//mov esi,[edx*4+0069DA88]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>507</ID>
                  <Description>"Zombie::PlayDeathAnim 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>506</ID>
                      <Description>"新僵尸死亡动画细节修复 94E800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94E800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#42
je Gargantuar_2
originalcode:
cmp eax,17
je 00533488

exit:
jmp returnhere
Gargantuar_2:
fstp dword ptr [esp+10]
jmp 533498
5333CD:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5333CD:
db 83 F8 17 0F 84 B2 00 00 00
//cmp eax,17
//je 00533488
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>523</ID>
                  <Description>"Zombie::UpdateReanim 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>535</ID>
                      <Description>"新增僵尸绘制变化修复 950C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
950C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp esi,#44
je 0052C551
cmp esi,#45
je 0052C551
cmp esi,#46
je 0052C551
cmp esi,#47
je 0052C551
cmp esi,#48
je 0052C551
originalcode:
cmp esi,08
je 0052C551

exit:
jmp returnhere

52C547:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52C547:
db 83 FE 08 74 05
//cmp esi,08
//je 0052C551
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>522</ID>
                      <Description>"缩放指定僵尸 94F400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94F400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fld dword ptr [edi+0000011C]
cmp [edi+24],#47
je disco
cmp [edi+24],#48
je disco
exit:
jmp returnhere
disco:
fsub [D7C01C]
jmp exit

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_2:
fld dword ptr [edi+0000011C]
cmp [edi+24],#47
je disco_2
cmp [edi+24],#48
je disco_2
exit_2:
jmp returnhere_2
disco_2:
fsub [D7C01C]
jmp exit_2

newmem_3: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_3:
cmp [edi+24],#47
je disco_3
cmp [edi+24],#48
je disco_3
fmul dword ptr [edi+0000011C]

exit_3:
jmp returnhere_3
disco_3:
fld [edi+0000011C]
fsub [D7C01C]
fmulp st(1),st(0)
jmp 52C5CA

newmem_4: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_4:
cmp [edi+24],#47
je disco_4
cmp [edi+24],#48
je disco_4
fmul dword ptr [edi+0000011C]

exit_4:
test dl,dl
jmp returnhere_4
disco_4:
fld [edi+0000011C]
fsub [D7C01C]
fmulp st(1),st(0)
jmp exit_4

newmem_5: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_5:
fld dword ptr [edi+0000011C]
cmp [edi+24],#47
je disco_5
cmp [edi+24],#48
je disco_5
exit_5:
jmp returnhere_5
disco_5:
fsub [D7C01C]
jmp exit_5

52C5ED:
jmp newmem_5
nop
returnhere_5:

52C5DB:
jmp newmem_4
nop
returnhere_4:

52C5C4:
jmp newmem_3
nop
returnhere_3:

52C5AC:
jmp newmem_2
nop
returnhere_2:

52C595:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52C595:
db D9 87 1C 01 00 00
//fld dword ptr [edi+0000011C]
52C5AC:
db D9 87 1C 01 00 00
//fld dword ptr [edi+0000011C]
52C5C4:
db D8 8F 1C 01 00 00
//fmul dword ptr [edi+0000011C]
52C5DB:
db D8 8F 1C 01 00 00
//fmul dword ptr [edi+0000011C]
52C5ED:
db D9 87 1C 01 00 00
//fld dword ptr [edi+0000011C]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>526</ID>
                  <Description>"Zombie::IsMovingAtChilledSpeed 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>525</ID>
                      <Description>"新增僵尸减速 94F800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94F800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push edi
originalcode:
mov eax,[esi+24]
cmp eax,08
je 0052EF37
cmp eax,#9
je 52EF3B
cmp eax,#47
je 0052EF37
cmp eax,#48
je 52EF3B
jmp 52EFC6
exit:
jmp returnhere

52EF20:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52EF20:
db 8B 46 24 83 F8 08
//mov eax,[esi+24]
//cmp eax,08
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>529</ID>
                  <Description>"Zombie::IsMovingAtChilledSpeed 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>527</ID>
                      <Description>"新增舞王绘制灯光 94FC00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94FC00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#44
je exit
cmp eax,#47
je exit
originalcode:
cmp eax,08
jne 0052D48D

exit:
jmp returnhere

52D473:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52D473:
db 83 F8 08 75 15
//cmp eax,08
//jne 0052D48D
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>530</ID>
                  <Description>"Zombie::StopZombieSound 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>528</ID>
                      <Description>"停止新增僵尸的音乐 950000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
950000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[ecx+24]
cmp ecx,#44
je 005308FB
cmp ecx,#45
je 005308FB
cmp ecx,#46
je 005308FB
cmp ecx,#47
je 005308FB
cmp ecx,#48
je 005308FB
originalcode:

cmp ecx,08

exit:
jmp returnhere

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here
push esi
push edi
cmp eax,#44
je 530868
cmp eax,#45
je 530868
cmp eax,#46
je 530868
cmp eax,#47
je 530868
cmp eax,#48
je 530868
originalcode_2:
cmp eax,08
je 530868
jmp 53085F

exit_2:
jmp returnhere_2

530858:
jmp newmem_2
returnhere_2:

5308C5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5308C5:
db 8B 49 24 83 F9 08
//mov ecx,[ecx+24]
//cmp ecx,08
530858:
db 83 F8 08 56 57
//cmp eax,08
//push esi
//push edi
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>532</ID>
                  <Description>"Zombie::ZombieNotWalking 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>531</ID>
                      <Description>"新增舞王与舞伴啃食时的太空步修复 950400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
950400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
push edi
cmp ecx,#8
je 0052A73C
cmp ecx,#9
je 52A740
cmp ecx,#44
je 52A73C
cmp ecx,#45
je 52A740
cmp ecx,#46
je 52A740
cmp ecx,#47
je 52A73C
cmp ecx,#48
je 52A740
jmp 52A798
originalcode:
cmp ecx,08


exit:
jmp returnhere

52A72B:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52A72B:
db 83 F9 08 53 57
//cmp ecx,08
//push ebx
//push edi
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>534</ID>
                  <Description>"Zombie::CheckForBoardEdge 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>533</ID>
                      <Description>"新增僵尸是否反向修复-检测僵尸是否抵达场地边缘 950800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
950800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+24]
mov edi,FFFFFF9C
cmp eax,09
je 0052B2DE
cmp eax,08
je 0052B2DE
cmp eax,#44
je 0052B2DE
cmp eax,#45
je 0052B2DE
cmp eax,#46
je 0052B2DE
cmp eax,#48
je 0052B2DE
cmp eax,#47
je 0052B2DE

originalcode:
cmp eax,17

exit:
jmp returnhere

52B2A9:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52B2A9:
db 8B 46 24 83 F8 17
//mov eax,[esi+24]
//cmp eax,17
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>544</ID>
                  <Description>"Zombie::DrawButter 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>543</ID>
                      <Description>"新僵尸黄油绘制修复 951000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
951000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fadd qword ptr [00679578]
fsubp st(1),st(0)
fstp dword ptr [esp+0C]
originalcode:
mov esi,[esi+24]
cmp esi,#42
je Fumeshroom_Gargantuar
cmp esi,#41
je 52E1F3
cmp esi,#49
je Zombiedog
cmp esi,12
jne 0052E206
jmp 52E1F3
exit:
jmp returnhere
Fumeshroom_Gargantuar:
fld [esp+10]
mov [esp+10],(float)14
fsub [esp+10]
fstp [esp+10]
fld [esp+0C]
mov [esp+C],(float)20
fsub [esp+C]
fstp [esp+0C]
mov [esp+14],(float)1.4
fld [esp+14]
jmp 52E2AC
Zombiedog:
fld [esp+10]
mov [esp+10],(float)-44
fsub [esp+10]
fstp [esp+10]
fld [esp+0C]
mov [esp+C],(float)-104
fsub [esp+C]
fstp [esp+0C]
mov [esp+14],(float)0.8
fld [esp+14]
jmp 52E2AC
52E1DF:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52E1DF:
db 8B 76 24 83 FE 12
//mov esi,[esi+24]
//cmp esi,12
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>546</ID>
                  <Description>"Zombie::ApplyButter 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>545</ID>
                      <Description>"新黄油定住僵尸附属动画 951400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
951400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+24]
cmp eax,#33
je 005327B8
cmp eax,#34
je 005327B8
cmp eax,#35
je 005327B8
cmp eax,#36
je 005327B8
cmp eax,#37
je 005327B8
cmp eax,#38
je 005327B8
cmp eax,#39
je 005327B8
cmp eax,#40
je 005327B8
cmp eax,#41
je 005327B8
cmp eax,#42
je remove2
cmp eax,#43
je 005327B8
cmp eax,#44
je 005327B8
cmp eax,#45
je 005327B8
cmp eax,#46
je 005327B8
originalcode:
cmp eax,1A

exit:
jmp returnhere
remove2:
mov ecx,[esi+138]
mov eax,[esi]
call 00453CB0
test eax,eax
je remove2_end
fldz
fstp dword ptr [eax+08]
remove2_end:
call 0052F050
jmp 005327B8
532797:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
532797:
db 8B 46 24 83 F8 1A
//mov eax,[esi+24]
//cmp eax,1A
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>548</ID>
                  <Description>"Zombie::RemoveButter 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>547</ID>
                      <Description>"新僵尸移除黄油附属动画修复 951800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
951800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[esi+24]
cmp edx,#33
je 005325EA
cmp edx,#34
je 005325EA
cmp edx,#35
je 005325EA
cmp edx,#36
je 005325EA
cmp edx,#37
je 005325EA
cmp edx,#38
je 005325EA
cmp edx,#39
je 005325EA
cmp edx,#40
je 005325EA
cmp edx,#41
je 005325EA
cmp edx,#42
je remove2
cmp edx,#43
je 005325EA
cmp edx,#44
je 005325EA
cmp edx,#45
je 005325EA
cmp edx,#46
je 005325EA
originalcode:

cmp edx,1A

exit:
jmp returnhere
remove2:
mov ecx,[esi]
mov eax,[esi+00000138]
test eax,eax
mov ecx,[ecx+00000820]
mov ebx,[ecx+08]
je 005325EA
movzx ecx,ax
cmp ecx,[ebx+08]
jae 005325EA
lea edi,[ecx+ecx*4]
shl edi,05
add edi,[ebx]
cmp [edi+0000009C],eax
jne 005325EA
fld dword ptr [0067967C]
fstp dword ptr [edi+08]
jmp 005325EA
5325C5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5325C5:
db 8B 56 24 83 FA 1A
//mov edx,[esi+24]
//cmp edx,1A
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>617</ID>
                  <Description>"Zombie::PickRandomSpeed 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>616</ID>
                      <Description>"根据指定僵尸设置行走速度 956000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
956000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp ecx,#41
je Imp_PuffShorrm
retrun:
cmp ecx,#44
je 00524C50
cmp ecx,#45
je 00524C50
cmp ecx,#46
je 00524C50
cmp ecx,#47
je 00524C50
cmp ecx,#48
je 00524C50
originalcode:
cmp ecx,08
je 00524C50

exit:
jmp returnhere
Imp_PuffShorrm:
mov eax,[esi]
call 004537D0
test al,al
je retrun
fld dword ptr [00679668]
fstp dword ptr [esi+34]
call 0052F050
pop esi
pop ecx
ret

524B0F:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
524B0F:
db 83 F9 08 0F 84 38 01 00 00
//cmp ecx,08
//je 00524C50
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>372</ID>
              <Description>"Board类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>371</ID>
                  <Description>"Board::UpdateToolTip 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>370</ID>
                      <Description>"新僵尸字符串读取 - 鼠标标签 943800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
943800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebx+24]
mov ecx,eax
imul ecx,1C
mov edx,[ecx+163B000+18]
lea eax,[ecx+163B000]
jmp 40F064
originalcode:
mov eax,[ebx+24]
lea ecx,[eax*8+00000000]

exit:
jmp returnhere

40F04A:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40F04A:
db 8B 43 24 8D 0C C5 00 00 00 00
//mov eax,[ebx+24]
//lea ecx,[eax*8+00000000]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>375</ID>
              <Description>"AlmanacDialog类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>374</ID>
                  <Description>"AlmanacDialog::ZombieHasDescription 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>373</ID>
                      <Description>"新僵尸图鉴文本展示判断 943C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
943C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[eax+0000016C]
mov edx,[eax+0000082C]
push ebx
push esi
push edi
mov edi,[edx+24]
mov ebx,ecx
imul ebx,1C
lea ebx,[ebx+163B000]
mov eax,edx
cmp ecx,13
jne 00403B86
jmp 403B59
originalcode:
mov eax,[eax+0000016C]

exit:
jmp returnhere

403B30:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
403B30:
db 8B 80 6C 01 00 00
//mov eax,[eax+0000016C]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>377</ID>
                  <Description>"AlmanacDialog::ZombieIsShown 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>376</ID>
                      <Description>"新僵尸图鉴展示判断 944000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)

944000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,ebx
imul ecx,1C
lea ecx,[ecx+163B000]
mov eax,[edx+24]
mov [esp+14],ecx
mov [esp+0C],eax
cmp byte ptr [edi+000008C4],00
jne 00403A64
jmp 403A48
originalcode:
lea eax,[ebx*8+00000000]

exit:
jmp returnhere

403A24:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
403A24:
db 8D 04 DD 00 00 00 00
//lea eax,[ebx*8+00000000]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>379</ID>
                  <Description>"AlmanacDialog::DrawZombies 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>378</ID>
                      <Description>"新僵尸图鉴文本获取 944400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
944400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ebx,eax
imul ebx,1C
lea ebx,[ebx+163B000]
xor ebp,ebp
jmp 403464
originalcode:
lea ebx,[eax*8+00000000]

exit:
jmp returnhere

403452:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
403452:
db 8D 1C C5 00 00 00 00
//lea ebx,[eax*8+00000000]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>478</ID>
              <Description>"LawnApp类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>477</ID>
                  <Description>"LawnApp::RemoveReanimation 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>476</ID>
                      <Description>"新植物僵尸动画销毁 94B800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94B800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
RemoveReanimation:
cmp [edi+24],#42
je Gargantuar_PuffShroom
jne originalcode
RemoveReanimationStart:
mov ecx,[edi]
mov eax,[edi+138]
test eax,eax
mov edx,[ecx+00000820]
mov edx,[edx+08]
je originalcode
movzx ecx,ax
cmp ecx,[edx+08]
jae originalcode
lea ecx,[ecx+ecx*4]
shl ecx,05
add ecx,[edx]
cmp [ecx+0000009C],eax
jne originalcode
call 004733F0
originalcode:
mov ecx,[edi]
mov eax,[edi+00000144]

exit:
jmp returnhere
Gargantuar_PuffShroom:
cmp [edi+138],0
je originalcode
jmp RemoveReanimationStart
5305CF:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5305CF:
db 8B 0F 8B 87 44 01 00 00
//mov ecx,[edi]
//mov eax,[edi+00000144]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>481</ID>
              <Description>"CutScene类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>480</ID>
                  <Description>"CutScene::CutSceneCanZombieGoInGridSpot 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>479</ID>
                      <Description>"新僵尸出怪预览位置修复 94BC00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94BC00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp edi,#42
je 004393EA
originalcode:
cmp edi,17
je 004393EA

exit:
jmp returnhere

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp edi,#42
je 0043947A
originalcode_2:
cmp edi,17
je 0043947A

exit_2:
jmp returnhere_2

439461:
jmp newmem_2
returnhere_2:

4393E0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4393E0:
db 83 FF 17 74 05
//cmp edi,17
//je 004393EA
439461:
db 83 FF 17 74 14
//cmp edi,17
//je 0043947A
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>483</ID>
                  <Description>"CutScene::FindAndPlaceZombie 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>482</ID>
                      <Description>"新僵尸出怪预览遮挡修复 94C000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94C000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp esi,#42
je 004395CC
originalcode:
cmp esi,17
je 004395CC

exit:
jmp returnhere

4395C2:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4395C2:
db 83 FE 17 74 05
//cmp esi,17
//je 004395CC
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>486</ID>
              <Description>"AlmanacDialog类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>484</ID>
                  <Description>"新僵尸图鉴偏移修复 94C400"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94C400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#23
je Gargantuar
cmp eax,#32
je Gargantuar
cmp eax,#42
je Gargantuar
originalcode:
cmp eax,0C
jne 00403365

exit:
jmp returnhere
Gargantuar:
fld dword ptr [esp+40]
fadd qword ptr [00679318]
jmp 004033E3
Gargantuar_ZomBotany:
fld dword ptr [esp+40]
fadd qword ptr [D7C01C]
jmp 004033E3
403346:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
403346:
db 83 F8 0C 75 1A
//cmp eax,0C
//jne 00403365
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>634</ID>
              <Description>"僵尸动画制图获得贴图修复"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
46F91C:
lea eax,[eax*4+163B000]


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
46F91C:
db 8D 04 85 80 DA 69 00
//lea eax,[eax*4+0069DA80]
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>421</ID>
          <Description>"新增子弹"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>423</ID>
              <Description>"参数设置(新子弹存在时不要关脚本，等子弹消失)"</Description>
              <Options moHideChildren="1" moRecursiveSetValue="1" moManualExpandCollapse="1"/>
              <LastState/>
              <Color>0600FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

/*
这里写个说明
db指data byte CE指令作用是单字节覆写值

dw指data word CE指令作用是二字节覆写值

dd指data double word CE指令作用是四字节覆写值

dq指data quad word(qword) CE指令作用是八字节覆写值

覆写完一个值后如果后面有空格加另一个值的话那么就按覆写类型来跳过不必要的字节
*/
1658000:
dd #0 #0 #20
dd #1 #0 #25
dd #2 #0 #40
dd #3 #0 #80
dd #4 #0 #10
dd #5 #0 #85
dd #6 #0 #40
dd #7 #0 #20
dd #8 #0 #15
dd #9 #0 #70
dd #10 #0 #15
dd #11 #0 #350
dd #12 #0 #40
dd #13 #0 #40
//新子弹
dd #14 #0 #60
dd #15 #0 #35
dd #16 #0 #100
dd #17 #0 #110
dd #18 #0 #45
dd #19 #0 #20
dd #20 #0 #20
dd #21 #0 #20
[DISABLE]
//code from here till the end of the code will be used to disable the cheat

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>424</ID>
                  <Description>"新增子弹 点击启用"</Description>
                  <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>0000EE</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>425</ID>
                      <Description>"新增子弹绘图 - 子弹数据获取 946400"</Description>
                      <LastState/>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
946400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea ecx,[eax+eax*2]
lea edx,[ecx*4+1658000]
cmp eax,0B
jmp 46E57C
originalcode:
cmp eax,0B
lea ecx,[eax+eax*2]

exit:
jmp returnhere

46E56F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46E56F:
db 83 F8 0B 8D 0C 40
//cmp eax,0B
//lea ecx,[eax+eax*2]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>426</ID>
                      <Description>"新增子弹绘图贴图获取 946800"</Description>
                      <LastState/>
                      <Color>008000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
946800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#14
jne Zombie_corn
mov eax,[006A7928]
fst dword ptr [esp+10]
mov [esp+0C],eax
jmp 0046E6C3
Zombie_corn:
cmp eax,#15
jne Zombie_butter
mov ecx,[006A7700]
fld dword ptr [00679FC8]
fstp dword ptr [esp+10]
mov [esp+0C],ecx
jmp 0046E6C3
Zombie_butter:
cmp eax,#16
jne Zombie_SnowPea
fld dword ptr [00679664]
mov edx,[006A7284]
fstp dword ptr [esp+10]
jmp 0046E6BF
Zombie_SnowPea:
cmp eax,#18
jne Null
mov edx,[8CC050]
jmp 0046E6BF
Null:
originalcode:
cmp eax,#14
jge 0046E6B9
test eax,eax
je 0046E6B9

exit:
jmp returnhere

46E59B:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46E59B:
db 85 C0 0F 84 16 01 00 00
//test eax,eax
//je 0046E6B9
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>427</ID>
                      <Description>"新增子弹伤害获取 946C00"</Description>
                      <LastState/>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
946C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[eax+eax*2]
mov ecx,[eax*4+1658000+8]
jmp exit
originalcode:
lea eax,[eax+eax*2]
mov ecx,[eax*4+0069F1C8]

exit:
jmp returnhere

46D796:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46D796:
db 8D 04 40 8B 0C 85 C8 F1 69 00
//lea eax,[eax+eax*2]
//mov ecx,[eax*4+0069F1C8]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>428</ID>
                      <Description>"新增子弹打植物 947000"</Description>
                      <LastState/>
                      <Color>0000FF</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
947000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#14
je 0046D656
cmp eax,#15
je 0046D656
cmp eax,#16
je 0046D656
cmp eax,#18
je 0046D656
originalcode:
cmp eax,09
je 0046D656

exit:
jmp returnhere

46D63E:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46D63E:
db 83 F8 09 74 13
//cmp eax,09
//je 0046D656
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>429</ID>
                      <Description>"新增子弹坐标偏移 947400"</Description>
                      <LastState/>
                      <Color>808080</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
947400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#15
je az
cmp eax,#16
je az
cmp eax,#14
jne originalcode
az:
fld dword ptr [00679AA8]
jmp 0046D5FE
originalcode:
cmp eax,09
jne 0046D5CF

exit:
jmp returnhere

46D5C2:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46D5C2:
db 83 F8 09 75 08
//cmp eax,09
//jne 0046D5CF
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>430</ID>
                      <Description>"新投掷类子弹运动更新 947800"</Description>
                      <LastState/>
                      <Color>008080</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
947800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov cl,01
cmp eax,#14
je 0046D880
cmp eax,#15
je 0046D880
cmp eax,#16
je 0046D880
originalcode:
cmp eax,09


exit:
jmp returnhere

46D584:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46D584:
db 83 F8 09 B1 01
//cmp eax,09
//mov cl,01
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>432</ID>
                      <Description>"新增投手僵尸投掷子弹 947C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
947C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov esi,[esi+04]
lea edi,[esi+000000C8]
call 0041DF60
mov esi,[esp]
fld dword ptr [esp+20]
push 09
cmp [esi+24],#33
je cabbage
cmp [esi+24],#34
je corn
jmp Enter_bullet_ID
cabbage:
mov [esp],#14
jmp Enter_bullet_ID
corn:
mov [esp],#15
jmp Enter_bullet_ID
Enter_bullet_ID:
push ebp
mov esi,eax
call 006397D0
fld dword ptr [esp+1C]
push eax
call 006397D0
push eax
push esi
mov eax,ebx
call 0046C730
fld dword ptr [esp+14]
fisub [esp+18]
fsub qword ptr [00679338]
fstp dword ptr [esp+10]
fild dword ptr [esp+1C]
fsub dword ptr [esp+20]
fstp dword ptr [esp+20]
fld dword ptr [0067959C]
fcom dword ptr [esp+10]
fnstsw ax
test ah,41
jne PlayerSound_Basketball_Bullet
fstp dword ptr [esp+10]
jmp PlayerSound_Basketball_Bullet_0
PlayerSound_Basketball_Bullet:
fstp st(0)
PlayerSound_Basketball_Bullet_0:
fld dword ptr [esp+10]
pop edi
fchs
mov [esi+58],00000001
fld qword ptr [00679490]
fdiv st(1),st(0)
fxch st(1)
fstp dword ptr [esi+3C]
fldz
fstp dword ptr [esi+40]
fdivr dword ptr [esp+1C]
fsub qword ptr [00679560]
fstp dword ptr [esi+44]
fld dword ptr [00679978]
fstp dword ptr [esi+48]
pop esi
pop ebp
pop ebx
add esp,14
ret

originalcode:
mov esi,[esi+04]
lea edi,[esi+000000C8]

exit:
jmp returnhere

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edi+24],#33
je Modify_coordinate_offset_cabbage
cmp [edi+24],#34
je Modify_coordinate_offset_cabbage
Do_not_modify_coordinate_offset:
fadd qword ptr [00679980]
fstp dword ptr [esp+14]
fld dword ptr [esi+30]
fsub qword ptr [00679580]
jmp modify_coordinate_offset_end
Modify_coordinate_offset_cabbage:
fadd qword ptr [D7C00C]
fstp dword ptr [esp+14]
fld dword ptr [esi+30]
fsub qword ptr [D7C014]
jmp modify_coordinate_offset_end
modify_coordinate_offset_end:
fstp dword ptr [esp+20]
test eax,eax
je 00525767
jmp 525757
originalcode_2:
fadd qword ptr [00679980]

exit_2:
jmp returnhere_2

newmem_3: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esp+4]
cmp [eax+24],#33
je Modify_playback_sound_effects
cmp [eax+24],#34
je Modify_playback_sound_effects
jmp originalcode_3
Modify_playback_sound_effects:
mov eax,3
jmp exit_3
originalcode_3:
mov eax,00000025

exit_3:
jmp returnhere_3

5257C6:
jmp newmem_3
returnhere_3:

52573E:
jmp newmem_2
nop
returnhere_2:

5257DF:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5257DF:
db 8B 76 04 8D BE C8 00 00 00
//mov esi,[esi+04]
//lea edi,[esi+000000C8]
52573E:
db DC 05 80 99 67 00
//fadd qword ptr [00679980]
5257C6:
db B8 25 00 00 00
//mov eax,00000025
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>437</ID>
                      <Description>"新增子弹音效 948000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
948000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov bl,01
cmp esi,#15
je Zombie_corn
cmp esi,#16
je Zombie_butter
cmp esi,0A
jne 0046DDA3
originalcode:
cmp esi,0A
mov bl,01

exit:
jmp returnhere
Zombie_corn:
mov edi,[edi]
cmp byte ptr [edi+000008C5],00
jne 0046DFF3
fldz
mov ecx,[006A9F00]
mov edi,[edi+00000784]
fst dword ptr [esp+14]
fcomp dword ptr [ecx+00000684]
fnstsw ax
test ah,44
jnp Zombie_corn_1
fld dword ptr [ecx+00000684]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+18]
add esp,04
Zombie_corn_1:
fld dword ptr [esp+14]
push ecx
mov eax,00000020
fstp dword ptr [esp]
mov ecx,edi
call 00515020
pop edi
pop esi
pop ebp
pop ebx
ret 0004

Zombie_butter:
fldz
mov eax,[edi]
cmp byte ptr [eax+000008C5],00
jne 0046DEC5
mov ecx,[006A9F00]
fst dword ptr [esp+14]
fcomp dword ptr [ecx+000008C0]
mov esi,[eax+00000784]
fnstsw ax
test ah,44
jnp Zombie_butter_1
fld dword ptr [ecx+000008C0]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+18]
add esp,04
Zombie_butter_1:
mov eax,0000002B
jmp 0046DEB4

46DD3D:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46DD3D:
db 83 FE 0A B3 01
//cmp esi,0A
//mov bl,01
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>438</ID>
                      <Description>"新增僵尸子弹音效 948400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
948400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebp+5C],#15
je Zombie_corn
cmp [ebp+5C],#16
je Zombie_butter
originalcode:
mov eax,00000001

exit:
jmp returnhere
Zombie_corn:
mov eax,20
jmp exit
Zombie_butter:
mov eax,2B
jmp exit
46D7F7:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46D7F7:
db B8 01 00 00 00
//mov eax,00000001
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>572</ID>
                      <Description>"新僵尸平面飞行子弹攻击范围 951C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
951C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+5C]
cmp eax,#18
je 0046EC88
originalcode:
test eax,eax

exit:
jmp returnhere

46EBC0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46EBC0:
db 8B 46 5C 85 C0
//mov eax,[esi+5C]
//test eax,eax
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>573</ID>
                      <Description>"新僵尸平面飞行子弹打中植物 952000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
952000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebp
cmp ecx,#18
je 46CFCF
originalcode:
cmp ecx,0D
jne 0046D058
jmp 46CFCF
exit:
jmp returnhere

46CFC5:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46CFC5:
db 83 F9 0D 55 0F 85 89 00 00 00
//cmp ecx,0D
//push ebp
//jne 0046D058
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>574</ID>
                      <Description>"新僵尸平面飞行子弹打中植物特殊植物判断 952400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
952400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [ebp+5C],#18
je az
originalcode:
cmp dword ptr [ebp+5C],0D
jne 0046CB17
jmp az
exit:
jmp returnhere
az:
mov eax,[esi+24]
cmp eax,08
je 0046CAD0
cmp eax,09
je 0046CAD0
cmp eax,04
je 0046CAD0
cmp eax,15
je 0046CAD0
cmp eax,2E
je 0046CAD0
cmp eax,10
je 0046CAD0
jmp 46CB17

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,[esi+1C]
mov edx,[ebp+04]
mov esi,[esi+28]
cmp dword ptr [ebp+5C],#18
je 46CB6C
cmp dword ptr [ebp+5C],0D
je 46CB6C
jmp 46CBC9
originalcode_2:

mov edi,[esi+1C]

exit_2:
jmp returnhere_2

46CB5D:
jmp newmem_2
nop 2
returnhere_2:

46CAF0:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46CAF0:
db 83 7D 5C 0D 75 21
//cmp dword ptr [ebp+5C],0D
//jne 0046CB17
46CB5D:
db 83 7D 5C 0D 8B 7E 1C
//cmp dword ptr [ebp+5C],0D
//mov edi,[esi+1C]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>576</ID>
                      <Description>"平面飞行子弹对植物伤害修正"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
46CFDE:
mov edx,[ecx*4+1658000+8]


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
46CFDE:
db 8B 14 8D C8 F1 69 00
//mov edx,[ecx*4+0069F1C8]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>444</ID>
          <Description>"加载新地图"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>40</ID>
              <Description>"Music类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>30</ID>
                  <Description>"Music::StartGameMusic 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>29</ID>
                      <Description>"修改场景音乐 936000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
936000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx+554C],#5
jne Background_egypt
mov edi,#14
mov eax,esi
call 0045B750
pop edi
pop esi
pop ecx
ret
Background_egypt:
cmp [ecx+554C],#10
jne Background_pool
mov edi,#15
mov eax,esi
call 0045B750
pop edi
pop esi
pop ecx
ret
Background_pool:
originalcode:
mov edi,00000003

exit:
jmp returnhere
45B86B:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
45B86B:
db BF 03 00 00 00
//mov edi,00000003
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>32</ID>
                  <Description>"Music::PlayMusic 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>31</ID>
                      <Description>"修改音乐播放 936400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
936400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp ecx,#13
jne MainMusic_14
cmp edi,-01
mov [esi+0C],eax
jne MainMusic_13_1
mov edi,#236
MainMusic_13_1:
fld qword ptr [0065B8F8]
sub esp,08
fstp qword ptr [esp]
push edi
push 1
jmp 0045B07A

MainMusic_14:
cmp ecx,#14
jne MainMusic_15
cmp edi,-01
mov [esi+0C],eax
jne MainMusic_14_1
mov edi,#0
MainMusic_14_1:
fld qword ptr [0065B8F8]
sub esp,08
fstp qword ptr [esp]
push edi
push A
jmp 0045B07A
MainMusic_15:
originalcode:
cmp ecx,0C
ja 0045B080

exit:
jmp returnhere

45ADEB:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
45ADEB:
db 83 F9 0C 0F 87 8C 02 00 00
//cmp ecx,0C
//ja 0045B080
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>317</ID>
                  <Description>"Music::GetBassMusicHandle 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>316</ID>
                      <Description>"读取新音乐 93FC00"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93FC00:
this_Id:
db 00 00 00 00
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add [esi+0000050C],00000DAC
push #24
push 00795D00
mov [this_Id],#10
lea ecx,[esp+2C]
mov [esp+44],0000000F
mov [esp+40],ebx
mov [esp+30],bl
call 00404330
lea ecx,[esp+24]
push ecx
push [this_Id]
push esi
mov [esp+58],00000001
call 0045A2C0
test al,al
jne load_egypt_music_1
mov byte ptr [esi+41],01
jmp load_egypt_music_2
load_egypt_music_1:
mov eax,[this_Id]
mov ecx,esi
call 0045AC20
mov edx,[006A9FF0]
push 04
push 02
push eax
mov eax,[edx+000000A8]
call eax
load_egypt_music_2:
cmp dword ptr [esp+3C],10
jb load_egypt_music_end
mov ecx,[esp+28]
push ecx
call 0061C19A
add esp,04
load_egypt_music_end:
mov eax,[esi]

originalcode:
add [eax+0000050C],00000DAC

exit:
jmp returnhere

45AA1C:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
45AA1C:
db 81 80 0C 05 00 00 AC 0D 00 00
//add [eax+0000050C],00000DAC
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>320</ID>
                  <Description>"Music::GameMusicPause 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>319</ID>
                      <Description>"暂停音乐记录位置 940000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
940000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp eax,01
je 45BA4F
cmp eax,02
je 45BA11
cmp eax,03
je 45BA4F
cmp eax,04
je 45BA4F
cmp eax,05
je 45BA4F
cmp eax,0E
je 45BA4F
cmp eax,0F
je 45BA4F
jmp 45BA6B
exit:
jmp returnhere

45B9F8:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
45B9F8:
db 83 F8 01 74 52
//cmp eax,01
//je 0045BA4F
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>25</ID>
                  <Description>"Music::MusicTitleScreenInit 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>24</ID>
                      <Description>"修改音乐加载路径 935800"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
935800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push #18
mov esi,ecx
xor ebx,ebx
push 794300 // 006682F0 -&gt; "sounds\mainmusic.mo3" 20字
jmp 45A8CB
exit:
jmp returnhere

int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
45A8C0:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
45A8C0:
db 6A 14 8B F1 33 DB
//push 14
//mov esi,ecx
//xor ebx,ebx
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>23</ID>
                  <Description>"Music::MusicInit 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>22</ID>
                      <Description>"修改音乐加载路径 935C00"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
935C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push #18
mov esi,ecx
xor ebx,ebx
push 794300 // 006682F0 -&gt; "sounds\mainmusic.mo3" 20字
jmp 45A9AB
exit:
jmp returnhere

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_2:
push #25
push 794400 // 00668308 -&gt; "sounds\mainmusic_hihats.mo3" 27字
jmp 45AA2D
exit_2:
jmp returnhere_2

int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
45A9A0:
jmp newmem
nop
returnhere:

45AA26:
jmp newmem_2
nop 2
returnhere_2:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
45A9A0:
db 6A 14 8B F1 33 DB
//push 14
//mov esi,ecx
//xor ebx,ebx
45AA26:
db 6A 1B 68 08 83 66 00
//push 1B
//push 00668308
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>445</ID>
              <Description>"Board类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>28</ID>
                  <Description>"Board::PickBackground 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>27</ID>
                      <Description>"修改冒险模式背景 937C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
937C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp edx,#50
jg level_60
mov [esi+0000554C],4 //屋顶
jmp 0040A635
level_60:
cmp edx,#60 //Level[60,70]
jg level_70
mov [esi+0000554C],5 //屋顶黑夜
jmp 0040A635
level_70:

jmp 0040A635
originalcode:
xor ecx,ecx
cmp edx,32

exit:
jmp returnhere
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
int 3
40A5F2:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40A5F2:
db 33 C9 83 FA 32
//xor ecx,ecx
//cmp edx,32
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>237</ID>
                      <Description>"新迷你游戏关卡场景读取 93B400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
93B400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push edi
mov ebp,1
cmp eax,0
jle 40A584
mov edx,eax
push ebp
mov ebp,[D7C000]
lea ebp,[ebp+24]
imul edx,ebp
pop ebp
mov eax,[edx+011B4010]
cmp eax,#9
jge GetBackground
jmp dword ptr [eax*4+0040AA98]
GetBackground:
GetBackground7:
cmp eax,9
jne GetBackgroundEnd
mov [esi+0000554C],#10
call 0040A160
xor edx,edx
mov ecx,2
mov [esi+000005D8],ebp
mov [esi+000005DC],ebp
mov [esi+000005E0],ebp
mov [esi+000005E4],ebp
mov [esi+000005E8],ebp
mov [esi+000005EC],ebp
jmp 0040A73A
GetBackgroundEnd:
mov [esi+0000554C],0
call 0040A160
xor edx,edx
mov ecx,2
mov [esi+000005D8],ebp
mov [esi+000005DC],ebp
mov [esi+000005E0],ecx
mov [esi+000005E4],ecx
mov [esi+000005E8],ebp
mov [esi+000005EC],ebp
jmp 0040A73A
originalcode:
cmp eax,48
push edi
mov ebp,00000001

exit:
jmp returnhere

40A567:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40A567:
db 83 F8 48 57 BD 01 00 00 00
//cmp eax,48
//push edi
//mov ebp,00000001
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>443</ID>
                  <Description>"Board::LoadBackgroundImages 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>442</ID>
                      <Description>"根据ID加载新地图 948800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
948800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
Load_Background7:
cmp eax,#10
jne Load_Background
push #21
push 797000
lea ecx,[esp+10]
mov [esp+28],0000000F
mov [esp+24],ebx
mov [esp+14],bl
call 00404330
mov [esp+48],#20
mov ecx,[006A9F38]
mov ecx,[ecx+00000634]
lea eax,[esp+08]
call 00513140
cmp dword ptr [esp+20],10
jb 0040A536
mov edx,[esp+0C]
push edx
call 0061C19A
add esp,04
mov ecx,[esp+40]
mov fs:[00000000],ecx
pop ebx
add esp,48
ret

Load_Background:
originalcode:
cmp eax,01
jne 0040A326

exit:
jmp returnhere
40A2BC:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
40A2BC:
db 83 F8 01 75 65
//cmp eax,01
//jne 0040A326
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>447</ID>
                  <Description>"Board::DrawBackdrop 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>446</ID>
                      <Description>"新绘制场景 948C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
948C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp eax,#10
push edi
mov edi,[006A7AF0]
ja 0041631F
cmp eax,0
je DrawBackground1
cmp eax,1
je DrawBackground2
cmp eax,2
je DrawBackground3
cmp eax,3
je DrawBackground4
cmp eax,4
je DrawBackground5
cmp eax,5
je DrawBackground6
cmp eax,6
je DrawBackground7
cmp eax,7
je DrawBackground8
cmp eax,8
je DrawBackground9
cmp eax,9
je DrawBackground10
cmp eax,#10
je DrawBackground11
jmp DrawBackground1
exit:
jmp returnhere
DrawBackground1:
mov ebx,[006A77C4]
jmp 00416323
DrawBackground2:
mov ebx,[006A7B08]
jmp 00416323
DrawBackground3:
mov ebx,[006A71C0]
jmp 00416323
DrawBackground4:
mov ebx,[006A7574]
jmp 00416323
DrawBackground5:
mov ebx,[006A7724]
jmp 00416323
DrawBackground6:
mov ebx,[006A7680]
jmp 00416323
DrawBackground7:
mov ebx,[006A7598]
jmp 00416323
DrawBackground8:
mov ebx,[006A7AF0]
jmp 00416323
DrawBackground9:
mov ebx,[006A746C]
jmp 00416323
DrawBackground10:
mov ebx,[006A77C4]
jmp 00416323
DrawBackground11:
mov ebx,[8CC008]
jmp 00416323
4162C8:
jmp newmem
nop 5
returnhere:
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
4162C8:
db 83 F8 09 57 8B 3D F0 7A 6A 00
//cmp eax,09
//push edi
//mov edi,[006A7AF0]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>459</ID>
                  <Description>"Board::DrawHouseDoorBottom 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>456</ID>
                      <Description>"绘制新地图进家门内贴图 949400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
949400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[ecx+0000554C]
push ebx
DrawBackground7:
cmp ecx,#10
jne DrawBackground1
mov ebx,[8CC00C]
push #234
push #-173
call 00587150
pop ebx
ret
DrawBackground1:
test ecx,ecx
jne 00417C9F
jmp 417C8B
originalcode:


exit:
jmp returnhere

417C80:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
417C80:
db 8B 89 4C 55 00 00
//mov ecx,[ecx+0000554C]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>458</ID>
                  <Description>"Board::DrawHouseDoorTop 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>457</ID>
                      <Description>"绘制新地图进家门框贴图 949800"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
949800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[ecx+0000554C]
push ebx
DrawBackground7:
cmp ecx,#10
jne DrawBackground1
mov ebx,[8CC010]
push #234
push #-172
call 00587150
pop ebx
ret
DrawBackground1:
test ecx,ecx
jne 00417D12

originalcode:


exit:
jmp returnhere

417CF0:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
417CF0:
db 8B 89 4C 55 00 00
//mov ecx,[ecx+0000554C]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>466</ID>
                  <Description>"Board::PixelToGridY修改 94A800"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94A800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov esi,[esi+0000554C]
cmp esi,#10
je 0041C600
originalcode:


exit:
jmp returnhere

41C5A5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
41C5A5:
db 8B B6 4C 55 00 00
//mov esi,[esi+0000554C]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>467</ID>
                  <Description>"Board::GridToPixelY修改 94AC00"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94AC00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebx+0000554C]
cmp eax,#10
je 0041C7C7
originalcode:


exit:
jmp returnhere

41C77A:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
41C77A:
db 8B 83 4C 55 00 00
//mov eax,[ebx+0000554C]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>450</ID>
              <Description>"Sexy类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>449</ID>
                  <Description>"Sexy::ExtractResourcesByName 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>448</ID>
                      <Description>"新增贴图组读取 949000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
949000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,797000
mov esi,eax
mov ecx,00000016
xor edx,edx
repe cmpsb
jne DelayLoad_Background1
mov ecx,[esp+0C]
pop edi
pop esi
jmp DelayLoad_Background7_StartLoad
DelayLoad_Background1:
originalcode:
mov edi,0065577C

exit:
jmp returnhere
DelayLoad_Background7_StartLoad:
push ebp
mov ebp,esp
push -01
push 00643818
mov eax,fs:[00000000]
push eax
mov fs:[00000000],esp
sub esp,54
push ebx
push esi
push edi
mov [ebp-10],esp
xor ebx,ebx
mov [ebp-04],ebx
push #17
mov edi,ecx
push 797100
lea ecx,[ebp-44]
mov byte ptr [006A9EF4],01
mov [ebp-2C],0000000F
mov [ebp-30],ebx
mov [ebp-40],bl
call 00404330
mov byte ptr [ebp-04],01
mov eax,[edi]
mov eax,[eax+40]
lea ecx,[ebp-44]
push ecx
lea edx,[ebp-1C]
push edx
mov ecx,edi
call eax
mov ecx,eax
call 0059A980
lea esi,[ebp-1C]
mov [8CC008],eax
call 0059A8C0
mov [ebp-04],bl
cmp dword ptr [ebp-2C],10
jb DelayLoad_Background7_Load1
mov ecx,[ebp-40]
push ecx
call 0061C19A
add esp,04
DelayLoad_Background7_Load1:
push #43
push 797200
lea ecx,[ebp-44]
mov [ebp-2C],0000000F
mov [ebp-30],ebx
mov [ebp-40],bl
call 00404330
lea eax,[ebp-44]
mov byte ptr [ebp-04],02
mov edx,[edi]
mov edx,[edx+40]
push eax
lea ecx,[ebp-1C]
push ecx
mov ecx,edi
call edx
mov ecx,eax
call 0059A980
lea esi,[ebp-1C]
mov [8CC00C],eax
call 0059A8C0
mov [ebp-04],bl
cmp dword ptr [ebp-2C],10
jb DelayLoad_Background7_Load2
mov eax,[ebp-40]
push eax
call 0061C19A
add esp,04
DelayLoad_Background7_Load2:
push #31
push 797300
lea ecx,[ebp-60]
mov [ebp-48],0000000F
mov [ebp-4C],ebx
mov [ebp-5C],bl
call 00404330
lea eax,[ebp-60]
mov byte ptr [ebp-04],03
mov edx,[edi]
mov edx,[edx+40]
push eax
lea ecx,[ebp-28]
push ecx
mov ecx,edi
call edx
mov ecx,eax
call 0059A980
lea esi,[ebp-28]
mov [8CC010],eax
call 0059A8C0
cmp dword ptr [ebp-48],10
jb DelayLoad_Background7_Load3
mov eax,[ebp-5C]
push eax
call 0061C19A
add esp,04
DelayLoad_Background7_Load3:
mov al,01
mov ecx,[ebp-0C]
mov fs:[00000000],ecx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret

474740:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
474740:
db BF 7C 57 65 00
//mov edi,0065577C
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>462</ID>
              <Description>"Zombie类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>461</ID>
                  <Description>"Zombie::WalkIntoHouse 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>460</ID>
                      <Description>"僵尸进家坐标是否修正 949C00"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
949C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ecx+0000554C]
cmp eax,#10
je 0053489C
originalcode:

exit:
jmp returnhere

5347C0:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5347C0:
db 8B 81 4C 55 00 00
//mov eax,[ecx+0000554C]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>463</ID>
                      <Description>"僵尸进家坐标修正 94A000"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94A000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#10
je 005348F2
originalcode:
cmp eax,02
je 005348F2

exit:
jmp returnhere

5348E8:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5348E8:
db 83 F8 02 74 05
//cmp eax,02
//je 005348F2
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>465</ID>
                  <Description>"Zombie::SetupDrawZombieWon 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>464</ID>
                      <Description>"新地图僵尸进家图层不显示 94A400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94A400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[eax+0000554C]
cmp eax,#10
je 0053408E
originalcode:


exit:
jmp returnhere

53405F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
53405F:
db 8B 80 4C 55 00 00
//mov eax,[eax+0000554C]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>471</ID>
              <Description>"CutScene类"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>470</ID>
                  <Description>"CutScene::CutSceneCanZombieGoInGridSpot 修改"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>469</ID>
                      <Description>"出怪预览横坐标根据场景修复偏移 94B400"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
94B400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[eax+0000554C]
cmp eax,#10
je 00439449
originalcode:


exit:
jmp returnhere

43941E:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
43941E:
db 8B 80 4C 55 00 00
//mov eax,[eax+0000554C]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>611</ID>
          <Description>"植物减速"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>622</ID>
              <Description>"函数"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>620</ID>
                  <Description>"函数 - 令植物减速 D18800"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
D18800:
push ebp
lea ebp,[esp+4]
push eax
push ecx
push edx
push edi
push esi
mov esi,eax
call D19000
test al,al
jne Can_t_moderate
mov edx,[esi+150]
cmp edx,0
jg Can_t_moderate
mov edx,[esi+148]
cmp edx,0
jg az
moderate_playssound:
mov eax,[esi]
cmp byte ptr [eax+8C5],00
jne moderate_playssound_end
fldz
mov ecx,[6A9F00]
mov edi,[eax+784]
fst dword ptr [esp+0C]
fcomp dword ptr [ecx+03AC]
fnstsw ax
test ah,44
jnp moderate_playssound_end2
fld dword ptr [ecx+000003AC]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+10]
add esp,04
moderate_playssound_end2:
fld dword ptr [esp+0C]
push ecx
mov eax,00000012
fstp dword ptr [esp]
mov ecx,edi
call 00515020
moderate_playssound_end:
mov [esi+14C],1
az:
mov ecx,#1000
cmp [ebp+4],1
jne moderate_2
mov ecx,#2000
moderate_2:
cmp ecx,edx
jg moderate_3
mov ecx,edx
moderate_3:
mov [esi+148],ecx
Can_t_moderate:
pop esi
pop edi
pop edx
pop ecx
pop eax
pop ebp
ret 4
int 3
int 3
int 3
int 3
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>619</ID>
                  <Description>"函数 - 令植物冻结 D18C00"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
D18C00:
push edx
push eax
push edi
push esi
push ecx
mov esi,eax
call D19000
test al,al
jne freeze_retrun
sub [esi+40],#40
mov [esi+B8],#40
mov eax,esi
push 0
call D18800
mov eax,[esi+150]
mov ecx,#300
cmp eax,ecx
jg freeze_end
mov eax,ecx
freeze_end:
mov [esi+150],eax
moderate_playssound:
mov eax,[esi]
cmp byte ptr [eax+8C5],00
jne moderate_playssound_end
fldz
mov ecx,[6A9F00]
mov edi,[eax+784]
fst dword ptr [esp+0C]
fcomp dword ptr [ecx+03AC]
fnstsw ax
test ah,44
jnp moderate_playssound_end2
fld dword ptr [ecx+000003AC]
push ecx
fstp dword ptr [esp]
call 005AF410
fstp dword ptr [esp+10]
add esp,04
moderate_playssound_end2:
fld dword ptr [esp+0C]
push ecx
mov eax,00000012
fstp dword ptr [esp]
mov ecx,edi
call 00515020
moderate_playssound_end:
freeze_retrun:
pop ecx
pop esi
pop edi
pop eax
pop edx
ret
int 3
int 3
int 3
int 3
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>621</ID>
                  <Description>"函数 - 判断此植物是否免疫冰冻 D19000"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
D19000:
push ecx
push esi
mov esi,eax
xor eax,eax
mov ecx,[esi+24]
cmp ecx,#2
je Can_t_moderate
cmp ecx,#5
je Can_t_moderate
cmp ecx,#20
je Can_t_moderate
cmp ecx,#11
je Can_t_moderate
cmp ecx,#14
je Can_t_moderate
cmp ecx,#15
je Can_t_moderate
cmp ecx,#20
je Can_t_moderate
cmp ecx,#25
je Can_t_moderate
cmp ecx,#44
je Can_t_moderate
cmp ecx,#49
je Can_t_moderate
xor al,al
pop esi
pop ecx
ret
Can_t_moderate:
mov al,1
pop esi
pop ecx
ret
int 3
int 3
int 3
int 3
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>612</ID>
              <Description>"寒冰子弹令植物减速 956400"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
956400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
sub [eax+40],edx
cmp [ebp+5C],#17
je moderate
cmp [ebp+5C],#18
je moderate
jmp originalcode
moderate:
push 0
call D18800
originalcode:
cmp ecx,19

exit:
jmp returnhere

46CFEB:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46CFEB:
db 29 50 40 83 F9 19
//sub [eax+40],edx
//cmp ecx,19
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>623</ID>
              <Description>"植物减速特性更新 956800"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
956800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
push esi
push edi
mov edi,eax
mov eax,[edi+150]
cmp eax,0
jle moderate
sub eax,1
mov [edi+150],eax
mov [edi+14C],2
cmp [edi+144],0
je originalcode
pop ecx
pop esi
pop edi
ret
moderate:
mov eax,[edi+148]
cmp eax,0
jle originalcode
sub eax,1
mov [edi+148],eax
mov eax,[edi+14C]
sub eax,1
cmp eax,0
jg moderate_1
je moderate_2
mov eax,1
moderate_1:
mov [edi+14C],eax
cmp [edi+144],0
je originalcode
pop ecx
pop esi
pop edi
ret
originalcode:
mov [edi+14C],0
exit:
jmp returnhere
moderate_2:
mov [edi+14C],eax
jmp originalcode
463150:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
463150:
db 51 56 57 8B F8
//push ecx
//push esi
//push edi
//mov edi,eax
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>624</ID>
              <Description>"植物减速动画修正 956C00"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
956C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+14C],0
jne 463E2C
originalcode:
mov ecx,ebp
call 00471BC0

exit:
jmp returnhere

463B7F:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
463B7F:
db 8B CD E8 3A E0 00 00
//mov ecx,ebp
//call 00471BC0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>626</ID>
              <Description>"植物减速/冻结不创建眨眼 957000"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
957000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edi+14C],0
jne exit
originalcode:
mov eax,edi
call 00464410

exit:
jmp returnhere

464E7C:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
464E7C:
db 8B C7 E8 8D F5 FF FF
//mov eax,edi
//call 00464410
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>632</ID>
              <Description>"豌豆类植物动画修复 957400"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
957400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#83
je 0045E68F
cmp eax,#84
je 0045E68F
push eax
lea eax,[eax+eax*8]
lea eax,[eax*4+15AC000]
mov eax,[eax]
cmp eax,#4
pop eax
je 0045E68F
originalcode:
test eax,eax
je 0045E68F

exit:
jmp returnhere

45DF58:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
45DF58:
db 85 C0 0F 84 2F 07 00 00
//test eax,eax
//je 0045E68F
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>633</ID>
              <Description>"豌豆类植物动画制图修复 957800"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
957800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp esi,#83
je 0046F847
cmp esi,#84
je 0046F847
lea edx,[esi+esi*8]
lea edx,[edx*4+15AC000]
mov edx,[edx]
cmp edx,#4
je 46F847
cmp edx,#13
je 46F847
cmp edx,#14
je 46F847
cmp edx,#80
je 46F847
cmp edx,#151
je 46F847
cmp edx,#152
je 46F847
originalcode:
test esi,esi
je 0046F847

exit:
jmp returnhere

46F75D:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
46F75D:
db 85 F6 0F 84 E2 00 00 00
//test esi,esi
//je 0046F847
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>97</ID>
      <Description>"数据组"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>214</ID>
          <Description>"Enhance版常量"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>215</ID>
              <Description>"僵尸种数上限"</Description>
              <LastState Value="1000" RealAddress="00D7C000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>D7C000</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>278</ID>
              <Description>"植物种数上限"</Description>
              <LastState Value="2000" RealAddress="00D7C004"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>D7C004</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>407</ID>
              <Description>"小游戏关卡种数上限"</Description>
              <LastState Value="1000" RealAddress="00D7C008"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>D7C008</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>433</ID>
              <Description>"卷心菜投手发射坐标X轴偏移"</Description>
              <LastState Value="40" RealAddress="00D7C00C"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Double</VariableType>
              <Address>D7C00C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>436</ID>
              <Description>"卷心菜投手发射坐标Y轴偏移"</Description>
              <LastState Value="40" RealAddress="00D7C014"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Double</VariableType>
              <Address>D7C014</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>485</ID>
              <Description>"0.2浮点数"</Description>
              <LastState Value="0.200000003" RealAddress="00D7C01C"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>D7C01C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>610</ID>
              <Description>"植物指针内存占用上限"</Description>
              <LastState Value="00000200" RealAddress="00D7C020"/>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>D7C020</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>272</ID>
              <Description>"植物"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>273</ID>
                  <Description>"植物ID（+24下一个）"</Description>
                  <LastState Value="0" RealAddress="015AC000"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>15AC000</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>274</ID>
                  <Description>"植物动画类型（+24下一个）"</Description>
                  <LastState Value="4" RealAddress="015AC008"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>15AC008</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>275</ID>
                  <Description>"植物价格 (+24下一个）"</Description>
                  <LastState Value="100" RealAddress="015AC010"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>15AC010</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>276</ID>
                  <Description>"植物冷却时间 (+24下一个）"</Description>
                  <LastState Value="750" RealAddress="015AC014"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>15AC014</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>277</ID>
                  <Description>"植物射速 (+24下一个）"</Description>
                  <LastState Value="150" RealAddress="015AC01C"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>15AC01C</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"字符串组"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>8</ID>
          <Description>"原版字符串组"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>10</ID>
              <Description>"存档加载路径"</Description>
              <LastState RealAddress="006674B8"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>22</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>006674B8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>"游戏名称"</Description>
              <LastState RealAddress="006674D0"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>15</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>006674D0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>12</ID>
              <Description>"游戏程序名称"</Description>
              <LastState RealAddress="006674E0"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>18</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>006674E0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"主要音乐路径"</Description>
              <LastState RealAddress="006682F0"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>20</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>6682F0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>19</ID>
              <Description>"踩镲音乐路径"</Description>
              <LastState RealAddress="00668308"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>27</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>668308</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Enhance 普通版字符串组"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>91</ID>
              <Description>"伽刚特尔头盔图层ID"</Description>
              <LastState RealAddress="00794500"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>26</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+500</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>92</ID>
              <Description>"伽刚特尔下巴图层ID"</Description>
              <LastState RealAddress="00794600"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>20</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+600</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>95</ID>
              <Description>"标准僵尸头部图层ID"</Description>
              <LastState RealAddress="00794700"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>10</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+700</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>102</ID>
              <Description>"主要音乐2路径"</Description>
              <LastState Activated="1" RealAddress="00794800"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>20</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+800</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>103</ID>
              <Description>"踩镲音乐2路径"</Description>
              <LastState Activated="1" RealAddress="00794900"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>27</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+900</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>13</ID>
              <Description>"存档加载路径"</Description>
              <LastState RealAddress="00794000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>30</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>14</ID>
              <Description>"游戏名称"</Description>
              <LastState RealAddress="00794100"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>23</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+100</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"游戏程序名称"</Description>
              <LastState RealAddress="00794200"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>27</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+200</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>20</ID>
              <Description>"主要音乐路径"</Description>
              <LastState Activated="1" RealAddress="00794300"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>19</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+300</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"踩镲音乐路径"</Description>
              <LastState Activated="1" RealAddress="00794400"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>26</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+400</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>177</ID>
              <Description>"Debug模式变量名"</Description>
              <LastState RealAddress="00794A00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>9</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+A00</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>189</ID>
                  <Description>"Debug模式 无限阳光变量名"</Description>
                  <LastState RealAddress="00794D00"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>794000+D00</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>190</ID>
                  <Description>"Debug模式 无限金钱变量名"</Description>
                  <LastState RealAddress="00794E00"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>13</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>794000+E00</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>191</ID>
                  <Description>"Debug模式 僵尸不进家变量名"</Description>
                  <LastState RealAddress="00794F00"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>20</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>794000+F00</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>181</ID>
              <Description>"Expert模式变量名"</Description>
              <LastState RealAddress="00794B00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>10</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+B00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>182</ID>
              <Description>"Enhance模式变量名"</Description>
              <LastState RealAddress="00794C00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>11</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+C00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>192</ID>
              <Description>"无限字符串"</Description>
              <LastState RealAddress="00795000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>9</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1000</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>194</ID>
              <Description>"%s字符串"</Description>
              <LastState RealAddress="00795100"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>2</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1100</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>195</ID>
              <Description>"%d字符串"</Description>
              <LastState RealAddress="00795200"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>2</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1200</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>196</ID>
              <Description>"%Xd字符串"</Description>
              <LastState RealAddress="00795300"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>3</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1300</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>197</ID>
              <Description>"%Xf字符串"</Description>
              <LastState RealAddress="00795400"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>3</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1400</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>198</ID>
              <Description>"%%字符串"</Description>
              <LastState RealAddress="00795500"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>2</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1500</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>239</ID>
              <Description>"[NULL]字符串"</Description>
              <LastState RealAddress="00795600"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>6</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1600</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>249</ID>
              <Description>"[SURVIVAL_MOONLIT_NIGHT_NORMAL]字符串"</Description>
              <LastState RealAddress="00795700"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>29</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1700</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>250</ID>
              <Description>"[SURVIVAL_MOONLIT_NIGHT_HARD]字符串"</Description>
              <LastState RealAddress="00795800"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>27</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1800</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>251</ID>
              <Description>"[SURVIVAL_MOONLIT_NIGHT_ENDLESS]字符串"</Description>
              <LastState RealAddress="00795900"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>30</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1900</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>258</ID>
              <Description>"Pool_Wallnut_bowlingstripe贴图常量"</Description>
              <LastState RealAddress="00795A00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>32</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1A00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>266</ID>
              <Description>"anim_delth3动画图层字符串"</Description>
              <LastState RealAddress="00795B00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>11</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1B00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>270</ID>
              <Description>"Aquatic_Wallnut_body贴图常量"</Description>
              <LastState RealAddress="00795C00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1C00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>315</ID>
              <Description>"埃及主要音乐路径"</Description>
              <LastState Activated="1" RealAddress="00795D00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>25</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1D00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>350</ID>
              <Description>"植物僵尸3"</Description>
              <LastState RealAddress="00795E00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1E00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>351</ID>
              <Description>"孢子僵尸"</Description>
              <LastState RealAddress="00795F00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+1F00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>354</ID>
              <Description>"孢子僵尸2"</Description>
              <LastState RealAddress="00796000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>18</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2000</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>353</ID>
              <Description>"孢子僵尸3"</Description>
              <LastState RealAddress="00796100"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>18</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2100</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>394</ID>
              <Description>"医疗帽图层"</Description>
              <LastState RealAddress="00796200"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2200</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>397</ID>
              <Description>"anim_idle2动作轨道"</Description>
              <LastState RealAddress="00796300"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>10</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2300</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>398</ID>
              <Description>"anim_shooting2动作轨道"</Description>
              <LastState RealAddress="00796400"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>14</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2400</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>400</ID>
              <Description>"anim_head1动画轨道"</Description>
              <LastState RealAddress="00796500"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>10</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2500</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>401</ID>
              <Description>"Zombie_tie动画轨道"</Description>
              <LastState RealAddress="00796600"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>10</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2600</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>402</ID>
              <Description>"Zombie_neck动画轨道"</Description>
              <LastState RealAddress="00796700"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>11</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2700</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>405</ID>
              <Description>"Cabbagepult_cabbage动画轨道"</Description>
              <LastState RealAddress="00796800"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>19</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2800</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>411</ID>
              <Description>"anim_full_idle2动作轨道"</Description>
              <LastState RealAddress="00796900"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>15</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2900</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>412</ID>
              <Description>"Cornpult_butter动画轨道"</Description>
              <LastState RealAddress="00796A00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>15</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2a00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>413</ID>
              <Description>"Melonpult_mellon动画轨道"</Description>
              <LastState RealAddress="00796B00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2B00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>417</ID>
              <Description>"anim_shooting3动作轨道"</Description>
              <LastState RealAddress="00796C00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>14</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2C00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>418</ID>
              <Description>"anim_bite2动作轨道"</Description>
              <LastState RealAddress="00796D00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>14</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2D00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>419</ID>
              <Description>"anim_chew2动作轨道"</Description>
              <LastState RealAddress="00796E00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>14</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2E00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>420</ID>
              <Description>"anim_swallow2动作轨道"</Description>
              <LastState RealAddress="00796F00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>14</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+2F00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>451</ID>
              <Description>"DelayLoad_Background7资源组"</Description>
              <LastState RealAddress="00797000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>21</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3000</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>452</ID>
              <Description>"Background7贴图资源名"</Description>
              <LastState RealAddress="00797100"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>17</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3100</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>453</ID>
              <Description>"Background7门内贴图资源名"</Description>
              <LastState RealAddress="00797200"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>43</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3200</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>454</ID>
              <Description>"Background7门框贴图资源名"</Description>
              <LastState RealAddress="00797300"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>31</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3300</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>455</ID>
              <Description>"极冻先锋关卡名"</Description>
              <LastState RealAddress="00797400"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>31</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3400</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>472</ID>
              <Description>"Background7没有雪地贴图资源名"</Description>
              <LastState RealAddress="00797500"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>38</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3500</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>473</ID>
              <Description>"anim_idle动作轨道"</Description>
              <LastState RealAddress="00797600"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>9</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3600</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>474</ID>
              <Description>"Zombie_imp_jaw动画轨道"</Description>
              <LastState RealAddress="00797700"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>14</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3700</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>475</ID>
              <Description>"Zombie_imp_head动画轨道"</Description>
              <LastState RealAddress="00797800"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>15</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3800</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>488</ID>
              <Description>"IceShroom_base动画轨道"</Description>
              <LastState RealAddress="00797900"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>15</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3900</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>489</ID>
              <Description>"anim_earing动画轨道"</Description>
              <LastState RealAddress="00797A00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>15</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3A00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>515</ID>
              <Description>"水坚果"</Description>
              <LastState RealAddress="00797B00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>18</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3B00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>518</ID>
              <Description>"迪斯科僵尸动画加载路径"</Description>
              <LastState RealAddress="00797C00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>26</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3C00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>519</ID>
              <Description>"舞者僵尸动画加载路径"</Description>
              <LastState RealAddress="00797D00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>27</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3D00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>536</ID>
              <Description>"星小咕动画加载路径"</Description>
              <LastState RealAddress="00797E00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3E00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>537</ID>
              <Description>"星小咕名称"</Description>
              <LastState RealAddress="00797F00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>32</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+3F00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>538</ID>
              <Description>"僵尸狗动画加载路径"</Description>
              <LastState RealAddress="00798000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>35</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4000</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>539</ID>
              <Description>"僵尸狗名称"</Description>
              <LastState RealAddress="00798100"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>35</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4100</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>541</ID>
              <Description>"迪斯科僵尸名称"</Description>
              <LastState RealAddress="00798200"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>35</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4200</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>542</ID>
              <Description>"迪斯科舞伴僵尸名称"</Description>
              <LastState RealAddress="00798300"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>35</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4300</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>550</ID>
              <Description>"黑橄榄名称"</Description>
              <LastState RealAddress="00798400"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>44</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4400</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>549</ID>
              <Description>"黑橄榄动画加载路径"</Description>
              <LastState RealAddress="00798500"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>44</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4500</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>551</ID>
              <Description>"水坚果动画加载路径"</Description>
              <LastState RealAddress="00798600"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>44</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4600</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>552</ID>
              <Description>"爆炸坚果动画加载路径"</Description>
              <LastState RealAddress="00798700"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>44</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4700</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>553</ID>
              <Description>"水坚果本体贴图"</Description>
              <LastState RealAddress="00798800"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4800</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>554</ID>
              <Description>"水坚果本体贴图2阶段"</Description>
              <LastState RealAddress="00798900"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>37</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4900</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>555</ID>
              <Description>"水坚果本体贴图3阶段"</Description>
              <LastState RealAddress="00798A00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>37</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4A00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>557</ID>
              <Description>"爆炸坚果本体贴图"</Description>
              <LastState RealAddress="00798B00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>31</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4B00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>558</ID>
              <Description>"爆炸坚果本体贴图2阶段"</Description>
              <LastState RealAddress="00798C00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>35</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4C00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>559</ID>
              <Description>"爆炸坚果本体贴图3阶段"</Description>
              <LastState RealAddress="00798D00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>35</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4D00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>560</ID>
              <Description>"黑橄榄头盔贴图"</Description>
              <LastState RealAddress="00798E00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>41</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4E00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>561</ID>
              <Description>"黑橄榄头盔贴图2阶段"</Description>
              <LastState RealAddress="00798F00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>42</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+4F00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>562</ID>
              <Description>"黑橄榄头盔贴图3阶段"</Description>
              <LastState RealAddress="00799000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>42</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5000</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>563</ID>
              <Description>"黑橄榄左手套"</Description>
              <LastState RealAddress="00799100"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>47</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5100</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>564</ID>
              <Description>"迪斯科掉头贴图"</Description>
              <LastState RealAddress="00799200"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>21</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5200</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>565</ID>
              <Description>"迪斯科伴舞掉头贴图"</Description>
              <LastState RealAddress="00799300"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5300</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>566</ID>
              <Description>"黑橄榄掉头贴图"</Description>
              <LastState RealAddress="00799400"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>28</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5400</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>567</ID>
              <Description>"迪斯科断手贴图"</Description>
              <LastState RealAddress="00799500"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>45</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5500</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>568</ID>
              <Description>"迪斯科断手图层"</Description>
              <LastState RealAddress="00799600"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>27</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5600</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>569</ID>
              <Description>"迪斯科伴舞断手贴图"</Description>
              <LastState RealAddress="00799700"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>46</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5700</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>570</ID>
              <Description>"迪斯科伴舞断手图层"</Description>
              <LastState RealAddress="00799800"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>27</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5800</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>571</ID>
              <Description>"寒冰僵尸子弹贴图"</Description>
              <LastState RealAddress="00799900"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>29</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5900</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>579</ID>
              <Description>"泳池僵王放僵尸 - 行1动画轨道"</Description>
              <LastState RealAddress="00799A00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>17</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5A00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>585</ID>
              <Description>"泳池僵王放僵尸 - 行2动画轨道"</Description>
              <LastState RealAddress="00799B00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>17</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5B00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>584</ID>
              <Description>"泳池僵王放僵尸 - 行3动画轨道"</Description>
              <LastState RealAddress="00799C00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>17</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5C00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>583</ID>
              <Description>"泳池僵王放僵尸 - 行4动画轨道"</Description>
              <LastState RealAddress="00799D00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>17</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5D00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>582</ID>
              <Description>"泳池僵王放僵尸 - 行5动画轨道"</Description>
              <LastState RealAddress="00799E00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>17</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5E00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>581</ID>
              <Description>"泳池僵王放僵尸 - 行6动画轨道"</Description>
              <LastState RealAddress="00799F00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>17</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+5F00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>586</ID>
              <Description>"泳池僵王待机轨道"</Description>
              <LastState RealAddress="0079A000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>17</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6000</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>588</ID>
              <Description>"泳池僵王入场轨道"</Description>
              <LastState RealAddress="0079A100"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>17</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6100</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>592</ID>
              <Description>"孢子菇动画加载路径"</Description>
              <LastState RealAddress="0079A200"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6200</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>593</ID>
              <Description>"孢子菇名称"</Description>
              <LastState RealAddress="0079A300"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6300</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>594</ID>
              <Description>"泳池僵王低头动画轨道"</Description>
              <LastState RealAddress="0079A400"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6400</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>597</ID>
              <Description>"泳池僵王土球行1动画轨道"</Description>
              <LastState RealAddress="0079A500"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6500</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>598</ID>
              <Description>"泳池僵王土球行2动画轨道"</Description>
              <LastState RealAddress="0079A600"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6600</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>599</ID>
              <Description>"泳池僵王土球行3动画轨道"</Description>
              <LastState RealAddress="0079A700"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6700</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>600</ID>
              <Description>"泳池僵王土球行4动画轨道"</Description>
              <LastState RealAddress="0079A800"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6800</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>601</ID>
              <Description>"泳池僵王土球行5动画轨道"</Description>
              <LastState RealAddress="0079A900"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6900</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>602</ID>
              <Description>"泳池僵王土球行6动画轨道"</Description>
              <LastState RealAddress="0079AA00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>33</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6A00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>627</ID>
              <Description>"寒冰双发射手动画加载路径"</Description>
              <LastState RealAddress="0079AB00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>35</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6B00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>628</ID>
              <Description>"寒冰机枪射手动画加载路径"</Description>
              <LastState RealAddress="0079AC00"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>36</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>794000+6C00</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>609</ID>
      <Description>"扩指针"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>608</ID>
          <Description>"植物扩指针 - 原版 955C00"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
define(Max,#2048)
D7C020:
dd 200
955C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
originalcode:
push [D7C020]
sub [esp],4

exit:
jmp returnhere

newmem_2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_2:
push [D7C020]
sub [esp],4

exit_2:
jmp returnhere_2

newmem_3: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_3:
push ecx
mov ecx,[D7C020]
sub ecx,4
test [eax+ecx],edx
pop ecx
exit_3:
jmp returnhere_3

newmem_4: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_4:
push ecx
mov ecx,[D7C020]
sub ecx,4
movzx edx,word ptr [eax+ecx]
pop ecx
exit_4:
jmp returnhere_4

newmem_5: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_5:
push ebx
mov ebx,[D7C020]
sub ebx,4
mov [eax+ebx],ecx
pop ebx
exit_5:
jmp returnhere_5

newmem_6: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_6:
push ecx
mov ecx,[D7C020]
sub ecx,4
test dword ptr [eax+ecx],edi
pop ecx
exit_6:
jmp returnhere_6

newmem_7: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_7:
mov edx,[D7C020]
sub edx,4
lea edx,[ecx+edx]
mov edx,[eax+edx]

exit_7:
jmp returnhere_7

newmem_8: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_8:
push [D7C020]
sub [esp],4

exit_8:
jmp returnhere_8

newmem_9: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_9:
push ecx
mov ecx,[D7C020]
sub ecx,4
mov dword ptr [edi+ecx],eax
pop ecx
exit_9:
jmp returnhere_9

newmem_10: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_10:
push ebx
mov ebx,[D7C020]
sub ebx,4
cmp dword ptr [eax+ebx],ecx
pop ebx
exit_10:
jmp returnhere_10

newmem_11: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_11:
push ebx
mov ebx,[D7C020]
sub ebx,4
test dword ptr [ecx+ebx],edi
pop ebx
exit_11:
jmp returnhere_11

newmem_12: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_12:
push eax
mov eax,[D7C020]
sub eax,4
movzx ebp,word ptr [ecx+eax]
pop eax
exit_12:
jmp returnhere_12

newmem_13: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_13:
push eax
mov eax,[D7C020]
sub eax,4
mov dword ptr [ecx+eax],edx
pop eax
exit_13:
jmp returnhere_13

newmem_14: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_14:
push ecx
mov ecx,[D7C020]
sub ecx,4
mov eax,dword ptr [esi+ecx]
pop ecx
exit_14:
jmp returnhere_14

newmem_15: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_15:
push ecx
mov ecx,[D7C020]
sub ecx,4
test dword ptr [eax+ecx],edx
pop ecx

exit_15:
jmp returnhere_15

newmem_16: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_16:
push ecx
mov ecx,[D7C020]
sub ecx,4
mov eax,dword ptr [eax+ecx]
pop ecx
exit_16:
jmp returnhere_16

newmem_17: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_17:
push edi
mov edi,[D7C020]
sub edi,4
mov ecx,dword ptr [eax+edi]
pop edi
exit_17:
jmp returnhere_17

newmem_18: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_18:
push ecx
mov ecx,[D7C020]
sub ecx,4
cmp dword ptr [esi+ecx],edx
pop ecx
exit_18:
jmp returnhere_18

newmem_19: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_19:
push esi
mov esi,[D7C020]
sub esi,4
cmp dword ptr [ebx+esi],ecx
pop esi
exit_19:
jmp returnhere_19

newmem_20: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_20:
push ecx
mov ecx,[D7C020]
sub ecx,4
cmp dword ptr [eax+ecx],edx
pop ecx
exit_20:
jmp returnhere_20

newmem_21: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_21:
push ecx
mov ecx,[D7C020]
sub ecx,4
cmp dword ptr [eax+ecx],edx
pop ecx
exit_21:
jmp returnhere_21

newmem_22: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_22:
imul esi,[D7C020]
push esi //push 400*14C
mov esi,Max
exit_22:
jmp returnhere_22

newmem_23: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_23:
imul eax,[D7C020]

exit_23:
jmp returnhere_23

newmem_24: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_24:
add eax,[D7C020]

exit_24:
jmp returnhere_24

newmem_25: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_25:
imul ecx,[D7C020]

exit_25:
jmp returnhere_25

newmem_26: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_26:
add eax,[D7C020]

exit_26:
jmp returnhere_26

newmem_27: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_27:
add eax,[D7C020]

exit_27:
jmp returnhere_27

newmem_28: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_28:
imul ecx,[D7C020]

exit_28:
jmp returnhere_28

newmem_29: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_29:
add eax,[D7C020]

exit_29:
jmp returnhere_29

newmem_30: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_30:
imul eax,[D7C020]

exit_30:
jmp returnhere_30

newmem_31: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_31:
imul edi,[D7C020]

exit_31:
jmp returnhere_31

newmem_32: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_32:
imul eax,[D7C020]

exit_32:
jmp returnhere_32

newmem_33: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_33:
add ecx,[D7C020]

exit_33:
jmp returnhere_33

newmem_34: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_34:
imul edx,[D7C020]

exit_34:
jmp returnhere_34

newmem_35: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_35:
imul edx,[D7C020]

exit_35:
jmp returnhere_35

newmem_36: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_36:
add ecx,[D7C020]

exit_36:
jmp returnhere_36

newmem_37: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_37:
imul edx,[D7C020]

exit_37:
jmp returnhere_37

newmem_38: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_38:
imul edx,[D7C020]

exit_38:
jmp returnhere_38

newmem_39: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_39:
imul esi,[D7C020]

exit_39:
jmp returnhere_39

newmem_40: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_40:
add eax,[D7C020]

exit_40:
jmp returnhere_40

newmem_41: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_41:
imul ecx,[D7C020]

exit_41:
jmp returnhere_41

newmem_42: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_42:
add eax,[D7C020]

exit_42:
jmp returnhere_42

newmem_43: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_43:
imul eax,[D7C020]

exit_43:
jmp returnhere_43

newmem_44: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_44:
imul eax,[D7C020]

exit_44:
jmp returnhere_44

newmem_45: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_45:
imul eax,[D7C020]

exit_45:
jmp returnhere_45

newmem_46: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode_46:
imul eax,[D7C020]

exit_46:
jmp returnhere_46

401AAB:
jmp newmem
returnhere:

401C07:
jmp newmem_2
returnhere_2:

41BB15:
jmp newmem_3
nop
returnhere_3:

41BB30:
jmp newmem_4
nop 2
returnhere_4:

41BB43:
jmp newmem_5
nop
returnhere_5:

41C980:
jmp newmem_6
nop
returnhere_6:

41DEA1:
jmp newmem_7
nop 2
returnhere_7:

41DEB5:
jmp newmem_8
returnhere_8:

41DECA:
jmp newmem_9
nop
returnhere_9:

41DF19:
jmp newmem_10
nop
returnhere_10:

41E5C0:
jmp newmem_11
nop
returnhere_11:

41E5E7:
jmp newmem_12
nop 2
returnhere_12:

41E5F4:
jmp newmem_13
nop
returnhere_13:

4663E3:
jmp newmem_14
nop
returnhere_14:

481D25:
jmp newmem_15
nop
returnhere_15:

51F6A0:
jmp newmem_16
nop
returnhere_16:

524D35:
jmp newmem_17
nop
returnhere_17:

524DBE:
jmp newmem_18
nop
returnhere_18:

52CBCC:
jmp newmem_19
nop
returnhere_19:

530439:
jmp newmem_20
nop
returnhere_20:

5304AB:
jmp newmem_21
nop
returnhere_21:

407CC1:
jmp newmem_22
returnhere_22:

407CBC:
mov esi,Max

4109F4:
jmp newmem_23
nop
returnhere_23:

41BAEC:
jmp newmem_24
returnhere_24:

41BAFD:
jmp newmem_25
nop
returnhere_25:

41BB1D:
jmp newmem_26
returnhere_26:

41C964:
jmp newmem_27
returnhere_27:

41C96F:
jmp newmem_28
nop
returnhere_28:

41C988:
jmp newmem_29
returnhere_29:

41DE9B:
jmp newmem_30
nop
returnhere_30:

41DEAD:
jmp newmem_31
nop
returnhere_31:

41DF0F:
jmp newmem_32
nop
returnhere_32:

41E5A8:
jmp newmem_33
nop
returnhere_33:

41E5B1:
jmp newmem_34
nop
returnhere_34:

41E5CB:
jmp newmem_35
nop
returnhere_35:

41E5D3:
jmp newmem_36
nop
returnhere_36:

438ACB:
jmp newmem_37
nop
returnhere_37:

438F32:
jmp newmem_38
nop
returnhere_38:

48235C:
jmp newmem_39
nop
returnhere_39:

481CFC:
jmp newmem_40
returnhere_40:

481D07:
jmp newmem_41
nop
returnhere_41:

481D2D:
jmp newmem_42
returnhere_42:

524DB4:
jmp newmem_43
nop
returnhere_43:

52CBBE:
jmp newmem_44
nop
returnhere_44:

530431:
jmp newmem_45
nop
returnhere_45:

5304A3:
jmp newmem_46
nop
returnhere_46:
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
/*
148为原版植物所占用的内存，14C是下一柱植物
*/

//AlmanacDialog::SetupPlant：

401AAB:
push 148

//AlmanacDialog::SetPage：

401C07:
push 148
call 0061C130
add esp,04
cmp eax,ebx

//Board::Board：

407CBC:
mov esi,400

407CC1:
push 53000 //push 400*15C

//Board::MouseDownWithPlant：

4109F4:
imul eax,14C

//Board::ProcessDeleteQueue：

41BAEC:
add eax,14C

41BAFD:
imul ecx,14C

41BB15:
test [eax+148],edx

41BB1D:
add eax,14C

41BB30:
movzx edx,word ptr [eax+148]

41BB43:
mov [eax+148],ecx

//Board::IteratePlants：

41C964:
add eax,14C

41C96F:
imul ecx,14C

41C980:
test dword ptr [eax+148],edi

41C988:
add eax,14C

//DataArray&lt;Plant&gt;::DataArrayAlloc：

41DE9B:
imul eax,14C

41DEA1:
mov edx,dword ptr [eax+ecx+148]

41DEAD:
imul edi,14C

41DEB5:
push 148

41DECA:
mov dword ptr [edi+148],eax

//DataArray&lt;Plant&gt;::DataArrayTryToGet：

41DF0F:
imul eax,14C

41DF19:
cmp dword ptr [eax+0x148],ecx

//DataArray&lt;Plant&gt;::DataArrayFreeAll：

41E5A8:
add ecx,14C

41E5B1:
imul edx,14C

41E5C0:
test dword ptr [ecx+148],edi

41E5CB:
imul edx,14C

41E5D3:
add ecx,14C

41E5E7:
movzx ebp,word ptr [ecx+148]

41E5F4:
mov dword ptr [ecx+148],edx

//CursorObject::Draw：

438ACB:
imul edx,14C

//CursorPreview::Draw：

438F32:
imul edx,14C

//Plant::MouseDown：

4663E3:
mov eax,dword ptr [esi+148]

//SyncDataArray&lt;Plant&gt;：

48235C:
imul esi,14C

//FixBoardAfterLoad：

481CFC:
add eax,14C

481D07:
imul ecx,14C

481D25:
test dword ptr [eax+148],edx

481D2D:
add eax,14C

//ZenGarden::MouseDownWithTool：

51F6A0:
mov eax,dword ptr [eax+148]

//Zombie::BungeeStealTarget：

524D35:
mov ecx,dword ptr [eax+148]

//Zombie::BungeeLiftTarget：

524DB4:
imul eax,14C

524DBE:
cmp dword ptr [esi+148],edx

//Zombie::DrawBungeeReanim：

52CBBE:
imul eax,14C

52CBCC:
cmp dword ptr [ebx+148],ecx

//Zombie::BungeeDropPlant：

530431:
imul eax,14C

530439:
cmp dword ptr [eax+148],edx

//Zombie::BungeeDie：

5304A3:
imul eax,14C

5304AB:
cmp dword ptr [eax+148],edx
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>234</ID>
      <Description>"注入组"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>236</ID>
          <Description>"常量 - 迷你游戏关卡初始化"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,4000)
createthread(newmem)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
lea edi,[011B4000]
lea ebx,[edi+20]
mov esi,[D7C000]
mov ecx,0
start:
mov eax,ecx
lea ebp,[esi+24]
imul eax,ebp
mov ebp,0
mov [edi+eax+0],1
mov [edi+eax+4],0
mov [edi+eax+8],795600
mov [edi+eax+10],1
mov [edi+eax+14],#10
mov [edi+eax+18],#800
mov [edi+eax],ecx
cmp eax,#51
jge az
add [edi+eax],2
az:
start2:
lea edx,[eax+ebp]
mov byte ptr [ebx+edx],0
mov byte ptr [ebx+eax+0],1
add ebp,1
cmp ebp,esi
jle start2
add ecx,1
cmp ecx,#1000
jle start
lea ebp,[esi+24]
Survival_Day:
mov eax,#1
imul eax,ebp
mov [edi+eax+4],#0
mov [edi+eax+14],#10
mov [edi+eax+10],1
Survival_Night:
mov eax,#2
imul eax,ebp
mov [edi+eax+4],#1
mov [edi+eax+14],#10
mov [edi+eax+10],2
Survival_Pool:
mov eax,#3
imul eax,ebp
mov [edi+eax+4],#2
mov [edi+eax+14],#10
mov [edi+eax+10],3
Survival_Fog:
mov eax,#4
imul eax,ebp
mov [edi+eax+4],#3
mov [edi+eax+14],#10
mov [edi+eax+10],4
Survival_Roof:
mov eax,#5
imul eax,ebp
mov [edi+eax+4],#4
mov [edi+eax+14],#10
mov [edi+eax+10],5
Survival_Day_Hard:
mov eax,#6
imul eax,ebp
mov [edi+eax+4],#5
mov [edi+eax+14],#20
mov [edi+eax+10],1
Survival_Night_Hard:
mov eax,#7
imul eax,ebp
mov [edi+eax+4],#6
mov [edi+eax+10],2
mov [edi+eax+14],#20
Survival_Pool_Hard:
mov eax,#8
imul eax,ebp
mov [edi+eax+4],#7
mov [edi+eax+10],3
mov [edi+eax+14],#20
Survival_Fog_Hard:
mov eax,#9
imul eax,ebp
mov [edi+eax+4],#8
mov [edi+eax+10],4
mov [edi+eax+14],#20
Survival_Roof_Hard:
mov eax,#10
imul eax,ebp
mov [edi+eax+4],#9
mov [edi+eax+10],5
mov [edi+eax+14],#20
Survival_Day_Endless:
mov eax,#11
imul eax,ebp
mov [edi+eax+4],#10
mov [edi+eax+8],6577D0
mov [edi+eax+10],1
mov [edi+eax+14],#40
Survival_Night_Endless:
mov eax,#12
imul eax,ebp
mov [edi+eax+4],#11
mov [edi+eax+8],6577B4
mov [edi+eax+10],2
mov [edi+eax+14],#40
Survival_Pool_Endless:
mov eax,#13
imul eax,ebp
mov [edi+eax+4],#12
mov [edi+eax+10],3
mov [edi+eax+14],#40
Survival_Fog_Endless:
mov eax,#14
imul eax,ebp
mov [edi+eax+4],#13
mov [edi+eax+8],657784
mov [edi+eax+10],4
mov [edi+eax+14],#40
Survival_Roof_Endless:
mov eax,#15
imul eax,ebp
mov [edi+eax+4],#14
mov [edi+eax+8],65776C
mov [edi+eax+10],5
mov [edi+eax+14],#40
ZomBotany:
mov eax,#16
imul eax,ebp
mov [edi+eax+8],65775C
mov [edi+eax+14],#20
mov byte ptr [ebx+eax+0],0
mov byte ptr [ebx+eax+1A],1
mov byte ptr [ebx+eax+1B],1
mov byte ptr [ebx+eax+25],1
mov byte ptr [ebx+eax+26],1
mov byte ptr [ebx+eax+27],1
Wall-nut_Bowling:
mov eax,#17
imul eax,ebp
mov [edi+eax+4],#6
mov [edi+eax+8],657748
mov [edi+eax+14],#20
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+3],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+5],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
Slot_Machine:
mov eax,#18
imul eax,ebp
mov [edi+eax+4],#2
mov [edi+eax+8],657738
mov [edi+eax+14],#50
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+7],1
It,s_Raining:
mov eax,#19
imul eax,ebp
mov [edi+eax+4],#3
mov [edi+eax+8],657724
mov [edi+eax+10],4
mov [edi+eax+14],#40
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+3],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+5],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
mov byte ptr [ebx+eax+B],1
mov byte ptr [ebx+eax+E],1
mov byte ptr [ebx+eax+F],1
mov byte ptr [ebx+eax+10],1
mov byte ptr [ebx+eax+11],1
mov byte ptr [ebx+eax+12],1
mov byte ptr [ebx+eax+14],1
mov byte ptr [ebx+eax+15],1
Beghouled:
mov eax,#20
imul eax,ebp
mov [edi+eax+4],#1
mov [edi+eax+8],657718
mov [edi+eax+10],2
mov [edi+eax+14],#50
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+5],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
Invisi-ghoul:
mov eax,#21
imul eax,ebp
mov [edi+eax+4],#8
mov [edi+eax+8],657708
mov [edi+eax+10],4
mov [edi+eax+14],#30
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+B],1
mov byte ptr [ebx+eax+C],1
mov byte ptr [ebx+eax+D],1
mov byte ptr [ebx+eax+E],1
mov byte ptr [ebx+eax+F],1
Seeing_Stars:
mov eax,#22
imul eax,ebp
mov [edi+eax+4],#5
mov [edi+eax+8],6576F8
mov [edi+eax+14],#50
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+3],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
Zombieuarium:
mov eax,#23
imul eax,ebp
mov [edi+eax+4],#7
mov [edi+eax+8],6576E8
mov [edi+eax+10],6
mov [edi+eax+14],#10
Beghouled_Twist:
mov eax,#24
imul eax,ebp
mov [edi+eax+4],#1
mov [edi+eax+8],6576D4
mov [edi+eax+10],2
mov [edi+eax+14],#50
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+5],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
mov byte ptr [ebx+eax+8],1
mov byte ptr [ebx+eax+F],1
Big_Trouble_Little_Zombie:
mov eax,#25
imul eax,ebp
mov [edi+eax+4],#12
mov [edi+eax+8],6576C0
mov [edi+eax+10],3
mov [edi+eax+14],#30
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
mov byte ptr [ebx+eax+B],1
mov byte ptr [ebx+eax+E],1
Portal_Combat:
mov eax,#26
imul eax,ebp
mov [edi+eax+4],#15
mov [edi+eax+8],6576B0
mov [edi+eax+10],2
mov [edi+eax+14],#20
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+7],1
Column_Like_you_see,em:
mov eax,#27
imul eax,ebp
mov [edi+eax+4],#4
mov [edi+eax+8],657698
mov [edi+eax+10],5
mov [edi+eax+14],#50
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+7],1
mov byte ptr [ebx+eax+12],1
mov byte ptr [ebx+eax+14],1
Bobsled_Bonanza:
mov eax,#28
imul eax,ebp
mov [edi+eax+4],#17
mov [edi+eax+8],657684
mov [edi+eax+10],3
mov [edi+eax+14],#50
mov byte ptr [ebx+eax+0],0
mov byte ptr [ebx+eax+C],1
mov byte ptr [ebx+eax+D],1
Zombie_Nemble_Zombie_Quick:
mov eax,#29
imul eax,ebp
mov [edi+eax+4],#18
mov [edi+eax+8],657670
mov [edi+eax+10],3
mov [edi+eax+14],#40
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+3],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+7],1
mov byte ptr [ebx+eax+B],1
mov byte ptr [ebx+eax+C],1
mov byte ptr [ebx+eax+D],1
mov byte ptr [ebx+eax+E],1
mov byte ptr [ebx+eax+12],1
mov byte ptr [ebx+eax+17],1
mov byte ptr [ebx+eax+20],1
Whack_a_Zombie:
mov eax,#30
imul eax,ebp
mov [edi+eax+4],#16
mov [edi+eax+8],65765C
mov [edi+eax+10],2
mov [edi+eax+14],#15
Last_Stand:
mov eax,#31
imul eax,ebp
mov [edi+eax+4],#21
mov [edi+eax+8],65764C
mov [edi+eax+10],3
mov [edi+eax+14],#20
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+5],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
mov byte ptr [ebx+eax+B],1
mov byte ptr [ebx+eax+C],1
mov byte ptr [ebx+eax+D],1
mov byte ptr [ebx+eax+E],1
ZomBotany_2:
mov eax,#32
imul eax,ebp
mov [edi+eax+4],#22
mov [edi+eax+8],657638
mov [edi+eax+10],3
mov [edi+eax+14],#30
mov byte ptr [ebx+eax+0],0
mov byte ptr [ebx+eax+1A],1
mov byte ptr [ebx+eax+1B],1
mov byte ptr [ebx+eax+1C],1
mov byte ptr [ebx+eax+1D],1
mov byte ptr [ebx+eax+1E],1
mov byte ptr [ebx+eax+1F],1
mov byte ptr [ebx+eax+25],1
Wall-nut_Bowing_2:
mov eax,#33
imul eax,ebp
mov [edi+eax+4],#23
mov [edi+eax+8],65761C
mov [edi+eax+10],3
mov [edi+eax+14],#30
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+3],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+5],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
mov byte ptr [ebx+eax+8],1
mov byte ptr [ebx+eax+E],1
Pogo_Party:
mov eax,#34
imul eax,ebp
mov [edi+eax+4],#14
mov [edi+eax+8],65760C
mov [edi+eax+10],5
mov [edi+eax+14],#30
mov byte ptr [ebx+eax+0],0
mov byte ptr [ebx+eax+8],1
mov byte ptr [ebx+eax+12],1
mov byte ptr [ebx+eax+2F],1
mov byte ptr [ebx+eax+30],1
Dr,Zombieboss,s_Revenge:
mov eax,#35
imul eax,ebp
mov [edi+eax+4],#19
mov [edi+eax+8],6575FC
mov [edi+eax+10],7
mov [edi+eax+14],#10
Art_Challenge_Wall-nut:
mov eax,#36
imul eax,ebp
mov [edi+eax+8],6575E0
mov [edi+eax+14],#20
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
Sunny_Day:
mov eax,#37
imul eax,ebp
mov [edi+eax+8],6575D4
mov [edi+eax+14],#20
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+3],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+5],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
Unsodded:
mov eax,#38
imul eax,ebp
mov [edi+eax+8],6575C8
mov [edi+eax+14],#20
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+3],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+F],1
Big_Time:
mov eax,#39
imul eax,ebp
mov [edi+eax+8],6575BC
mov [edi+eax+10],5
mov [edi+eax+14],#20
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+3],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+7],1
mov byte ptr [ebx+eax+C],1
mov byte ptr [ebx+eax+F],1
mov byte ptr [ebx+eax+14],1
mov byte ptr [ebx+eax+17],1
mov byte ptr [ebx+eax+20],1
Art_Challenge_Sunflowy:
mov eax,#40
imul eax,ebp
mov [edi+eax+8],6575A0
mov [edi+eax+14],#20
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+8],1
mov byte ptr [ebx+eax+C],1
Air_Raid:
mov eax,#41
imul eax,ebp
mov [edi+eax+8],657594
mov [edi+eax+10],3
mov [edi+eax+14],#40
mov byte ptr [ebx+eax+0],0
mov byte ptr [ebx+eax+10],1
Ice_Level:
mov eax,#42
imul eax,ebp
mov [edi+eax+8],657588
mov [edi+eax+10],1
mov [edi+eax+14],#10
Zen_Garden:
mov eax,#43
imul eax,ebp
mov [edi+eax+8],657578
mov [edi+eax+10],8
mov [edi+eax+14],#10
high_Gravity:
mov eax,#44
imul eax,ebp
mov [edi+eax+8],657568
mov [edi+eax+10],5
mov [edi+eax+14],#20
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+3],1
mov byte ptr [ebx+eax+14],1
mov byte ptr [ebx+eax+16],1
mov byte ptr [ebx+eax+17],1
Grave_Danager:
mov eax,#45
imul eax,ebp
mov [edi+eax+8],657558
mov [edi+eax+10],2
mov [edi+eax+14],#30
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+5],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
Can_you_Dig_it?:
mov eax,#46
imul eax,ebp
mov [edi+eax+8],657544
mov [edi+eax+10],1
mov [edi+eax+14],#30
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+5],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
Dark_Stormy_Night:
mov eax,#47
imul eax,ebp
mov [edi+eax+8],657530
mov [edi+eax+10],4
mov [edi+eax+14],#40
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+5],1
mov byte ptr [ebx+eax+6],1
mov byte ptr [ebx+eax+7],1
mov byte ptr [ebx+eax+C],1
mov byte ptr [ebx+eax+D],1
mov byte ptr [ebx+eax+E],1
mov byte ptr [ebx+eax+F],1
mov byte ptr [ebx+eax+10],1
mov byte ptr [ebx+eax+11],1
mov byte ptr [ebx+eax+12],1
mov byte ptr [ebx+eax+13],1
mov byte ptr [ebx+eax+14],1
Bungee_Blitz:
mov eax,#48
imul eax,ebp
mov [edi+eax+8],657520
mov [edi+eax+10],5
mov [edi+eax+14],#40
mov byte ptr [ebx+eax+2],1
mov byte ptr [ebx+eax+3],1
mov byte ptr [ebx+eax+4],1
mov byte ptr [ebx+eax+7],1
mov byte ptr [ebx+eax+8],1
mov byte ptr [ebx+eax+17],1
Vasebreaker:
mov eax,#51
imul eax,ebp
mov [edi+eax],#51
mov [edi+eax+4],#10
mov [edi+eax+8],6574F0
mov [edi+eax+10],2
To_the_Left:
mov eax,#52
imul eax,ebp
mov [edi+eax],#52
mov [edi+eax+4],#10
mov [edi+eax+8],6574DC
mov [edi+eax+10],2
Third_Vase:
mov eax,#53
imul eax,ebp
mov [edi+eax],#53
mov [edi+eax+4],#10
mov [edi+eax+8],6574C8
mov [edi+eax+10],2
Chain_Reaction:
mov eax,#54
imul eax,ebp
mov [edi+eax],#54
mov [edi+eax+4],#10
mov [edi+eax+8],6574B4
mov [edi+eax+10],2
M_is_for_Metal:
mov eax,#55
imul eax,ebp
mov [edi+eax],#55
mov [edi+eax+4],#10
mov [edi+eax+8],6574A0
mov [edi+eax+10],2
Scary_Potter:
mov eax,#56
imul eax,ebp
mov [edi+eax],#56
mov [edi+eax+4],#10
mov [edi+eax+8],65748C
mov [edi+eax+10],2
Hokey_Pokey:
mov eax,#57
imul eax,ebp
mov [edi+eax],#57
mov [edi+eax+4],#10
mov [edi+eax+8],657478
mov [edi+eax+10],2
Another_Chain_Reaction:
mov eax,#58
imul eax,ebp
mov [edi+eax],#58
mov [edi+eax+4],#10
mov [edi+eax+8],657464
mov [edi+eax+10],2
_Ace_of_vase:
mov eax,#59
imul eax,ebp
mov [edi+eax],#59
mov [edi+eax+4],#10
mov [edi+eax+8],657450
mov [edi+eax+10],2
Vasebreaker_Endless:
mov eax,#60
imul eax,ebp
mov [edi+eax],#60
mov [edi+eax+4],#10
mov [edi+eax+8],657438
mov [edi+eax+10],2
I,Zombie:
mov eax,#61
imul eax,ebp
mov [edi+eax],#61
mov [edi+eax+4],#11
mov [edi+eax+8],657428
mov [edi+eax+10],2
I,Zombie_Too:
mov eax,#62
imul eax,ebp
mov [edi+eax],#62
mov [edi+eax+4],#11
mov [edi+eax+8],657418
mov [edi+eax+10],2
Can_You_Did_It?:
mov eax,#63
imul eax,ebp
mov [edi+eax],#63
mov [edi+eax+4],#11
mov [edi+eax+8],657408
mov [edi+eax+10],2
Totally_Nuts:
mov eax,#64
imul eax,ebp
mov [edi+eax],#64
mov [edi+eax+4],#11
mov [edi+eax+8],6573F8
mov [edi+eax+10],2
_Dead_Zeppelin:
mov eax,#65
imul eax,ebp
mov [edi+eax],#65
mov [edi+eax+4],#11
mov [edi+eax+8],6573E8
mov [edi+eax+10],2
Me_Smash!:
mov eax,#66
imul eax,ebp
mov [edi+eax],#66
mov [edi+eax+4],#11
mov [edi+eax+8],6573D8
mov [edi+eax+10],2
ZomBoogie:
mov eax,#67
imul eax,ebp
mov [edi+eax],#67
mov [edi+eax+4],#11
mov [edi+eax+8],6573C8
mov [edi+eax+10],2
Three_Hit_Wonder:
mov eax,#68
imul eax,ebp
mov [edi+eax],#68
mov [edi+eax+4],#11
mov [edi+eax+8],6573B8
mov [edi+eax+10],2
All_your_brainz_r_belong_to_us:
mov eax,#69
imul eax,ebp
mov [edi+eax],#69
mov [edi+eax+4],#11
mov [edi+eax+8],6573A8
mov [edi+eax+10],2
I,Zombie_Endless:
mov eax,#70
imul eax,ebp
mov [edi+eax],#70
mov [edi+eax+4],#11
mov [edi+eax+8],657394
mov [edi+eax+10],2
Intro:
mov eax,#72
imul eax,ebp
mov [edi+eax],#72
mov [edi+eax+8],65775C
mov [edi+eax+10],7
Enhance:
ZomBotany3:
mov eax,#73
imul eax,ebp
mov [edi+eax],#73
mov [edi+eax+4],#25
mov [edi+eax+8],795E00
mov [edi+eax+10],5
mov [edi+eax+14],#40
mov byte ptr [ebx+eax+0],0
mov byte ptr [ebx+eax+1B],1
mov byte ptr [ebx+eax+1C],1
mov byte ptr [ebx+eax+1E],1
mov byte ptr [ebx+eax+1F],1
mov byte ptr [ebx+eax+21],1
mov byte ptr [ebx+eax+22],1
mov byte ptr [ebx+eax+23],1
mov byte ptr [ebx+eax+24],1
mov byte ptr [ebx+eax+25],1
ZomSporology:
mov eax,#74
imul eax,ebp
mov [edi+eax],#74
mov [edi+eax+4],#25
mov [edi+eax+8],795F00
mov [edi+eax+10],2
mov [edi+eax+14],#30
mov byte ptr [ebx+eax+0],0
mov byte ptr [ebx+eax+29],1
mov byte ptr [ebx+eax+2A],1
mov byte ptr [ebx+eax+2B],1
mov byte ptr [ebx+eax+2C],1
mov byte ptr [ebx+eax+2D],1
mov byte ptr [ebx+eax+2E],1
ZomSporology2:
mov eax,#75
imul eax,ebp
mov [edi+eax],#75
mov [edi+eax+4],#25
mov [edi+eax+8],796000
mov [edi+eax+10],4
mov [edi+eax+14],#40
mov byte ptr [ebx+eax+0],0
mov byte ptr [ebx+eax+29],1
mov byte ptr [ebx+eax+2A],1
mov byte ptr [ebx+eax+2B],1
mov byte ptr [ebx+eax+2C],1
mov byte ptr [ebx+eax+2D],1
mov byte ptr [ebx+eax+2E],1
ZomSporology3:
mov eax,#76
imul eax,ebp
mov [edi+eax],#76
mov [edi+eax+4],#25
mov [edi+eax+8],796100
mov [edi+eax+10],7
mov [edi+eax+14],#60
mov byte ptr [ebx+eax+0],0
mov byte ptr [ebx+eax+29],1
mov byte ptr [ebx+eax+2A],1
mov byte ptr [ebx+eax+2B],1
mov byte ptr [ebx+eax+2C],1
mov byte ptr [ebx+eax+2D],1
mov byte ptr [ebx+eax+2E],1
TrueIceLevel:
mov eax,#77
imul eax,ebp
mov [edi+eax],#77
mov [edi+eax+4],#25
mov [edi+eax+8],797400
mov [edi+eax+10],9
mov [edi+eax+14],#30
mov byte ptr [ebx+eax+0],0
mov byte ptr [ebx+eax+1B],1
mov byte ptr [ebx+eax+1C],1
mov byte ptr [ebx+eax+1E],1
mov byte ptr [ebx+eax+1F],1
mov byte ptr [ebx+eax+21],1
mov byte ptr [ebx+eax+22],1
mov byte ptr [ebx+eax+23],1
mov byte ptr [ebx+eax+24],1
mov byte ptr [ebx+eax+25],1
mov byte ptr [ebx+eax+29],1
mov byte ptr [ebx+eax+2A],1
mov byte ptr [ebx+eax+2B],1
TrueIceLevel2:
mov eax,#78
imul eax,ebp
mov [edi+eax],#78
mov [edi+eax+4],#25
mov [edi+eax+8],797400
mov [edi+eax+10],1
mov [edi+eax+14],#30
mov byte ptr [ebx+eax+31],1
popad
ret

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
//push ebx
//mov esi,ebp
//call 00403BB0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>271</ID>
          <Description>"常量 - 植物初始化"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,4000)
createthread(newmem)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
lea edi,[15AC000]
lea ebx,[69F2B0]
mov esi,0
start:
lea eax,[esi+esi*8]
lea eax,[eax*4]
push [ebx+eax+0]
pop [edi+eax+0]
push [ebx+eax+8]
pop [edi+eax+8]
push [ebx+eax+10]
pop [edi+eax+10]
push [ebx+eax+14]
pop [edi+eax+14]
push [ebx+eax+18]
pop [edi+eax+18]
push [ebx+eax+1C]
pop [edi+eax+1C]
push [ebx+eax+20]
pop [edi+eax+20]
add esi,1
cmp esi,#52
jle start
Aquatic_Wall-nut:
mov esi,#80
lea eax,[esi+esi*8]
lea eax,[eax*4]
mov [edi+eax+0],esi
mov [edi+eax+8],#149
mov [edi+eax+10],#25
mov [edi+eax+14],#2500
mov [edi+eax+18],0
mov [edi+eax+1C],0
mov [edi+eax+20],797B00
Starfruit21:
mov esi,#81
lea eax,[esi+esi*8]
lea eax,[eax*4]
mov [edi+eax+0],esi
mov [edi+eax+8],#150
mov [edi+eax+10],#25
mov [edi+eax+14],#2500
mov [edi+eax+18],0
mov [edi+eax+1C],0
mov [edi+eax+20],797F00
Spore-Shroom:
mov esi,#82
lea eax,[esi+esi*8]
lea eax,[eax*4]
mov [edi+eax+0],esi
mov [edi+eax+8],#151
mov [edi+eax+10],#25
mov [edi+eax+14],#2500
mov [edi+eax+18],0
mov [edi+eax+1C],0
mov [edi+eax+20],79A300
SnowPeaDouble:
mov esi,#83
lea eax,[esi+esi*8]
lea eax,[eax*4]
mov [edi+eax+0],esi
mov [edi+eax+8],#152
mov [edi+eax+10],#25
mov [edi+eax+14],#2500
mov [edi+eax+18],0
mov [edi+eax+1C],0
mov [edi+eax+20],79A300
GatlingSnowPea:
mov esi,#84
lea eax,[esi+esi*8]
lea eax,[eax*4]
mov [edi+eax+0],esi
mov [edi+eax+8],#153
mov [edi+eax+10],#25
mov [edi+eax+14],#2500
mov [edi+eax+18],0
mov [edi+eax+1C],0
mov [edi+eax+20],79A300
popad
ret

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
//push ebx
//mov esi,ebp
//call 00403BB0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>364</ID>
          <Description>"常量 - 僵尸初始化"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
163B000+21*1C:
dd #33 #21 #1 #1 #1 #4000 66E9C8
dd #34 #21 #1 #1 #1 #2000 66E9C8
dd #35 #21 #3 #1 #4 #1500 66E9C8
dd #36 #21 #4 #1 #6 #1000 66E9C8
dd #37 #21 #2 #1 #4 #2000 66E9C8
dd #38 #21 #2 #1 #4 #2000 66E9C8
dd #39 #21 #2 #1 #4 #2000 66E9C8
dd #40 #21 #2 #1 #4 #2000 66E9C8
dd #41 #57 #1 #1 #1 #4000 66E9C8
dd #42 #56 #10 #1 #10 #2500 66E9C8
dd #43 #21 #5 #1 #5 #3500 66E9C8
dd #44 #51 #5 #1 #5 #1000 66E9C8
dd #45 #62 #1 #1 #1 #0 66E9C8
dd #46 #62 #1 #1 #1 #0 66E9C8
dd #47 #144 #5 #1 #5 #1000 798200
dd #48 #145 #1 #1 #1 #0 798300
dd #49 #147 #1 #1 #1 #4000 798100
dd #50 #21 #1 #1 #1 #4000 798100
dd #51 #148 #7 #1 #6 #1000 798400
alloc(newmem,4000)
createthread(newmem)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
lea edi,[163B000]
lea ebx,[69DA80]
mov esi,0
start:
mov eax,esi
imul eax,1C
push [ebx+eax+0]
pop [edi+eax+0]
push [ebx+eax+4]
pop [edi+eax+4]
push [ebx+eax+8]
pop [edi+eax+8]
push [ebx+eax+10]
pop [edi+eax+10]
push [ebx+eax+14]
pop [edi+eax+14]
push [ebx+eax+18]
pop [edi+eax+18]
add esi,1
cmp esi,#32
jle start
popad
ret

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
//push ebx
//mov esi,ebp
//call 00403BB0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>517</ID>
          <Description>"常量 - 动画定义初始化"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,4000)
createthread(newmem)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
lea edi,[15BE000]
lea ebx,[6A1340]
mov ecx,0
start:
lea eax,[ecx*4]
lea eax,[eax+eax*2]
push [ebx+eax+0]
pop [edi+eax+0]
push [ebx+eax+4]
pop [edi+eax+4]
push [ebx+eax+8]
pop [edi+eax+8]
add ecx,1
cmp ecx,#143
jle start
popad
ret
15BE000+C*90: //新动画表
dd #144 797C00 #1
dd #145 797D00 #1
dd #146 797E00 #1
dd #147 798000 #1
dd #148 798500 #1
dd #149 798600 #1
dd #150 798700 #1
dd #151 79A200 #1
dd #152 79AB00 #1
dd #153 79AC00 #1
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>520</ID>
              <Description>"新动画加载申请内存 94F000"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
define(Max,9A)
94F000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
xor ecx,ecx
xor ebx,ebx
mov eax,esi
mov edx,00000010
mul edx
seto cl
mov [esp+00000144],ebx
mov [006A9EEC],esi
mov [006A9EF0],015BE000
mov [006A9EE4],esi
neg ecx
or ecx,eax
mov eax,esi
add eax,1
imul eax,10
push eax
jmp 4737B4

exit:
jmp returnhere

473782:
jmp newmem
nop
returnhere:
47379F:
mov [006A9EF0],15BE000//006A1340
4737F4:
mov edi,15BE000+4
47377D:
mov esi,Max
48153A:
cmp ecx,Max
4814F1:
cmp esi,Max-1
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
473782:
db 33 C9 33 DB 8B C6
//xor ecx,ecx
//xor ebx,ebx
//mov eax,esi
47377D:
mov esi,#143
48153A:
cmp ecx,#143
4814F1:
cmp esi,#142
4737F4:
mov edi,006A1344
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>359</ID>
      <Description>"锁定进入的小游戏"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,#74
mov fs:[00000000],esp

exit:
jmp returnhere

44F56E:
jmp newmem
nop 6
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
44F56E:
db 8B 44 24 10 64 89 25 00 00 00 00
//mov eax,[esp+10]
//mov fs:[00000000],esp
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>631</ID>
      <Description>"锁定生成植物"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esp],#84
originalcode:
push ebp
mov ebp,esp
and esp,-08

exit:
jmp returnhere

45DB60:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
45DB60:
db 55 8B EC 83 E4 F8
//push ebp
//mov ebp,esp
//and esp,-08
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>399</ID>
      <Description>"锁定生成僵尸"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esp+8],#44
originalcode:
push ebp
mov ebp,esp
and esp,-08

exit:
jmp returnhere

522580:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
522580:
db 55 8B EC 83 E4 F8
//push ebp
//mov ebp,esp
//and esp,-08
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>408</ID>
      <Description>"ChallengeScreen类"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>406</ID>
          <Description>"扩小游戏总数"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add ebx,01
cmp ebx,[D7C008]

exit:
jmp returnhere

42F4DC:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
42F4DC:
db 83 C3 01 83 FB 49
//add ebx,01
//cmp ebx,49
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>441</ID>
          <Description>"扩小游戏总数2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea edi,[ebp+000000A0]
mov esi,0
CreateButtonStart:
push esi
push edi
mov edi,[D7C000]
add edi,24
imul esi,edi
add esi,11B4000
pop edi
push 00000120
call 0061C130
add esp,04
mov [esp+00000094],eax
cmp eax,ebx
mov byte ptr [esp+00000084],07
je CreateButton_1
mov edx,[esp+00000090]
lea ecx,[ebp+00000088]
push ecx
add edx,000000C8
push edx
push eax
call 0053F200
jmp CreateButton_2
CreateButton_1:
xor eax,eax
CreateButton_2:
mov [esp+00000084],bl
mov [edi],eax
mov byte ptr [eax+7C],01
mov eax,[edi]
mov byte ptr [eax+00000102],01
mov eax,[esi]
cmp eax,01
je CreateButton_3
cmp eax,02
je CreateButton_3
cmp eax,03
je CreateButton_3
mov eax,[esi+14]
mov ecx,[edi]
imul eax,eax,00000091
mov edx,[ecx]
mov edx,[edx+000000A0]
push 73
add eax,7D
push 68
push eax
mov eax,[esi+18]
imul eax,eax,0000009B
add eax,26
push eax
call edx
jmp CreateButton_4
CreateButton_3:
mov edx,[esi+14]
mov ecx,[edi]
imul edx,edx,77
mov eax,[ecx]
mov eax,[eax+000000A0]
push 73
add edx,5D
push 68
push edx
mov edx,[esi+18]
imul edx,edx,0000009B
add edx,26
push edx
call eax
CreateButton_4:
mov eax,[esp+00000090]
mov ecx,ebp
call 0042E440
test eax,eax
je CreateButton_5
mov ecx,[edi]
mov [ecx+7C],bl
mov edx,[edi]
mov byte ptr [edx+56],01
CreateButton_5:
add dword ptr [esp+00000090],01
add edi,04
pop esi
add esi,1
cmp esi,[D7C008]
jle CreateButtonStart

jmp 42E070
originalcode:
mov esi,006A2BA8

exit:
jmp returnhere

42DF79:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
42DF79:
db BE A8 2B 6A 00
//mov esi,006A2BA8
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>577</ID>
      <Description>"僵王6路修复"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>578</ID>
          <Description>"僵王初始化创建 952800"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
952800:
ZombieBossInitialize:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fldz
mov eax,000002BC
mov [edi+0000008C],eax
fst dword ptr [edi+2C]
mov ecx,00000050
fstp dword ptr [edi+30]
mov [edi+00000090],ecx
xor eax,eax
mov [edi+0000009C],eax
mov edx,0000005A
mov [edi+00000094],edx
xor edx,edx
xor ecx,ecx
mov [edi+000000A0],ecx
mov ecx,[edi]
mov [edi+000000A4],edx
mov esi,000001AE
mov [edi+00000098],esi
mov [edi+000000A8],ebx
mov edx,[ecx+000007F8]
neg edx
sbb edx,edx
and edx,00004E20
add edx,00009C40
mov eax,edi
mov [esp+14],00061A80
mov [edi+000000C8],edx
call 0052AE40
fld dword ptr [00679388]
test al,al
push ecx
fstp dword ptr [esp]
push ebx
je ZombieBoss_IsOnBorad
push 03
push 00667940
mov eax,[edi+4]
call 41C0D0
test al,al
je no_pool
mov [esp],79A100
no_pool:
call 00528B00
mov eax,edi
mov [edi+00000114],000001F4
mov [edi+0000013C],00001388
mov [edi+28],0000004E
call 005367F0
jmp 00523E4E
ZombieBoss_IsOnBorad:
push ebx
push 00668C34
call 00528B00
mov eax,edi
call 005367F0
jmp 00523E4E

originalcode:


exit:
jmp returnhere

5235BE:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5235BE:
db D9 EE B8 BC 02 00 00
//fldz 
//mov eax,000002BC
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>580</ID>
          <Description>"僵王放僵尸动画修复及放僵尸修复 952C00"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
952C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
mov [esi+F4],0
mov [esi+130],0
//读取僵尸前奏
cmp [esi+F8],#5
jge ZombieCone
mov edi,0
jmp SpawnZombieStart3
ZombieCone:
cmp [esi+F8],#10
jge ZombieBucket
mov edi,2
jmp SpawnZombieStart3
ZombieBucket:
cmp [esi+F8],#15
jge SpawnZombieStart4
mov edi,4
jmp SpawnZombieStart3
SpawnZombieStart4:
//开始选取僵尸
mov eax,0
SwitchZombie:
cmp [eax*8+ZombieList],-1
je SpawnZombieStart
add eax,1
jmp SwitchZombie
//僵尸总数读取完毕
SpawnZombieStart:
mov [esi+F4],eax
SpawnZombieStart2:
mov eax,[esi+F4]
call 5AF400
mov ebp,eax //获取僵尸序列
mov edi,[ebp*8+ZombieList] //根据僵尸序列获取僵尸ID
mov eax,[ebp*8+4+ZombieList]
call 5AF400
test eax,eax
jne SpawnZombieStart2
SpawnZombieStart3:
//选取僵尸完毕，判断是不是泳池
mov eax,[esi+4]
call 41C0D0
test al,al
jne SwitchZombiInPool
mov eax,5
call 5AF400
jmp SwitchZombieRow
//判断僵尸能否下水
SwitchZombiInPool:
mov eax,edi
call 532060
test al,al
je SwitchZombiNoInPool
cmp edi,0
je _be_launched
cmp edi,#2
je _be_launched
cmp edi,#4
je _be_launched
cmp edi,#10
je _be_launched
cmp edi,#26
je _be_launched
cmp edi,#27
je _be_launched
cmp edi,#28
je _be_launched
cmp edi,#29
je _be_launched
cmp edi,#30
je _be_launched
cmp edi,#31
je _be_launched
cmp edi,#33
je _be_launched
cmp edi,#34
je _be_launched
cmp edi,#35
je _be_launched
cmp edi,#36
je _be_launched
cmp edi,#37
je _be_launched
cmp edi,#38
je _be_launched
cmp edi,#39
je _be_launched
cmp edi,#40
je _be_launched
mov eax,2
call 5AF400
mov eax,[eax*4+PoolRow]
jmp SwitchZombieRow
_be_launched:
mov eax,6
call 5AF400
jmp SwitchZombieRow
SwitchZombiNoInPool:
mov eax,4
call 5AF400
mov eax,[eax*4+PoolLandRow]
SwitchZombieRow:
mov [esi+130],eax
mov ecx,eax
mov [esi+F4],edi
mov eax,[esi+4]
call 41C0D0
test al,al
jne Pool
cmp ecx,0
jle row1
cmp ecx,#1
je row2
cmp ecx,#2
je row3
cmp ecx,#3
je row4
cmp ecx,#4
jge row5
row1:
mov eax,66F454
jmp retrun
row2:
mov eax,66F464
jmp retrun
row3:
mov eax,66F474
jmp retrun
row4:
mov eax,66F484
jmp retrun
row5:
mov eax,66F494
jmp retrun
Pool:
cmp ecx,0
jle Pool_row1
cmp ecx,#1
je Pool_row2
cmp ecx,#2
je Pool_row3
cmp ecx,#3
je Pool_row4
cmp ecx,#4
je Pool_row5
cmp ecx,#5
jge Pool_row6
Pool_row1:
mov eax,799A00
jmp retrun
Pool_row2:
mov eax,799B00
jmp retrun
Pool_row3:
mov eax,799C00
jmp retrun
Pool_row4:
mov eax,799D00
jmp retrun
Pool_row5:
mov eax,799E00
jmp retrun
Pool_row6:
mov eax,799F00
jmp retrun
retrun:
mov [esp+4*7],eax
popad
add [esi+F8],1
jmp 534D30
originalcode:



exit:
jmp returnhere
ZombieList:
dd #4 #4
dd #5 #1
dd #6 #1
dd #7 #2
dd #8 #4
dd #19 #5000
dd #18 #1
dd #21 #1
dd #12 #2
dd #23 #4
dd #26 #2
dd #27 #2
dd #28 #10
dd #29 #8
dd #30 #6
dd #31 #8
dd #32 #20
dd #33 #2
dd #34 #22
dd #35 #8
dd #36 #8
dd #37 #4
dd #38 #4
dd #40 #10
dd #41 #8
dd #42 #15
dd #43 #4
dd #44 #8
dd #47 #12
dd #51 #6
dd #-1 #1
PoolLandRow:
dd 0 1 4 5
PoolRow:
dd 2 3
534CF7:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
534CF7:
db 83 F8 04 89 86 30 01 00 00
//cmp eax,04
//mov [esi+00000130],eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>587</ID>
          <Description>"僵王待机动画修复 953C00"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
953C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[edi+4]
call 41C0D0
test al,al
pop eax
jne pool
originalcode:
push 006580D4

exit:
jmp returnhere
pool:
push 79A000
jmp exit
534945:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
534945:
db 68 D4 80 65 00
//push 006580D4
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>589</ID>
          <Description>"僵王放僵尸优化 954000"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
954000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+F4]
mov ecx,[esi+00000130]
originalcode:
push ecx
push eax
mov eax,[esi+04]

exit:
jmp returnhere

534E10:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
534E10:
db 51 50 8B 46 04
//push ecx
//push eax
//mov eax,[esi+04]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>590</ID>
          <Description>"僵尸可下水修复 954400"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
954400:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#33
je 0053209E
cmp eax,#34
je 0053209E
cmp eax,#35
je 0053209E
cmp eax,#36
je 0053209E
cmp eax,#37
je 0053209E
cmp eax,#38
je 0053209E
cmp eax,#39
je 0053209E
cmp eax,#40
je 0053209E
originalcode:
test eax,eax
je 0053209E
cmp eax,02

exit:
jmp returnhere

532060:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
532060:
db 85 C0 74 3A 83 F8 02
//test eax,eax
//je 0053209E
//cmp eax,02
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>591</ID>
          <Description>"僵尸下水修复 954800"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
954800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push esi
push edi
call 532060
test al,al
jne 0052F8BA
jmp 52F9AA
originalcode:
test eax,eax
je 0052F8BA

exit:
jmp returnhere

52F879:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
52F879:
db 85 C0 56 57 74 3B
//test eax,eax
//push esi
//push edi
//je 0052F8BA
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>595</ID>
          <Description>"泳池僵王低头修复 954C00"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
954C00:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push 0066F50C
push eax
mov eax,[edi+4]
call 41C0D0
test al,al
pop eax
je originalcode
mov [esp],79A400
originalcode:


exit:
jmp returnhere

5353CA:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
5353CA:
db 68 0C F5 66 00
//push 0066F50C
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>596</ID>
          <Description>"僵王土球修复 955000"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
955000:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
mov [edi+28],00000059
mov [edi+148],0
mov [edi+14C],0
mov [esp+4*7],66F51C
mov esi,[edi+4]
mov eax,2
call 005AF400
mov [edi+14C],al
mov eax,esi
call 41C0D0
test al,al
jne 6Row
mov eax,5
call 5AF400
mov ebp,eax
mov [edi+148],ebp
lea eax,[5D8+eax*4]
mov eax,[esi+eax]
cmp eax,2
jne RowNotInPool
mov [edi+14C],0
RowNotInPool:
cmp ebp,0
jle Row1
cmp ebp,1
je Row2
cmp ebp,2
je Row3
cmp ebp,3
je Row4
cmp ebp,4
jge Row5
Row1:
mov eax,66F51C
jmp retrun
Row2:
mov eax,66F530
jmp retrun
Row3:
mov eax,66F530
jmp retrun
Row4:
mov eax,66F530
jmp retrun
Row5:
mov eax,66F530
jmp retrun
6Row:
mov eax,6
call 5AF400
mov ebp,eax
mov [edi+148],ebp
lea eax,[5D8+eax*4]
mov eax,[esi+eax]
cmp eax,2
jne 6RowNotInPool
mov [edi+14C],0
6RowNotInPool:
cmp ebp,0
jle 6Row1
cmp ebp,1
je 6Row2
cmp ebp,2
je 6Row3
cmp ebp,3
je 6Row4
cmp ebp,4
je 6Row5
cmp ebp,5
jge 6Row6
6Row1:
mov eax,79A500
jmp retrun
6Row2:
mov eax,79A600
jmp retrun
6Row3:
mov eax,79A700
jmp retrun
6Row4:
mov eax,79A800
jmp retrun
6Row5:
mov eax,79A900
jmp retrun
6Row6:
mov eax,79AA00
jmp retrun
retrun:
mov [esp+4*7],eax

popad
jmp 005354E9
originalcode:
mov eax,00000005

exit:
jmp returnhere

535484:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
535484:
db B8 05 00 00 00
//mov eax,00000005
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>603</ID>
          <Description>"全部僵王绘制修复 955400"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
955400:
//绘制全部僵王
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,[ebx]
test edi,edi
je 0041732E
cmp byte ptr [edi+18],00
je 0041732E
fild dword ptr [edi+08]
mov esi,[ebp+0C]
mov edx,[edi+FC]
add [edi+FC],1
pushad
mov ebp,edi
mov edx,[ebp+4]
mov edx,[edx+0000008C]
mov ecx,[ebp+00000140]
mov edx,[edx+00000820]
mov edx,[edx+08]
add eax,04
test ecx,ecx
je noBall
popad
cmp [edi+FC],4
jle az
jmp az2
noBall:
popad
cmp [edi+FC],3
jle az
az2:
mov [edi+FC],0
az:
push edx
fadd dword ptr [esi+08]
mov ebx,esi
fstp dword ptr [esi+08]
fild dword ptr [edi+0C]
fadd dword ptr [esi+0C]
fstp dword ptr [esi+0C]
call 00536940
fld dword ptr [esi+08]
fisub [edi+08]
fstp dword ptr [esi+08]
fld dword ptr [esi+0C]
fisub [edi+0C]
fstp dword ptr [esi+0C]
jmp 0041732A

/*
pushad
push 0
StartDraw:
mov edx,[ebp+8]
lea esi,[esp]
call 41C8F0
test al,al
je EndDraw
mov edi,[esi]
cmp [edi+24],#25
jne StartDraw
cmp byte ptr [edi+18],00
je StartDraw
fild dword ptr [edi+08]
mov esi,[ebp+0C]
mov edx,[ebx]
push ebx
push edx
fadd [esi+08]
mov ebx,esi
fstp [esi+08]
fild [edi+0C]
fadd [esi+0C]
fstp [esi+0C]
call 536940
pop ebx
fld [esi+08]
fisub [edi+08]
fstp [esi+08]
fld [esi+0C]
fisub [edi+0C]
fstp [esi+0C]
jmp StartDraw
EndDraw:
pop esi
popad
mov ebx,[esp+14]
add ebx,0C
sub dword ptr [esp+10],01
mov [esp+14],ebx
mov eax,[ebx-08]
cmp eax,18
jne 00416FA0
jmp 417340
*/
originalcode:
mov edx,[ebp+08]
call 0041D390

exit:
jmp returnhere

41711A:
jmp newmem
nop 3
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
41711A:
db 8B 55 08 E8 6E 62 00 00
//mov edx,[ebp+08]
//call 0041D390
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>607</ID>
          <Description>"记录绘制僵王的编号 955800"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(returnhere)
label(originalcode)
label(exit)
955800:
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea ecx,[eax+eax*2]
mov [ebx+ecx*4],00000016
mov [ebx+ecx*4+8],ebp
lea ecx,[ebx+ecx*4]
add esi,0004AF3A
mov [ecx+04],esi
add edx,0004AF3A
lea ecx,[eax+eax*2+03]
mov [ebx+ecx*4+04],edx
mov [ebx+ecx*4],00000016
mov [ebx+ecx*4+08],ebp
lea ecx,[ebx+ecx*4]
lea edx,[eax+eax*2+06]
lea ecx,[ebx+edx*4]
mov edx,[esp+18]
mov [ecx],00000016
mov [ecx+04],00054B7A
mov [ecx+08],ebp
lea ecx,[eax+eax*2+09]
lea ecx,[ebx+ecx*4]
add edi,0004AF3B
mov [ecx+04],edi
mov edi,[esp+1C]
mov [ecx],00000016
mov [ecx+08],ebp
mov edx,[edx+0000008C]
mov ecx,[ebp+00000140]
mov edx,[edx+00000820]
mov edx,[edx+08]
add eax,04
test ecx,ecx
mov [edi],eax
je return
movzx esi,cx
cmp esi,[edx+08]
jae return
lea esi,[esi+esi*4]
shl esi,05
add esi,[edx]
cmp [esi+0000009C],ecx
jne return
lea ecx,[eax+eax*2]
lea ebx,[ebx+ecx*4]
mov [ebx],00000016
mov edx,[esi+68]
add eax,01
mov [ebx+04],edx
mov [ebx+08],ebp
mov [edi],eax
return:
pop edi
pop esi
pop ebp
pop ebx
pop ecx
ret 000C

originalcode:



exit:
jmp returnhere

41679E:
jmp newmem
nop 5
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
41679E:
db 8D 0C 40 C7 04 8B 16 00 00 00
//lea ecx,[eax+eax*2]
//mov [ebx+ecx*4],00000016
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>615</ID>
      <Description>"出怪点数修改"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,[edi+0000008C]
mov edx,[eax+000007F8]
lea ecx,[ebx+1]
jmp 409758
exit:
jmp returnhere

40969E:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
40969E:
db 8B 87 8C 00 00 00
//mov eax,[edi+0000008C]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>618</ID>
      <Description>"无描述"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>21E0BB0C+13C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>625</ID>
      <Description>"无描述"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>251AE820+150</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>629</ID>
      <Description>"无描述"</Description>
      <LastState Value="13" RealAddress="015AC0BC"/>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>15AC000+24*5+8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>630</ID>
      <Description>"无描述"</Description>
      <LastState Value="0" RealAddress="0019FB00"/>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0019FAF8+4+4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>635</ID>
      <Description>"无描述"</Description>
      <LastState RealAddress="00666494"/>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>String</VariableType>
      <Length>10</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>6A9EF0</Address>
      <Offsets>
        <Offset>0</Offset>
        <Offset>4+18*10</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>gLawnApp</Name>
      <Address>006A9EC0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>run</Name>
      <Address>00940000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>main</Name>
      <Address>00BA0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CreateSun</Name>
      <Address>008C0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"PlantsVsZombies.exe"+10A94</Address>
      <Comment>-1
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"PlantsVsZombies.exe"+10A95</Address>
      <Comment>id
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"PlantsVsZombies.exe"+10A96</Address>
      <Comment>y
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"PlantsVsZombies.exe"+10A9A</Address>
      <Comment>x
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"PlantsVsZombies.exe"+12AFBF</Address>
      <Comment>僵尸x坐标
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"PlantsVsZombies.exe"+12AFC7</Address>
      <Comment>僵尸y坐标
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
